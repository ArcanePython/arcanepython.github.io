{"version":3,"sources":["mouselistener.ts","node_modules/twgl.js/dist/4.x/twgl-full.module.js","camhandler.ts","stridedmesh0.ts","stridedmesh.ts","boneanimation.ts","trianglesmesh.ts","fish.ts","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../src/dat/index.js","baseapp.ts","skeleton.ts","animationclock.ts","fishanimation.ts","node_modules/chroma-js/chroma.js","manytextures.ts","manytexturescene.ts","drawimagespace.ts","animation1.ts","skyboxcube.ts","node_modules/webgl-obj-loader/dist/webgl-obj-loader.min.js","matobjreader.ts","matobjfiles.ts","objmtlimport.ts","mixedtexturescene.ts","basescene.ts","lightscene.ts","objectnode.ts","src/resources/blockguy.json","objectlist.ts","objectlistscene.ts","drawinstanced.ts","canvas3dtexture.ts","canvas3dtexturescene.ts","drawinstancedscene.ts","skyboxscene.ts","skyboxcubescene.ts","indexAnimations.ts"],"names":["VecType","Float32Array","setDefaultType","ctor","oldType","create","x","y","z","dst","add","a","b","subtract","lerp","t","lerpV","max","Math","min","mulScalar","v","k","divScalar","cross","t1","t2","dot","length$1","sqrt","lengthSq","distance","dx","dy","dz","distanceSq","normalize","lenSq","len","negate","copy","multiply","divide","v3","Object","freeze","__proto__","length","MatType","setDefaultType$1","negate$1","m","create$1","fill","copy$1","identity","transpose","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t3","d","multiply$1","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","setTranslation","getTranslation","getAxis","axis","off","setAxis","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","tan","PI","rangeInv","ortho","left","right","bottom","top","near","far","frustum","xAxis","yAxis","zAxis","lookAt","eye","target","up","translation","translate","v0","v1","v2","rotationX","angleInRadians","c","cos","s","sin","rotateX","rotationY","rotateY","rotationZ","rotateZ","axisRotation","n","xx","yy","zz","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","scale","transformPoint","transformDirection","transformNormal","mi","m4","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","glTypeToTypedArray","tt","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","getGLTypeForTypedArray","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","type","CTOR","isArrayBuffer","SharedArrayBuffer","isArrayBufferOrSharedArrayBuffer","buffer","ArrayBuffer","typedarrays","copyNamedProperties","names","src","forEach","name","value","undefined","copyExistingProperties","keys","key","hasOwnProperty","error","args","console","warn","isBuffer","gl","WebGLBuffer","isRenderbuffer","WebGLRenderbuffer","isShader","WebGLShader","isTexture","WebGLTexture","isSampler","WebGLSampler","STATIC_DRAW","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","BUFFER_SIZE","BYTE$1","UNSIGNED_BYTE$1","SHORT$1","UNSIGNED_SHORT$1","INT$1","UNSIGNED_INT$1","FLOAT$1","defaults","attribPrefix","setAttributePrefix","prefix","setDefaults","newDefaults","setBufferFromTypedArray","array","drawType","bindBuffer","bufferData","createBufferFromTypedArray","createBuffer","isIndices","getNormalizationForTypedArray","getNormalizationForTypedArrayType","getArray","data","texcoordRE","colorRE","guessNumComponentsFromName","numComponents","test","getNumComponents","arrayName","size","makeTypedArray","Array","isArray","Type","createAttribsFromArrays","arrays","attribs","attribName","attrib","normalization","numValues","arrayType","numBytes","BYTES_PER_ELEMENT","stride","offset","divisor","setAttribInfoBufferFromArray","attribInfo","bufferSubData","getBytesPerValueForGLType","positionKeys","getNumElementsFromNonIndexedArrays","ii","numElements","getNumElementsFromAttributes","getBufferParameter","bytesPerValue","totalElements","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","indices","newIndices","elementType","createBufferFromArray","createBuffersFromArrays","buffers","attributes","setAttributeDefaults_","getNumComponents_","getArray_","getArray$1","getNumComponents$1","augmentTypedArray","cursor","push","arguments","jj","reset","opt_index","defineProperty","get","createAugmentedTypedArray","opt_type","allButIndices","deindexVertices","vertices","newVertices","expandToUnindexed","channel","srcBuffer","dstBuffer","constructor","ndx","filter","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","applyFuncToV3Array","matrix","fn","tmp","transformNormal$1","reorientDirections","reorientNormals","reorientPositions","reorientVertices","indexOf","createXYQuadVertices","xOffset","yOffset","position","texcoord","createPlaneVertices","width","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","u","numVertsAcross","createSphereVertices","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","numVertsAround","CUBE_FACE_INDICES","createCubeVertices","cornerVertices","faceNormals","uvCoords","faceIndices","uv","createTruncatedConeVertices","bottomRadius","topRadius","height","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","start","end","ringRadius","expandRLEData","rleData","padding","runLength","element","slice","apply","create3DFVertices","colors","numVerts","color","createCrescentVertices","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","createCylinderVertices","createTorusVertices","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","nextRingIndex","nextSliceIndex","createDiscVertices","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","i","randInt","random","makeRandomVertexColors","options","vColors","rand","numVertsPerColor","vertsPerColor","numSets","createBufferFunc","prototype","call","createBufferInfoFunc","arraySpecPropertyNames","copyElements","dstNdx","createArrayOfSameType","srcArray","arraySrc","newArray","newArraySpec","concatVertices","arrayOfArrays","baseName","arrayInfo","getLengthOfCombinedArrays","arraySpec","spec","copyArraysToNewArray","base","baseIndex","newArrays","info","duplicateVertices","create3DFBufferInfo","create3DFBuffers","createCubeBufferInfo","createCubeBuffers","createPlaneBufferInfo","createPlaneBuffers","createSphereBufferInfo","createSphereBuffers","createTruncatedConeBufferInfo","createTruncatedConeBuffers","createXYQuadBufferInfo","createXYQuadBuffers","createCrescentBufferInfo","createCrescentBuffers","createCylinderBufferInfo","createCylinderBuffers","createTorusBufferInfo","createTorusBuffers","createDiscBufferInfo","createDiscBuffers","createCresentBufferInfo","createCresentBuffers","createCresentVertices","primitives","isWebGL2","texStorage2D","isWebGL1","glEnumToString","haveEnumsForType","enums","addEnums","existing","toString","utils","defaults$1","textureColor","textureOptions","crossOrigin","isArrayBuffer$1","getShared2DContext","s_ctx","document","createElement","getContext","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","CLAMP_TO_EDGE","NEAREST","LINEAR","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","UNPACK_ALIGNMENT","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","R8","R8_SNORM","R16F","R32F","R8UI","R8I","RG16UI","RG16I","RG32UI","RG32I","RG8","RG8_SNORM","RG16F","RG32F","RG8UI","RG8I","R16UI","R16I","R32UI","R32I","RGB8","SRGB8","RGB565","RGB8_SNORM","R11F_G11F_B10F","RGB9_E5","RGB16F","RGB32F","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGBA8","SRGB8_ALPHA8","RGBA8_SNORM","RGB5_A1","RGBA4","RGB10_A2","RGBA16F","RGBA32F","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","DEPTH24_STENCIL8","BYTE$2","UNSIGNED_BYTE$2","SHORT$2","UNSIGNED_SHORT$2","INT$2","UNSIGNED_INT$2","FLOAT$2","UNSIGNED_SHORT_4_4_4_4$1","UNSIGNED_SHORT_5_5_5_1$1","UNSIGNED_SHORT_5_6_5$1","HALF_FLOAT$1","HALF_FLOAT_OES","UNSIGNED_INT_2_10_10_10_REV$1","UNSIGNED_INT_10F_11F_11F_REV$1","UNSIGNED_INT_5_9_9_9_REV$1","FLOAT_32_UNSIGNED_INT_24_8_REV$1","UNSIGNED_INT_24_8$1","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","formatInfo","numColorComponents","s_textureInternalFormatInfo","getTextureInternalFormatInfo","internalFormat","textureFormat","colorRenderable","textureFilterable","bytesPerElement","bytesPerElementMap","getBytesPerElementForInternalFormat","getFormatAndTypeForInternalFormat","format","isPowerOf2","canGenerateMipmap","canFilter","getNumComponentsForFormat","getTextureTypeForArrayType","defaultType","guessDimensions","setDefaultTextureColor","setDefaults$1","setPackState","colorspaceConversion","pixelStorei","premultiplyAlpha","flipY","setSkipStateToDefault","setTextureSamplerParameters","parameteriFn","minMag","mag","wrap","wrapR","wrapS","wrapT","minLod","maxLod","baseLevel","maxLevel","setTextureParameters","tex","bindTexture","texParameteri","setSamplerParameters","sampler","samplerParameteri","createSampler","createSamplers","samplerOptions","samplers","make1Pixel","setTextureFilteringForSize","generateMipmap","filtering","shouldAutomaticallySetTextureFilteringForSize","auto","level","getCubeFaceOrder","cubeFaceOrder","getCubeFacesWithNdx","faces","facesWithNdx","map","face","sort","setTextureFromElement","formatType","imgWidth","imgHeight","slices","nodeName","ctx","canvas","drawImage","texImage2D","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","noop","urlIsSameOrigin","url","href","hostname","location","port","protocol","localOrigin","URL","origin","urlOrigin","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","loadImage","callback","img","Image","clearEventHandlers","removeEventListener","onError","onLoad","msg","addEventListener","ImageBitmap","err","bm","cb","mode","fetch","response","ok","blob","bitmap","setTimeout","catch","e","isTexImageSource","obj","ImageData","HTMLElement","loadAndUseImage","setTextureTo1PixelColor","loadTextureFromUrl","loadCubemapFromUrls","urls","numToLoad","errors","imgs","uploadImg","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","setTextureFromArray","byteLength","dimensions","cbrt","unpackAlignment","elementsPerElement","faceSize","subarray","setEmptyTexture","createTexture","resizeTexture","isAsyncSrc","createTextures","numDownloading","textures","images","callCallbackIfReady","onLoadFn","setTextureDefaults_","error$1","warn$1","getElementById","id","TEXTURE0","DYNAMIC_DRAW","ARRAY_BUFFER$1","ELEMENT_ARRAY_BUFFER$1","UNIFORM_BUFFER","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK","COMPILE_STATUS","LINK_STATUS","FRAGMENT_SHADER","VERTEX_SHADER","SEPARATE_ATTRIBS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","TRANSFORM_FEEDBACK_VARYINGS","ACTIVE_UNIFORM_BLOCKS","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","FLOAT$3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT$3","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT$3","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D$1","TEXTURE_CUBE_MAP$1","TEXTURE_3D$1","TEXTURE_2D_ARRAY$1","typeMap","getBindPointForSamplerType","bindPoint","floatSetter","uniform1f","floatArraySetter","uniform1fv","floatVec2Setter","uniform2fv","floatVec3Setter","uniform3fv","floatVec4Setter","uniform4fv","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","uintSetter","uniform1ui","uintArraySetter","uniform1uiv","uintVec2Setter","uniform2uiv","uintVec3Setter","uniform3uiv","uintVec4Setter","uniform4uiv","floatMat2Setter","uniformMatrix2fv","floatMat3Setter","uniformMatrix3fv","floatMat4Setter","uniformMatrix4fv","floatMat23Setter","uniformMatrix2x3fv","floatMat32Setter","uniformMatrix3x2fv","floatMat24Setter","uniformMatrix2x4fv","floatMat42Setter","uniformMatrix4x2fv","floatMat34Setter","uniformMatrix3x4fv","floatMat43Setter","uniformMatrix4x3fv","samplerSetter","unit","textureOrPair","texture","activeTexture","bindSampler","samplerArraySetter","units","index","setter","arraySetter","cols","rows","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","count","rowOffset","attrTypeMap","errorRE","addLineNumbersWithError","log","lineOffset","matches","matchAll","lineNoToErrorMap","Map","lineNo","parseInt","next","substring","split","line","join","spaceRE","prepShaderSource","shaderSource","replace","reportError","progOptions","errorCallback","loadShader","shaderType","shader","createShader","compileShader","checkShaderStatus","deleteShader","errFn","compiled","getShaderParameter","lastError","getShaderInfoLog","getShaderSource","getProgramOptions","opt_attribs","opt_locations","opt_errorCallback","transformFeedbackVaryings","transformFeedbackMode","opt","attribLocations","defaultShaderType","getShaderTypeFromScriptType","scriptType","deleteShaders","shaders","wait","ms","Promise","resolve","createProgram","realShaders","newShaders","elem","text","program","attachShader","bindAttribLocation","varyings","linkProgram","checkForProgramLinkCompletionAsync","checkProgramStatus","deleteProgram","createProgramAsync","reject","programOptions","createProgramInfoAsync","programInfo","createProgramInfo","ext","getExtension","checkFn","getProgramParameter","COMPLETION_STATUS_KHR","waitTime","success","linked","getProgramInfoLog","createShaderFromScript","scriptId","opt_shaderType","shaderScript","createProgramFromScripts","shaderScriptIds","createProgramFromSources","shaderSources","isBuiltIn","startsWith","tokenRE","isDigit","addSetterToUniformTree","fullPath","node","uniformSetters","tokens","tokenNdx","path","token","isArrayIndex","accessor","isLastToken","child","setUniformTree","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","endsWith","uniformTree","numUniforms","getActiveUniform","substr","getUniformLocation","createTransformFeedbackInfo","numVaryings","varying","getTransformFeedbackVarying","bindTransformFeedbackInfo","transformFeedbackInfo","buf","bindBufferRange","bindBufferBase","createTransformFeedback","tf","bindTransformFeedback","useProgram","createUniformBlockSpecFromProgram","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","getActiveUniformBlockName","blockSpec","getUniformBlockIndex","usedByVertexShader","getActiveUniformBlockParameter","usedByFragmentShader","used","arraySuffixRE","pad","createUniformBlockUniformSetter","view","totalRows","row","col","set","createUniformBlockInfoFromProgram","uniformBlockSpec","blockName","uniforms","uniformBufferIndex","uniformBlockBinding","setters","setterTree","uniformNdx","uniformView","asFloat","createUniformBlockInfo","bindUniformBlock","uniformBlockInfo","bufferBindIndex","setUniformBlock","setBlockUniforms","values","tree","prop","setUniforms","actualSetters","numArgs","aNdx","setUniformsAndBindTextures","createAttributeSetters","attribSetters","numAttribs","getActiveAttrib","getAttribLocation","setAttributes","setBuffersAndAttributes","vertexArrayObject","bindVertexArray","createProgramInfoFromProgram","notIdRE","source","script","origCallback","programs","TRIANGLES","UNSIGNED_SHORT$3","drawBufferInfo","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","active","vertexArrayInfo","bindBuffers","draw","FRAMEBUFFER","RENDERBUFFER","TEXTURE_2D$2","UNSIGNED_BYTE$3","DEPTH_COMPONENT$1","RGBA$1","DEPTH_COMPONENT24$1","DEPTH_COMPONENT32F$1","DEPTH24_STENCIL8$1","DEPTH32F_STENCIL8$1","RGBA4$1","RGB5_A1$1","RGB565$1","DEPTH_COMPONENT16$1","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL$1","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","CLAMP_TO_EDGE$1","LINEAR$1","defaultAttachments","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","MAX_COLOR_ATTACHMENT_POINTS","isColorAttachmentPoint","attachmentPoint","createFramebufferInfo","attachments","fb","createFramebuffer","bindFramebuffer","drawingBufferWidth","drawingBufferHeight","usedColorAttachmentsPoints","framebufferInfo","framebuffer","attachmentOptions","attachment","samples","createRenderbuffer","bindRenderbuffer","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","layer","framebufferTextureLayer","framebufferTexture2D","drawBuffers","resizeFramebufferInfo","bindFramebufferInfo","viewport","framebuffers","ELEMENT_ARRAY_BUFFER$2","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","vertexArrays","defaults$2","addExtensionsToContext","setDefaults$2","prefixRE","addExtensionToContext","extensionName","fnSuffix","exec","enumSuffix","isFunc","suffix","origFn","supportedExtensions","create3DContext","context","getWebGLContext","createContext","resizeCanvasToDisplaySize","multiplier","clientWidth","clientHeight","forceCSSHex","colorFormat","__state","conversionName","r","round","g","h","toFixed","str","hex","ARR_EACH","ARR_SLICE","Common","each","isObject","isUndefined","bind","toCall","itr","scope","l","BREAK","fnc","func","threshold","callImmediately","timeout","delayed","callNow","toArray","isNaN","Function","INTERPRETATIONS","common","isString","original","match","parseFloat","isNumber","result","toReturn","interpret","family","litmus","conversions","conversion","read","tmpComponent","ColorMath","hi","floor","p","q","delta","NaN","hex_with_component","componentIndex","Color","colorToString","write","defineRGBComponent","component","componentHexIndex","space","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","property","initialValue","domElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP","EVENT_MAP_INV","CSS_VALUE_PIXELS","cssValueToPixels","val","isNull","dom","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vert","vertical","horizontal","eventType","pars","aux","params","className","evt","createEvent","clientX","clientY","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","event","newBool","bool","attachEvent","detachEvent","classes","removeAttribute","splice","RegExp","getComputedStyle","el","offsetParent","offsetLeft","offsetTop","activeElement","BooleanController","_this","__prev","__checkbox","setAttribute","onChange","setValue","appendChild","checked","OptionController","opts","__select","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","_x","NumberController","_params","__min","__max","__step","step","__impliedStep","abs","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","attempted","onFinish","onMouseDrag","diff","onMouseUp","unbind","onMouseDown","i1","i2","o1","o2","NumberControllerSlider","__background","__foreground","onTouchStart","addClass","preventDefault","bgRect","getBoundingClientRect","touches","onTouchMove","onTouchEnd","pct","FunctionController","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","fieldDownH","setSV","fieldUpSV","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","background","vendor","cssText","hueGradient","css","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","body","hide","display","opacity","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","load","preset","parent","hideable","resizable","scrollable","useLocalStorage","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","defineProperties","closeOnTop","getRoot","revert","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","stringify","getSaveObject","saveToLocalStorageIfPossible","resetWidth","root","toggleHide","gui","CLASS_CONTROLLER_ROW","CLASS_TOO_TALL","CLASS_DRAG","_keydownHandler","which","controller","removeChild","__li","subfolder","removeFolder","newGuiParams","folders","li","folder","parentElement","getOffset","__save_row","__resize_handle","offsetHeight","debounce","saveDialogueContents","remembered","getCurrentPreset","presetName","newDom","liBefore","removeListeners","markPresetModified","modified","__preset_select","augmentController","__gui","nextSibling","nextElementSibling","remove","firstElementChild","listen","box","method","pc","pb","returned","oldName","wasListening","newController","compose","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","presetMap","factoryArgs","concat","before","container","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","firstChild","gears","button","button2","button3","select","localStorageCheckBox","saveLocally","newConstructorTextArea","show","focus","save","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","dragStart","setWidth","w","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","controllers","domImport","GUIImport","module","exports"],"mappings":"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AED,IAAIU,KAAK,CAACC,OAAN,CAAcrB,KAAd,CAAJ,EAA0B;IACxBA,KAAK,GAAG;MACNU,IAAI,EAAEV;IADA,CAAR;EAGD;;EAED,IAAIsB,IAAI,GAAGtB,KAAK,CAACpD,IAAjB;;EACA,IAAI,CAAC0E,IAAL,EAAW;IACT,IAAIhB,SAAS,CAAC9C,IAAD,CAAb,EAAqB;MACnB8D,IAAI,GAAGpF,WAAP;IACD,CAFD,MAEO;MACLoF,IAAI,GAAGnT,YAAP;IACD;EACF;;EACD,OAAO,IAAImT,IAAJ,CAAStB,KAAK,CAACU,IAAf,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,uBAAT,CAAiCnD,EAAjC,EAAqCoD,MAArC,EAA6C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AAC8M,IAAP,CAAY6D,OAAZ,EAAqB,CAArB,CAAN;EACD;;EACD,MAAME,MAAM,GAAGF,OAAO,CAAC5D,GAAD,CAAtB;;EACA,IAAI,CAAC8D,MAAM,CAAC1E,MAAZ,EAAoB;IAClB,OAAO,CAAP,CADkB,CACR;EACX;;EACDmB,EAAE,CAAC8B,UAAH,CAAcnB,YAAd,EAA4B4C,MAAM,CAAC1E,MAAnC;EACA,MAAM8E,QAAQ,GAAG3D,EAAE,CAACyE,kBAAH,CAAsB9D,YAAtB,EAAoCE,WAApC,CAAjB;EACAb,EAAE,CAAC8B,UAAH,CAAcnB,YAAd,EAA4B,IAA5B;EAEA,MAAM+D,aAAa,GAAGP,yBAAyB,CAACnE,EAAD,EAAKuD,MAAM,CAAC/E,IAAZ,CAA/C;EACA,MAAMmG,aAAa,GAAGhB,QAAQ,GAAGe,aAAjC;EACA,MAAMhC,aAAa,GAAGa,MAAM,CAACb,aAAP,IAAwBa,MAAM,CAACT,IAArD,CA1BiD,CA2BjD;;EACA,MAAMyB,WAAW,GAAGI,aAAa,GAAGjC,aAApC;;EACA,IAAI6B,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;IACzB,MAAM,IAAInG,KAAJ,CAAW,iBAAgBsE,aAAc,2BAA0B7P,MAAO,EAA1E,CAAN;EACD;;EACD,OAAO0R,WAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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1CU,cAAc,EAAEA,cArC0B;EAsC1CyJ,sBAAsB,EAAEA,sBAtCkB;EAuC1CpI,kBAAkB,EAAEA,kBAvCsB;EAwC1CC,eAAe,EAAEA,eAxCyB;EAyC1CC,iBAAiB,EAAEA,iBAzCuB;EA0C1CC,gBAAgB,EAAEA,gBA1CwB;EA2C1CoJ,cAAc,EAAEA,cA3C0B;EA4C1CY,iBAAiB,EAAEA;AA5CuB,CAAd,CAA9B;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASyB,QAAT,CAAkBpU,EAAlB,EAAsB;EACpB;EACA;EACA;EACA;EACA,OAAO,CAAC,CAACA,EAAE,CAACqU,YAAZ;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBtU,EAAlB,EAAsB;EACpB;EACA;EACA;EACA;EACA;EACA,OAAO,CAACA,EAAE,CAACqU,YAAX;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,cAAc,GAAI,YAAW;EACjC,MAAMC,gBAAgB,GAAG,EAAzB;EACA,MAAMC,KAAK,GAAG,EAAd;;EAEA,SAASC,QAAT,CAAkB1U,EAAlB,EAAsB;IACpB,MAAMxB,IAAI,GAAGwB,EAAE,CAACgH,WAAH,CAAe5H,IAA5B;;IACA,IAAI,CAACoV,gBAAgB,CAAChW,IAAD,CAArB,EAA6B;MAC3B,KAAK,MAAMiB,GAAX,IAAkBO,EAAlB,EAAsB;QACpB,IAAI,OAAOA,EAAE,CAACP,GAAD,CAAT,KAAm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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkJ,YAAT,CAAsBje,EAAtB,EAA0B6Q,OAA1B,EAAmC;EACjC,IAAIA,OAAO,CAACqN,oBAAR,KAAiC5e,SAArC,EAAgD;IAC9CU,EAAE,CAACme,WAAH,CAAexG,kCAAf,EAAmD9G,OAAO,CAACqN,oBAA3D;EACD;;EACD,IAAIrN,OAAO,CAACuN,gBAAR,KAA6B9e,SAAjC,EAA4C;IAC1CU,EAAE,CAACme,WAAH,CAAevG,8BAAf,EAA+C/G,OAAO,CAACuN,gBAAvD;EACD;;EACD,IAAIvN,OAAO,CAACwN,KAAR,KAAkB/e,SAAtB,EAAiC;IAC/BU,EAAE,CAACme,WAAH,CAAetG,mBAAf,EAAoChH,OAAO,CAACwN,KAA5C;EACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+Bte,EAA/B,EAAmC;EACjCA,EAAE,CAACme,WAAH,CAAe9G,gBAAf,EAAiC,CAAjC;;EACA,IAAIjD,QAAQ,CAACpU,EAAD,CAAZ,EAAkB;IAChBA,EAAE,CAACme,WAAH,CAAe7G,iBAAf,EAAkC,CAAlC;IACAtX,EAAE,CAACme,WAAH,CAAe5G,mBAAf,EAAoC,CAApC;IACAvX,EAAE,CAACme,WAAH,CAAe3G,kBAAf,EAAmC,CAAnC;IACAxX,EAAE,CAACme,WAAH,CAAe1G,gBAAf,EAAiC,CAAjC;IACAzX,EAAE,CAACme,WAAH,CAAezG,kBAAf,EAAmC,CAAnC;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6G,2BAAT,CAAqCve,EAArC,EAAyChG,MAAzC,EAAiDwkB,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AAgB,CAACt6B,EAAD,EAAKw0B,WAAL,EAAkB+F,gBAAlB,CAApB,EAAyD;IACvDv6B,EAAE,CAAC+B,UAAH,CAAcolB,cAAd,EAA8BoT,gBAAgB,CAAC34B,KAA/C,EAAsDolB,YAAtD;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0T,gBAAT,CAA0BH,gBAA1B,EAA4CI,MAA5C,EAAoD;EAClD,MAAMX,OAAO,GAAGO,gBAAgB,CAACP,OAAjC;;EACA,KAAK,MAAM56B,IAAX,IAAmBu7B,MAAnB,EAA2B;IACzB,MAAMhM,MAAM,GAAGqL,OAAO,CAAC56B,IAAD,CAAtB;;IACA,IAAIuvB,MAAJ,EAAY;MACV,MAAMtvB,KAAK,GAAGs7B,MAAM,CAACv7B,IAAD,CAApB;MACAuvB,MAAM,CAACtvB,KAAD,CAAN;IACD;EACF;AACF;;AAED,SAASs3B,cAAT,CAAwBiE,IAAxB,EAA8BD,MAA9B,EAAsC;EACpC,KAAK,MAAMv7B,IAAX,IAAmBu7B,MAAnB,EAA2B;IACzB,MAAME,IAAI,GAAGD,IAAI,CAACx7B,IAAD,CAAjB;;IACA,IAAI,OAAOy7B,IAAP,KAAgB,UAApB,EAAgC;MAC9BA,IAAI,CAACF,MAAM,CAACv7B,IAAD,CAAP,CAAJ;IACD,CAFD,MAEO;MACLu3B,cAAc,CAACiE,IAAI,CAACx7B,IAAD,CAAL,EAAau7B,MAAM,CAACv7B,IAAD,CAAnB,CAAdqBd,OAArB,EAA8B,GAAGp6B,IAAjC,EAAuC;EAAG;EACxC,MAAMm7B,aAAa,GAAGf,OAAO,CAAC9D,cAAR,IAA0B8D,OAAhD;EACA,MAAMgB,OAAO,GAAGp7B,IAAI,CAAC/M,MAArB;;EACA,KAAK,IAAIooC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGD,OAA1B,EAAmC,EAAEC,IAArC,EAA2C;IACzC,MAAMN,MAAM,GAAG/6B,IAAI,CAACq7B,IAAD,CAAnB;;IACA,IAAIj4B,KAAK,CAACC,OAAN,CAAc03B,MAAd,CAAJ,EAA2B;MACzB,MAAMl3B,SAAS,GAAGk3B,MAAM,CAAC9nC,MAAzB;;MACA,KAAK,IAAIyR,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGb,SAAtB,EAAiC,EAAEa,EAAnC,EAAuC;QACrCw2B,WAAW,CAACC,aAAD,EAAgBJ,MAAM,CAACr2B,EAAD,CAAtB,CAAX;MACD;IACF,CALD,MAKO;MACL,KAAK,MAAMlF,IAAX,IAAmBu7B,MAAnB,EAA2B;QACzB,MAAMhM,MAAM,GAAGoM,aAAa,CAAC37B,IAAD,CAA5B;;QACA,IAAIuvB,MAAJ,EAAY;UACVA,MAAM,CAACgM,MAAM,CAACv7B,IAAD,CAAP,CAAN;QACD;MACF;IACF;EACF;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM87B,0BAA0B,GAAGJ,WAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASK,sBAAT,CAAgCn7B,EAAhC,EAAoC4zB,OAApC,EAA6C;EAC3C,MAAMwH,aAAa,GAAG,EAAtB;EAGA,MAAMC,UAAU,GAAGr7B,EAAE,CAAC60B,mBAAH,CAAuBjB,OAAvB,EAAgChM,iBAAhC,CAAnB;;EACA,KAAK,IAAItjB,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG+2B,UAAtB,EAAkC,EAAE/2B,EAApC,EAAwC;IACtC,MAAML,UAAU,GAAGjE,EAAE,CAACs7B,eAAH,CAAmB1H,OAAnB,EAA4BtvB,EAA5B,CAAnB;;IACA,IAAIqxB,SAAS,CAAC1xB,UAAD,CAAb,EAA2B;MACzB;IACD;;IACD,MAAMyqB,KAAK,GAAG1uB,EAAE,CAACu7B,iBAAH,CAAqB3H,OAArB,EAA8B3vB,UAAU,CAAC7E,IAAzC,CAAd;IACA,MAAM0wB,QAAQ,GAAGI,WAAW,CAACjsB,UAAU,CAACzF,IAAZ,CAA5B;IACA,MAAMmwB,MAAM,GAAGmB,QAAQ,CAACnB,MAAT,CAAgB3uB,EAAhB,EAAoB0uB,KAApB,EAA2BoB,QAA3B,CAAf;IACAnB,MAAM,CAACnM,QAAP,GAAkBkM,KAAlB;IACA0M,aAAa,CAACn3B,UAAU,CAAC7E,IAAZ,CAAb,GAAiCuvB,MAAjC;EACD;;EAED,OAAOyM,aAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,aAAT,CAAuBxB,OAAvB,EAAgC10B,OAAhC,EAAyC;EACvC,KAAK,MAAMlG,IAAX,IAAmBkG,OAAnB,EAA4B;IAC1B,MAAMqpB,MAAM,GAAGqL,OAAO,CAAC56B,IAAD,CAAtB;;IACA,IAAIuvB,MAAJ,EAAY;MACVA,MAAM,CAACrpB,OAAO,CAAClG,IAAD,CAAR,CAAN;IACD;EACF;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASq8B,uBAAT,CAAiCz7B,EAAjC,EAAqCw0B,WAArC,EAAkDlvB,OAAlD,EAA2D;EACzD,IAAIA,OAAO,CAACo2B,iBAAZ,EAA+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,qBAAqB,EAAEA,qBAHqB;EAI5CsB,qBAAqB,EAAEA;AAJqB,CAAd,CAAhC;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,sBAAsB,GAAa,MAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+B7gC,EAA/B,EAAmC8gC,YAAnC,EAAiD/7B,UAAjD,EAA6D;EAC3D,MAAMg8B,GAAG,GAAG/gC,EAAE,CAACghC,iBAAH,EAAZ;EACAhhC,EAAE,CAAC27B,eAAH,CAAmBoF,GAAnB;;EACA,IAAI,CAACD,YAAY,CAACjuC,MAAlB,EAA0B;IACxBiuC,YAAY,GAAG,CAACA,YAAD,CAAf;EACD;;EACDA,YAAY,CAAC3hC,OAAb,CAAqB,UAASq1B,WAAT,EAAsB;IACzCiH,uBAAuB,CAACz7B,EAAD,EAAKw0B,WAAL,EAAkBzvB,UAAlB,CAAvB;EACD,CAFD;EAGA/E,EAAE,CAAC27B,eAAH,CAAmB,IAAnB;EACA,OAAO;IACLp3B,WAAW,EAAEQ,UAAU,CAACR,WADnB;IAELY,WAAW,EAAEJ,UAAU,CAACI,WAFnB;IAGLu2B,iBAAiB,EAAEqF;EAHd,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,yBAAT,CAAmCjhC,EAAnC,EAAuCg6B,OAAvC,EAAgD32B,OAAhD,EAAyD4B,OAAzD,EAAkE;EAChE,MAAM87B,GAAG,GAAG/gC,EAAE,CAACghC,iBAAH,EAAZ;EACAhhC,EAAE,CAAC27B,eAAH,CAAmBoF,GAAnB;EACAvF,aAAa,CAACxB,OAAD,EAAU32B,OAAV,CAAb;;EACA,IAAI4B,OAAJ,EAAa;IACXjF,EAAE,CAAC8B,UAAH,CAAc8+B,sBAAd,EAAsC37B,OAAtC;EACD,CAN+D,CAOhE;EACA;;;EACAjF,EAAE,CAAC27B,eAAH,CAAmB,IAAnB;EACA,OAAOoF,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,uBAAT,CAAiClhC,EAAjC,EAAqCw0B,WAArC,EAAkDzvB,UAAlD,EAA8D;EAC5D,OAAOk8B,yBAAyB,CAACjhC,EAAD,EAAKw0B,WAAW,CAAC4G,aAAZ,IAA6B5G,WAAlC,EAA+CzvB,UAAU,CAAC1B,OAA1D,EAAmE0B,UAAU,CAACE,OAA9E,CAAhC;AACD;;AAED,IAAIk8B,YAAY,GAAG,aAAazuC,MAAM,CAACC,MAAP,CAAc;EAC5CC,SAAS,EAAE,IADiC;EAE5CiuC,qBAAqB,EAAEA,qBAFqB;EAG5CI,yBAAyB,EAAEA,yBAHiB;EAI5CC,uBAAuB,EAAEA;AAJmB,CAAd,CAAhC;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,UAAU,GAAG;EACjBC,sBAAsB,EAAE;AADP,CAAnB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS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","file":"indexAnimations.7d2d28f5.js","sourceRoot":"..","sourcesContent":["\r\n\r\n//--- MOUSE EVENT LISTENERS ------------------------------------------------------------------------------------------------\r\n\r\nexport type MouseDelegate = (input: string) => void;\r\n\r\nexport class MouseState\r\n{\r\n  down:boolean | undefined;\r\n  button: number | undefined;\r\n  x: number;\r\n  y: number;\r\n  px: number | undefined;\r\n  py: number | undefined;\r\n  sx: string;\r\n  sy: string;\r\n  dragging: boolean;\r\n  dragx0: number;\r\n  dragy0: number;\r\n  dragpx0: number;\r\n  dragpy0: number;\r\n  dragvector: number[] | undefined;\r\n  dragdistance: number;\r\n  dragpdistance: number;\r\n  delta: number;\r\n  totaldelta: number;\r\n  changewheel:boolean;\r\n  changedrag:boolean;\r\n  constructor()\r\n  {\r\n    this.changewheel = false;\r\n    this.changedrag = false;\r\n    this.dragging = false;\r\n    this.totaldelta=0.0;\r\n    this.delta=0.0;\r\n    this.sx = this.sy= \"0.5\";\r\n    this.x=this.y=0.5;\r\n    this.dragpx0=this.dragpy0=0.0;\r\n    this.dragx0=this.dragy0=0;\r\n    this.dragdistance=10;  \r\n    this.dragpdistance=0;  \r\n  }\r\n}\r\n\r\nexport class MouseListener {\r\n \r\n  state = {count: 0};\r\n  controlkeydown = false;\r\n  mouse = new MouseState();\r\n  OnMouseDown: MouseDelegate | undefined;\r\n  OnMouseUp: MouseDelegate | undefined;\r\n  OnMouseMove: MouseDelegate | undefined;\r\n  OnMouseWheel: MouseDelegate | undefined;  \r\n\r\n  public mousewheeleventdone()\r\n  {\r\n    this.mouse.changewheel = false;\r\n  }\r\n\r\n  public drageventdone()\r\n  {\r\n    this.mouse.changedrag = false;\r\n  }\r\n\r\n  constructor(\r\n    canvas: HTMLCanvasElement\r\n  ) {\r\n    this.state = {count: 0};  \r\n    canvas.addEventListener(\"keydown\", event => { console.log(\"keydown \"+event.ctrlKey); if (event.ctrlKey) this.controlkeydown = true; });\r\n    canvas.addEventListener(\"keyup\", event => { console.log(\"keyup \"+event.ctrlKey);  if (!event.ctrlKey) this.controlkeydown = false; });\r\n    canvas.addEventListener(\"wheel\", event => {\r\n      this.mouse.changewheel = true;\r\n      this.mouse.delta = Math.sign(event.deltaY);\r\n      console.log(\"delta=\"+this.mouse.delta+\" totaldelta=\"+this.mouse.totaldelta);\r\n      if (this.mouse.delta<0) this.mouse.totaldelta--;\r\n      if (this.mouse.delta>0) this.mouse.totaldelta++;\r\n      if (this.OnMouseWheel!=undefined)\r\n        this.OnMouseWheel(this.mouse.totaldelta.toString());\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return false; \r\n     });   \r\n    canvas.onmousedown = (e) => {\r\n      this.mouse.button = e.button;\r\n      this.mouse.down = true;\r\n      this.mouse.dragpx0=e.x; \r\n     this.mouse.dragpy0=canvas.height-e.y;\r\n\r\n      if (this.OnMouseDown!=undefined)\r\n        this.OnMouseDown(this.mouse.sx+\" \"+this.mouse.sy);  \r\n      this.mouse.dragx0 = this.mouse.x;\r\n      this.mouse.dragy0 = this.mouse.y;\r\n      this.mouse.dragging = true;\r\n      e.cancelBubble=true;\r\n    }\r\n    canvas.onmouseup = (e) => \r\n    {  \r\n      (this.mouse.down = false); \r\n      if (this.mouse.dragvector == undefined)\r\n      {\r\n        if (this.OnMouseUp!=undefined)\r\n          this.OnMouseUp(this.mouse.sx+\" \"+this.mouse.sy+\" clickat\");        \r\n      } else\r\n      if (this.OnMouseUp!=undefined)\r\n        this.OnMouseUp(this.mouse.sx+\" \"+this.mouse.sy+\" dragging: v=\"+this.mouse.dragvector+\" d=\"+this.mouse.dragdistance);  \r\n      this.mouse.dragging = false;\r\n      delete this.mouse.dragvector;\r\n    }\r\n    canvas.onmousemove = (e) => {\r\n      var canvas =  (document.getElementById('c') as HTMLCanvasElement);\r\n      let rect = canvas.getBoundingClientRect();\r\n      this.mouse.px =e.x; \r\n      this.mouse.py = canvas.height-e.y;\r\n      this.mouse.x = (e.x - rect.left) / canvas.width;\r\n      this.mouse.x = (this.mouse.x * 2.0) - 1.0;\r\n      this.mouse.y = (canvas.height - (e.y - rect.top)) / canvas.height;\r\n      this.mouse.y = (this.mouse.y * 2.0) - 1.0;\r\n      this.mouse.sy = this.mouse.y.toFixed(2); \r\n      this.mouse.sx = this.mouse.x.toFixed(2);\r\n      this.state.count +=1;\r\n      if (this.mouse.dragging)\r\n      {\r\n        var dpx = this.mouse.px-this.mouse.dragpx0;\r\n        var dpy = this.mouse.py-this.mouse.dragpy0;\r\n        var dx = this.mouse.x-this.mouse.dragx0;\r\n        var dy = this.mouse.y-this.mouse.dragy0;\r\n        var d = Math.sqrt(dx*dx+dy*dy);\r\n        var dp = Math.sqrt(dpx*dpx+dpy*dpy);\r\n        this.mouse.dragvector = [dx/d,dy/d];\r\n        this.mouse.dragdistance = d;\r\n        this.mouse.dragpdistance = dp;\r\n      }\r\n      if (this.OnMouseMove!=undefined)\r\n          this.OnMouseMove(this.mouse.sx+\" \"+this.mouse.sy);\r\n      //console.log(\"setmouse \"+this.mouse.x+\",\"+this.mouse.y); }\r\n      canvas.oncontextmenu = (e) => e.preventDefault();\r\n     }\r\n   }\r\n}\r\n","/* @license twgl.js 4.24.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\nAvailable via the MIT license.\nsee: http://github.com/greggman/twgl.js for details */\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length$1(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nvar v3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  add: add,\n  copy: copy,\n  create: create,\n  cross: cross,\n  distance: distance,\n  distanceSq: distanceSq,\n  divide: divide,\n  divScalar: divScalar,\n  dot: dot,\n  lerp: lerp,\n  lerpV: lerpV,\n  length: length$1,\n  lengthSq: lengthSq,\n  max: max,\n  min: min,\n  mulScalar: mulScalar,\n  multiply: multiply,\n  negate: negate,\n  normalize: normalize,\n  setDefaultType: setDefaultType,\n  subtract: subtract\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType$1(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Creates a matrix.\n * @return {module:twgl/m4.Mat4} A new matrix.\n * @memberOf module:twgl/m4\n */\nfunction create$1() {\n  return new MatType(16).fill(0);\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply$1(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy$1(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || create();\n  yAxis = yAxis || create();\n  zAxis = zAxis || create();\n\n  normalize(\n      subtract(eye, target, zAxis), zAxis);\n  normalize(cross(up, zAxis, xAxis), xAxis);\n  normalize(cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || create();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || create();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nvar m4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  axisRotate: axisRotate,\n  axisRotation: axisRotation,\n  copy: copy$1,\n  create: create$1,\n  frustum: frustum,\n  getAxis: getAxis,\n  getTranslation: getTranslation,\n  identity: identity,\n  inverse: inverse,\n  lookAt: lookAt,\n  multiply: multiply$1,\n  negate: negate$1,\n  ortho: ortho,\n  perspective: perspective,\n  rotateX: rotateX,\n  rotateY: rotateY,\n  rotateZ: rotateZ,\n  rotationX: rotationX,\n  rotationY: rotationY,\n  rotationZ: rotationZ,\n  scale: scale,\n  scaling: scaling,\n  setAxis: setAxis,\n  setDefaultType: setDefaultType$1,\n  setTranslation: setTranslation,\n  transformDirection: transformDirection,\n  transformNormal: transformNormal,\n  transformPoint: transformPoint,\n  translate: translate,\n  translation: translation,\n  transpose: transpose\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE]                           = Int8Array;\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\n  tt[SHORT]                          = Int16Array;\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\n  tt[INT]                            = Int32Array;\n  tt[UNSIGNED_INT]                   = Uint32Array;\n  tt[FLOAT]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\n  tt[HALF_FLOAT]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nvar typedarrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getGLTypeForTypedArray: getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType: getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType: getTypedArrayTypeForGLType,\n  isArrayBuffer: isArrayBuffer\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction warn(...args) {\n  console.warn(...args);\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && t instanceof WebGLRenderbuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && t instanceof WebGLSampler;\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE$1                         = 0x1400;\nconst UNSIGNED_BYTE$1                = 0x1401;\nconst SHORT$1                        = 0x1402;\nconst UNSIGNED_SHORT$1               = 0x1403;\nconst INT$1                          = 0x1404;\nconst UNSIGNED_INT$1                 = 0x1405;\nconst FLOAT$1                        = 0x1406;\nconst defaults = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let buffer;\n        let type;\n        let normalization;\n        let numComponents;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          const numValues = array.data || array;\n          const arrayType = array.type || Float32Array;\n          const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(ARRAY_BUFFER, buffer);\n          gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n        } else {\n          const typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE$1)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE$1)  return 1;  // eslint-disable-line\n  if (type === SHORT$1)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT$1) return 2;  // eslint-disable-line\n  if (type === INT$1)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT$1)   return 4;  // eslint-disable-line\n  if (type === FLOAT$1)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray(array).length;\n  if (length === undefined) {\n    return 1;   // There's no arrays\n  }\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  if (!attrib.buffer) {\n    return 1; // There's no buffer\n  }\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER : ARRAY_BUFFER;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = getGLTypeForTypedArray(makeTypedArray(arrays.indices));\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nvar attributes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttribsFromArrays: createAttribsFromArrays,\n  createBuffersFromArrays: createBuffersFromArrays,\n  createBufferFromArray: createBufferFromArray,\n  createBufferFromTypedArray: createBufferFromTypedArray,\n  createBufferInfoFromArrays: createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray: setAttribInfoBufferFromArray,\n  setAttributePrefix: setAttributePrefix,\n  setAttributeDefaults_: setDefaults,\n  getNumComponents_: getNumComponents,\n  getArray_: getArray\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst getArray$1 = getArray;  // eslint-disable-line\nconst getNumComponents$1 = getNumComponents;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || isArrayBuffer(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal$1(mi, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, inverse(matrix), transformNormal$1);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = add(multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray$1(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents$1(arrayInfo, name);\n      const array = getArray$1(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray$1(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray$1(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray$1(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nvar primitives = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create3DFBufferInfo: create3DFBufferInfo,\n  create3DFBuffers: create3DFBuffers,\n  create3DFVertices: create3DFVertices,\n  createAugmentedTypedArray: createAugmentedTypedArray,\n  createCubeBufferInfo: createCubeBufferInfo,\n  createCubeBuffers: createCubeBuffers,\n  createCubeVertices: createCubeVertices,\n  createPlaneBufferInfo: createPlaneBufferInfo,\n  createPlaneBuffers: createPlaneBuffers,\n  createPlaneVertices: createPlaneVertices,\n  createSphereBufferInfo: createSphereBufferInfo,\n  createSphereBuffers: createSphereBuffers,\n  createSphereVertices: createSphereVertices,\n  createTruncatedConeBufferInfo: createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers: createTruncatedConeBuffers,\n  createTruncatedConeVertices: createTruncatedConeVertices,\n  createXYQuadBufferInfo: createXYQuadBufferInfo,\n  createXYQuadBuffers: createXYQuadBuffers,\n  createXYQuadVertices: createXYQuadVertices,\n  createCresentBufferInfo: createCresentBufferInfo,\n  createCresentBuffers: createCresentBuffers,\n  createCresentVertices: createCresentVertices,\n  createCrescentBufferInfo: createCrescentBufferInfo,\n  createCrescentBuffers: createCrescentBuffers,\n  createCrescentVertices: createCrescentVertices,\n  createCylinderBufferInfo: createCylinderBufferInfo,\n  createCylinderBuffers: createCylinderBuffers,\n  createCylinderVertices: createCylinderVertices,\n  createTorusBufferInfo: createTorusBufferInfo,\n  createTorusBuffers: createTorusBuffers,\n  createTorusVertices: createTorusVertices,\n  createDiscBufferInfo: createDiscBufferInfo,\n  createDiscBuffers: createDiscBuffers,\n  createDiscVertices: createDiscVertices,\n  deindexVertices: deindexVertices,\n  flattenNormals: flattenNormals,\n  makeRandomVertexColors: makeRandomVertexColors,\n  reorientDirections: reorientDirections,\n  reorientNormals: reorientNormals,\n  reorientPositions: reorientPositions,\n  reorientVertices: reorientVertices,\n  concatVertices: concatVertices,\n  duplicateVertices: duplicateVertices\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  glEnumToString: glEnumToString,\n  isWebGL1: isWebGL1,\n  isWebGL2: isWebGL2\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$1 = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer$1 = isArrayBuffer;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D                     = 0x0de1;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst TEXTURE_3D                     = 0x806f;\nconst TEXTURE_2D_ARRAY               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\n\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\nconst BYTE$2                         = 0x1400;\nconst UNSIGNED_BYTE$2                = 0x1401;\nconst SHORT$2                        = 0x1402;\nconst UNSIGNED_SHORT$2               = 0x1403;\nconst INT$2                          = 0x1404;\nconst UNSIGNED_INT$2                 = 0x1405;\nconst FLOAT$2                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4$1       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1$1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5$1         = 0x8363;\nconst HALF_FLOAT$1                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV$1  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV$1 = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV$1     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV$1 = 0x8DAD;\nconst UNSIGNED_INT_24_8$1            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_4_4_4_4$1, UNSIGNED_SHORT_5_5_5_1$1], };\n    t[DEPTH_COMPONENT]    = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT$2, UNSIGNED_SHORT$2], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT$2], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT$2], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT$2], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT$2], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT$2], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT$2], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT$2], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT$2], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE$2], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_10F_11F_11F_REV$1], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_5_9_9_9_REV$1], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT$2], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE$2], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT$2], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT$2], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT$2], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT$2], };\n    t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_5_5_1$1, UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_4_4_4_4$1], };\n    t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT$2], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT$2], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT$2], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT$2], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT$2], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT$2, UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8$1], };\n    t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV$1], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer$1(src)) {\n    return getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE$2;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults$1.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults$1(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$1);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setPackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n\n/**\n * Set skip state to defaults\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setSkipStateToDefault(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT, 4);\n  if (isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH, 0);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS, 0);\n    gl.pixelStorei(UNPACK_SKIP_ROWS, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n  }\n}\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D || isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults$1.textureColor;\n  if (isArrayBuffer$1(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults$1.textureOptions;\n  internalFormat = internalFormat || RGBA;\n  const target = options.target || TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    setSkipStateToDefault(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults$1.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, RGBA, 1, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D;\n  if (target !== TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder().forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D_ARRAY;\n  if (target !== TEXTURE_3D && target !== TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        setPackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer$1(src)) {\n    const Type = getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  setSkipStateToDefault(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n}\n\n/**\n * Creates a texture based on the options passed in.\n *\n * Note: may reset UNPACK_ALIGNMENT, UNPACK_ROW_LENGTH, UNPACK_IMAGE_HEIGHT, UNPACK_SKIP_IMAGES\n * UNPACK_SKIP_PIXELS, and UNPACK_SKIP_ROWS\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer$1(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer$1(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer$1(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nvar textures = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  setTextureDefaults_: setDefaults$1,\n  createSampler: createSampler,\n  createSamplers: createSamplers,\n  setSamplerParameters: setSamplerParameters,\n  createTexture: createTexture,\n  setEmptyTexture: setEmptyTexture,\n  setTextureFromArray: setTextureFromArray,\n  loadTextureFromUrl: loadTextureFromUrl,\n  setTextureFromElement: setTextureFromElement,\n  setTextureFilteringForSize: setTextureFilteringForSize,\n  setTextureParameters: setTextureParameters,\n  setDefaultTextureColor: setDefaultTextureColor,\n  createTextures: createTextures,\n  resizeTexture: resizeTexture,\n  canGenerateMipmap: canGenerateMipmap,\n  canFilter: canFilter,\n  getNumComponentsForFormat: getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat: getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat: getFormatAndTypeForInternalFormat\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error$1 = error;\nconst warn$1 = warn;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER$1                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$1           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT$3                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT$3                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT$3                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D$1                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP$1              = 0x8513;\nconst TEXTURE_3D$1                    = 0x806F;\nconst TEXTURE_2D_ARRAY$1              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n * @private\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT$3]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT$3]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT$3]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT$3, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT$3;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT$3]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT$3]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT$3]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\n/**\n * Program Callback\n * @callback ProgramCallback\n * @param {string} [err] error message, falsy if no error\n * @param {WebGLProgram|module:twgl.ProgramInfo} [result] the program or programInfo\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Remove the first end of line because WebGL 2.0 requires\n * #version 300 es\n * as the first line. No whitespace allowed before that line\n * so\n *\n * <script>\n * #version 300 es\n * </script>\n *\n * Has one line before it which is invalid according to GLSL ES 3.00\n *\n * @param {string} shaderSource The source of the shader\n * @returns {{shaderSource: string, lineOffset: number}}\n * @private\n */\nfunction prepShaderSource(shaderSource) {\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n  return {lineOffset, shaderSource};\n}\n\n/**\n * @param {module:twgl.ProgramOptions} progOptions\n * @param {string} msg\n * @return null\n * @private\n */\nfunction reportError(progOptions, msg) {\n  progOptions.errorCallback(msg);\n  if (progOptions.callback) {\n    setTimeout(() => {\n      progOptions.callback(`${msg}\\n${progOptions.errors.join('\\n')}`);\n    });\n  }\n  return null;\n}\n\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ProgramOptions} progOptions\n * @return {WebGLShader} The created shader.\n * @private\n */\nfunction loadShader(gl, shaderSource, shaderType, progOptions) {\n  // Create the shader object\n  const shader = gl.createShader(shaderType);\n\n  // Load the shader source\n  gl.shaderSource(shader, prepShaderSource(shaderSource).shaderSource);\n\n  // Compile the shader\n  gl.compileShader(shader);\n\n  if (!progOptions.callback && !checkShaderStatus(gl, shaderType, shader, progOptions.errorCallback)) {\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * Check Shader status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {number} shaderType The shader type\n * @param {WebGLShader} shader The shader\n * @param {ErrorCallback} [errFn] function to receive error message.\n * @return {bool} true if shader is ok.\n * @private\n */\nfunction checkShaderStatus(gl, shaderType, shader, errFn) {\n  errFn = errFn || error$1;\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    const {lineOffset, shaderSource} = prepShaderSource(gl.getShaderSource(shader));\n    errFn(`${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${glEnumToString(gl, shaderType)}: ${lastError}`);\n  }\n  return compiled;\n}\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  let callback;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback && opt_attribs.errors) {\n      return opt_attribs;\n    }\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n    callback = opt.callback;\n  }\n\n  const errorCallback = opt_errorCallback || error$1;\n  const errors = [];\n  const options = {\n    errorCallback(msg, ...args) {\n      errors.push(msg);\n      errorCallback(msg, ...args);\n    },\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n    callback,\n    errors,\n  };\n\n  if (opt_attribs) {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function(shader) {\n    gl.deleteShader(shader);\n  });\n}\n\nconst wait = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error of a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  // This code is really convoluted, because it may or may not be async\n  // Maybe it would be better to have a separate function\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const realShaders = [];\n  const newShaders = [];\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof (shader) === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = loadShader(gl, src, type, progOptions);\n      newShaders.push(shader);\n    }\n    if (isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    deleteShaders(gl, newShaders);\n    return reportError(progOptions, \"not enough shaders for program\");\n  }\n\n  const program = gl.createProgram();\n  realShaders.forEach(function(shader) {\n    gl.attachShader(program, shader);\n  });\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function(attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n  let varyings = progOptions.transformFeedbackVaryings;\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program);\n  if (progOptions.callback) {\n    checkForProgramLinkCompletionAsync(gl, program, progOptions);\n    return null;\n  } else {\n    if (!checkProgramStatus(gl, program, progOptions.errorCallback)) {\n      gl.deleteProgram(program);\n      deleteShaders(gl, newShaders);\n      return null;\n    }\n    return program;\n  }\n}\n\n/**\n * Same as createProgram but returns a promise\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramAsync(gl, [vs, fs], options);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<WebGLProgram>} The created program\n * @memberOf module:twgl/programs\n */\nfunction createProgramAsync(gl, shaders, ...args) {\n  return new Promise((resolve, reject) => {\n    const programOptions = getProgramOptions(...args);\n    programOptions.callback = (err, program) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(program);\n      }\n    };\n    createProgram(gl, shaders, programOptions);\n  });\n}\n\n/**\n * Same as createProgramInfo but returns a promise\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<module:twgl.ProgramInfo>} The created ProgramInfo\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoAsync(gl, shaders, ...args) {\n  return new Promise((resolve, reject) => {\n    const programOptions = getProgramOptions(...args);\n    programOptions.callback = (err, programInfo) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(programInfo);\n      }\n    };\n    createProgramInfo(gl, shaders, programOptions);\n  });\n}\n\n\n/**\n * Asynchronously wait for program to link.\n * Note: if 'KHR_parallel_shader_compile' extension does not\n * exist then compilation will not be truly async.\n * @param {WebGLRenderingContext} gl The context\n * @param {WebGLProgram} program The program\n * @param {module:twgl.ProgramOptions} progOptions Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @private\n */\nasync function checkForProgramLinkCompletionAsync(gl, program, progOptions) {\n  const ext = gl.getExtension('KHR_parallel_shader_compile');\n  const checkFn = ext\n      ? (gl, program) => gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR)\n      : () => true;\n\n  let waitTime = 0;\n  do {\n    await wait(waitTime);  // must wait at least once\n    waitTime = 1000 / 60;\n  } while (!checkFn(gl, program));\n\n  const success = checkProgramStatus(gl, program, progOptions.errorCallback);\n  const err = success ? undefined : progOptions.errors.join('\\n');\n  if (!success) {\n    const errFn = progOptions.errorCallback || error$1;\n    errFn(err);\n    gl.deleteProgram(program);\n    // TODO: delete shaders, but only shaders that were created newly for this\n    // program\n    program = null;\n  }\n  progOptions.callback(err, program);\n}\n\n/**\n * Check a program's link status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program Program to check\n * @param {ErrorCallback} [errFn] func for errors\n * @return {bool} true if program is ok\n * @private\n */\nfunction checkProgramStatus(gl, program, errFn) {\n  errFn = errFn || error$1;\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    errFn(`Error in program linking: ${lastError}`);\n  }\n  return linked;\n}\n\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ProgramOptions} [progOptions] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\nfunction createShaderFromScript(\n    gl, scriptId, opt_shaderType, progOptions) {\n  let shaderSource = \"\";\n  const shaderScript = getElementById(scriptId);\n  if (!shaderScript) {\n    return reportError(progOptions, `unknown script element: ${scriptId}`);\n  }\n  shaderSource = shaderScript.text;\n\n  const shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n  if (!shaderType) {\n    return reportError(progOptions, 'unknown shader type');\n  }\n\n  return loadShader(gl, shaderSource, shaderType, progOptions);\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n    const shader = createShaderFromScript(\n        gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\n    const shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions);\n    if (!progOptions.callback && !shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\nconst tokenRE = /(\\.|\\[|]|\\w+)/g;\nconst isDigit = s => s >= '0' && s <= '9';\nfunction addSetterToUniformTree(fullPath, setter, node, uniformSetters) {\n  const tokens = fullPath.split(tokenRE).filter(s => s !== '');\n  let tokenNdx = 0;\n  let path = '';\n\n  for (;;) {\n    const token = tokens[tokenNdx++];  // has to be name or number\n    path += token;\n    const isArrayIndex = isDigit(token[0]);\n    const accessor = isArrayIndex\n        ? parseInt(token)\n        : token;\n    if (isArrayIndex) {\n      path += tokens[tokenNdx++];  // skip ']'\n    }\n    const isLastToken = tokenNdx === tokens.length;\n    if (isLastToken) {\n      node[accessor] = setter;\n      break;\n    } else {\n      const token = tokens[tokenNdx++];  // has to be . or [\n      const isArray = token === '[';\n      const child = node[accessor] || (isArray ? [] : {});\n      node[accessor] = child;\n      node = child;\n      uniformSetters[path] = uniformSetters[path] || function(node) {\n        return function(value) {\n          setUniformTree(node, value);\n        };\n      }(child);\n      path += token;\n    }\n  }\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = {};\n  const uniformTree = {};\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      const setter = createUniformSetter(program, uniformInfo, location);\n      uniformSetters[name] = setter;\n      addSetterToUniformTree(name, setter, uniformTree, uniformSetters);\n    }\n  }\n\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {string} name The name of the uniform\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec>} blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\nconst pad = (v, padding) => ((v + (padding - 1)) / padding | 0) * padding;\n\nfunction createUniformBlockUniformSetter(view, isArray, rows, cols) {\n  if (isArray || rows) {\n    cols = cols || 1;\n    const numElements = view.length;\n    const totalRows = numElements / 4;\n    return function(value) {\n      let dst = 0;\n      let src = 0;\n      for (let row = 0; row < totalRows; ++row) {\n        for (let col = 0; col < cols; ++col) {\n          view[dst++] = value[src++];\n        }\n        dst += 4 - cols;\n      }\n    };\n  } else {\n    return function(value) {\n      if (value.length) {\n        view.set(value);\n      } else {\n        view[0] = value;\n      }\n    };\n  }\n}\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @property {Object<string, function>} setters A setter for this uniform.\n *   The reason to use setters is elements of arrays are padded to vec4 sizes which\n *   means if you want to set an array of 4 floats you'd need to set 16 values\n *   (or set elements 0, 4, 8, 12). In other words\n *   `someBlockInfo.uniforms.some4FloatArrayUniform.set([0, , , , 1, , , , 2, , , , 3])`\n *   where as the setter handles just passing in [0, 1, 2, 3] either directly as in\n *   `someBlockInfo.setter.some4FloatArrayUniform.set([0, 1, 2, 3])` (not recommended)\n *   or via {@link module:twgl.setBlockUniforms}\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn$1(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const array = new ArrayBuffer(blockSpec.size);\n  const buffer = gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  const setters = {};\n  const setterTree = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    let name = data.name;\n    if (name.startsWith(prefix)) {\n      name = name.substr(prefix.length);\n    }\n    const isArray = name.endsWith('[0]');\n    if (isArray) {\n      name = name.substr(0, name.length - 3);\n    }\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const byteLength = isArray\n        ? pad(typeInfo.size, 16) * data.size\n        : typeInfo.size * data.size;\n    const uniformView = new Type(array, data.offset, byteLength / Type.BYTES_PER_ELEMENT);\n    uniforms[name] = uniformView;\n    // Note: I'm not sure what to do here. The original\n    // idea was to create TypedArray views into each part\n    // of the block. This is useful, for example if you have\n    // a block with { mat4: model; mat4 view; mat4 projection; }\n    // you'll get a Float32Array for each one suitable for\n    // passing to most JS math libraries including twgl's and glMatrix.js.\n    //\n    // But, if you have a an array of structures, especially if that\n    // array is large, you get a whole bunch of TypedArray views.\n    // Every one of them has overhead and switching between them all\n    // is probably a cache miss. In that case it would really be better\n    // to just have one view (asFloat) and have all the setters\n    // just reference the correct portion. But, then you can't easily\n    // treat a matrix, or a vec4, as a standalone thing like you can\n    // with all the views.\n    //\n    // Another problem with the views is they are not shared. With\n    // uniforms you have one set of setters. With UniformBlockInfo\n    // you have a set of setters *pre block instance*. That's because\n    // TypedArray views can't be mapped to different buffers.\n    //\n    // My gut right now is if you really want the speed and compactness\n    // then you should probably roll your own solution. TWGL's goal\n    // here is ease of use as AFAICT there is no simple generic efficient\n    // solution.\n    const setter = createUniformBlockUniformSetter(uniformView, isArray, typeInfo.rows, typeInfo.cols);\n    setters[name] = setter;\n    addSetterToUniformTree(name, setter, setterTree, setters);\n  });\n  return {\n    name: blockName,\n    array,\n    asFloat: new Float32Array(array),  // for debugging\n    buffer,\n    uniforms,\n    setters,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(UNIFORM_BUFFER, uniformBlockInfo.array, DYNAMIC_DRAW);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  You can also fill out structure and array values either via\n *  shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Lights {\n *       Light lights[2];\n *     };\n *\n *     // in JavaScript\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices.\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n *  **IMPORTANT!**, packing in a UniformBlock is unintuitive.\n *  For example the actual layout of `someVec3Array` above in memory\n *  is `1, 2, 3, unused, 4, 5, 6, unused`. twgl takes in 6 values\n *  as shown about and copies them, skipping the padding. This might\n *  be confusing if you're already familiar with Uniform blocks.\n *\n *  If you want to deal with the padding yourself you can access the array\n *  buffer views directly. eg:\n *\n *      someBlockInfo.someVec3Array.set([1, 2, 3, 0, 4, 5, 6, 0]);\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const setters = uniformBlockInfo.setters;\n  for (const name in values) {\n    const setter = setters[name];\n    if (setter) {\n      const value = values[name];\n      setter(value);\n    }\n  }\n}\n\nfunction setUniformTree(tree, values) {\n  for (const name in values) {\n    const prop = tree[name];\n    if (typeof prop === 'function') {\n      prop(values[name]);\n    } else {\n      setUniformTree(tree[name], values[name]);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n *   You can also fill out structure and array values either via\n *   shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Light lights[2];\n *\n *     // in JavaScript\n *\n *     twgl.setUniforms(programInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setUniforms(programInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, ...args) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = args.length;\n  for (let aNdx = 0; aNdx < numArgs; ++aNdx) {\n    const values = args[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n * @private\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER$1, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpec] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program,\n    uniformSetters,\n    attribSetters,\n  };\n\n  if (isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\nconst notIdRE = /\\s|{|}|;/;\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const errors = [];\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (!notIdRE.test(source)) {\n      const script = getElementById(source);\n      if (!script) {\n        const err = `no element with id: ${source}`;\n        progOptions.errorCallback(err);\n        errors.push(err);\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n  if (errors.length) {\n    return reportError(progOptions, '');\n  }\n  const origCallback = progOptions.callback;\n  if (origCallback) {\n    progOptions.callback = (err, program) => {\n      let programInfo;\n      if (!err) {\n        programInfo = createProgramInfoFromProgram(gl, program);\n      }\n      origCallback(err, programInfo);\n    };\n  }\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n  return createProgramInfoFromProgram(gl, program);\n}\n\nvar programs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttributeSetters: createAttributeSetters,\n  createProgram: createProgram,\n  createProgramAsync: createProgramAsync,\n  createProgramFromScripts: createProgramFromScripts,\n  createProgramFromSources: createProgramFromSources,\n  createProgramInfo: createProgramInfo,\n  createProgramInfoAsync: createProgramInfoAsync,\n  createProgramInfoFromProgram: createProgramInfoFromProgram,\n  createUniformSetters: createUniformSetters,\n  createUniformBlockSpecFromProgram: createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram: createUniformBlockInfoFromProgram,\n  createUniformBlockInfo: createUniformBlockInfo,\n  createTransformFeedback: createTransformFeedback,\n  createTransformFeedbackInfo: createTransformFeedbackInfo,\n  bindTransformFeedbackInfo: bindTransformFeedbackInfo,\n  setAttributes: setAttributes,\n  setBuffersAndAttributes: setBuffersAndAttributes,\n  setUniforms: setUniforms,\n  setUniformsAndBindTextures: setUniformsAndBindTextures,\n  setUniformBlock: setUniformBlock,\n  setBlockUniforms: setBlockUniforms,\n  bindUniformBlock: bindUniformBlock\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT$3                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nvar draw = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  drawBufferInfo: drawBufferInfo,\n  drawObjectList: drawObjectList\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D$2                     = 0x0de1;\n\nconst UNSIGNED_BYTE$3                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT$1                = 0x1902;\nconst RGBA$1                           = 0x1908;\nconst DEPTH_COMPONENT24$1              = 0x81a6;\nconst DEPTH_COMPONENT32F$1             = 0x8cac;\nconst DEPTH24_STENCIL8$1               = 0x88f0;\nconst DEPTH32F_STENCIL8$1              = 0x8cad;\n\n/* Framebuffer Object. */\nconst RGBA4$1                          = 0x8056;\nconst RGB5_A1$1                        = 0x8057;\nconst RGB565$1                         = 0x8D62;\nconst DEPTH_COMPONENT16$1              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL$1                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE$1                  = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR$1                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attachmentPoint] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [samples] The number of samples. Default = 1\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {(WebGLRenderbuffer | WebGLTexture)} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA$1, type: UNSIGNED_BYTE$3, min: LINEAR$1, wrap: CLAMP_TO_EDGE$1, },\n  { format: DEPTH_STENCIL$1, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT24$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT32F$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH24_STENCIL8$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH32F_STENCIL8$1] = DEPTH_STENCIL_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format, internalFormat) {\n  return attachmentsByFormat[format] || attachmentsByFormat[internalFormat];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4$1] = true;\nrenderbufferFormats[RGB5_A1$1] = true;\nrenderbufferFormats[RGB565$1] = true;\nrenderbufferFormats[DEPTH_STENCIL$1] = true;\nrenderbufferFormats[DEPTH_COMPONENT16$1] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\nconst MAX_COLOR_ATTACHMENT_POINTS = 32;  // even an 3090 only supports 8 but WebGL/OpenGL ES define constants for 32\n\nfunction isColorAttachmentPoint(attachmentPoint) {\n  return attachmentPoint >= COLOR_ATTACHMENT0 && attachmentPoint < COLOR_ATTACHMENT0 + MAX_COLOR_ATTACHMENT_POINTS;\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {Array.<(WebGLRenderbuffer | WebGLTexture)>} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n * It also leaves the framebuffer it just created as the currently bound `FRAMEBUFFER`.\n * Note: If this is WebGL2 or if you called {@link module:twgl.addExtensionsToContext} then it will set the drawBuffers\n * to `[COLOR_ATTACHMENT0, COLOR_ATTACHMENT1, ...]` for how ever many color attachments were created.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  const usedColorAttachmentsPoints = [];\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n\n  attachments.forEach(function(attachmentOptions, i) {\n    let attachment = attachmentOptions.attachment;\n    const samples = attachmentOptions.samples;\n    const format = attachmentOptions.format;\n    let attachmentPoint = attachmentOptions.attachmentPoint || getAttachmentPointForFormat(format, attachmentOptions.internalFormat);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + i;\n    }\n    if (isColorAttachmentPoint(attachmentPoint)) {\n      usedColorAttachmentsPoints.push(attachmentPoint);\n    }\n    if (!attachment) {\n      if (samples !== undefined || isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        if (samples > 1) {\n          gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n        } else {\n          gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n        }\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR$1;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR$1;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE$1;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE$1;\n        }\n        attachment = createTexture(gl, textureOptions);\n      }\n    }\n    if (isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D$2,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  if (gl.drawBuffers) {\n    gl.drawBuffers(usedColorAttachmentsPoints);\n  }\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    const samples = attachmentOptions.samples;\n    if (samples !== undefined || isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      if (samples > 1) {\n        gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n      } else {\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      }\n    } else if (isTexture(gl, attachment)) {\n      resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nvar framebuffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bindFramebufferInfo: bindFramebufferInfo,\n  createFramebufferInfo: createFramebufferInfo,\n  resizeFramebufferInfo: resizeFramebufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER$2           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER$2, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nvar vertexArrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createVertexArrayInfo: createVertexArrayInfo,\n  createVAOAndSetAttributes: createVAOAndSetAttributes,\n  createVAOFromBufferInfo: createVAOFromBufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$2 = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults$2(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$2);\n  setDefaults(newDefaults);  // eslint-disable-line\n  setDefaults$1(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n * @deprecated\n * @private\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport { addExtensionsToContext, attributes, bindFramebufferInfo, bindTransformFeedbackInfo, bindUniformBlock, canFilter, canGenerateMipmap, createAttribsFromArrays, createAttributeSetters, createBufferFromArray, createBufferFromTypedArray, createBufferInfoFromArrays, createBuffersFromArrays, createFramebufferInfo, createProgram, createProgramAsync, createProgramFromScripts, createProgramFromSources, createProgramInfo, createProgramInfoAsync, createProgramInfoFromProgram, createSampler, createSamplers, createTexture, createTextures, createTransformFeedback, createTransformFeedbackInfo, createUniformBlockInfo, createUniformBlockInfoFromProgram, createUniformBlockSpecFromProgram, createUniformSetters, createVAOAndSetAttributes, createVAOFromBufferInfo, createVertexArrayInfo, draw, drawBufferInfo, drawObjectList, framebuffers, getArray as getArray_, getBytesPerElementForInternalFormat, getContext, getFormatAndTypeForInternalFormat, getGLTypeForTypedArray, getGLTypeForTypedArrayType, getNumComponentsForFormat, getNumComponents as getNumComponents_, getTypedArrayTypeForGLType, getWebGLContext, glEnumToString, isArrayBuffer, isWebGL1, isWebGL2, loadTextureFromUrl, m4, primitives, programs, resizeCanvasToDisplaySize, resizeFramebufferInfo, resizeTexture, setAttribInfoBufferFromArray, setDefaults as setAttributeDefaults_, setAttributePrefix, setAttributes, setBlockUniforms, setBuffersAndAttributes, setDefaultTextureColor, setDefaults$2 as setDefaults, setEmptyTexture, setSamplerParameters, setDefaults$1 as setTextureDefaults_, setTextureFilteringForSize, setTextureFromArray, setTextureFromElement, setTextureParameters, setUniformBlock, setUniforms, setUniformsAndBindTextures, textures, typedarrays, utils, v3, vertexArrays };\n","  // camera\r\n \r\n  import * as twgl from \"twgl.js\";    // Greg's work\r\n  import { m4 } from \"twgl.js\";\r\n\r\n  import * as mtls from \"./mouselistener\";\r\n\r\n  \r\n  export class Camera\r\n  {\r\n    // camera\r\n    target: number[] = [0,0,0];        // target of camera\r\n    radius0 = 0.0;                     // camera distance, set at objectsize*2 when not in dictpar\r\n    ahx = 0;                           // horizontal angle (hx)\r\n    ahy = 0;                           // vertical angle (hy), for z-up this is actually hz\r\n    fov:number=30.0;                   // field of view in degrees\r\n    near: number=0.5;                  // near plane\r\n    far: number=1000.0;                // far plane\r\n    rotationVelocity = 0.012;          // mouse drag sensitivity for angle turns\r\n    zoominVelocity = 1.0;                // mouse wheel sensitivity set at objectsize/40\r\n    \r\n    // lights\r\n    ahorizlight = 3.0*Math.PI/2.0;     // light horizontal angle\r\n    avertlight = Math.PI/4.0;          // light vertical angle\r\n    lightpos: number[] = [8,8,20];\r\n    difflightintensity: number = 0.9;\r\n    speclightintensity: number = 0.9;\r\n\r\n    // result state to pass to shader\r\n    lookAt: m4.Mat4 = m4.identity();         // m4.lookAt(this.eye, this.target, this.up);\r\n    viewProjection: m4.Mat4 = m4.identity();    // projection configured\r\n      \r\n    //----------------------------------------------------------------\r\n    //local state\r\n\r\n    private zaxis = [0,0,1];           // yaw axis\r\n    private yaxis = [0,1,0];           // roll axis\r\n    private up = [0, 1, 0];            // up vector (can be Z or Y)\r\n    private radius = 0.0;              // distance of camera\r\n    private eye: number[] = [-1,0,0];  // location of camera\r\n\r\n    private myr: twgl.m4.Mat4 = m4.identity(); \r\n    private myrl: twgl.m4.Mat4 = m4.identity(); // light\r\n    private projection:m4.Mat4 = m4.identity();\r\n    private changelight = false;\r\n    private changeeye = false;\r\n\r\n    constructor( dictpar:Map<string,string>)\r\n    { \r\n      {\r\n        if (dictpar.get(\"radius0\")!=undefined) this.radius0 = +dictpar.get(\"radius0\")!;\r\n        if (dictpar.get(\"hx\")!=undefined) this.ahx = +dictpar.get(\"hx\")!;\r\n        if (dictpar.get(\"hy\")!=undefined) this.ahy = +dictpar.get(\"hy\")!;\r\n        if (dictpar.get(\"hxl\")!=undefined){ this.ahorizlight = +dictpar.get(\"hxl\")!;this.changelight=true; }\r\n        if (dictpar.get(\"hyl\")!=undefined){ this.avertlight = +dictpar.get(\"hyl\")!;this.changelight=true; }\r\n        if (dictpar.get(\"difflight\")!=undefined){ this.difflightintensity = +dictpar.get(\"difflight\")!; this.changelight=true; }\r\n        if (dictpar.get(\"speclight\")!=undefined){ this.speclightintensity = +dictpar.get(\"speclight\")!; this.changelight=true; }\r\n      }\r\n      this.radius = this.radius0;\r\n      \r\n    }\r\n/*\r\n    private static createYUpCamera(gl: WebGL2RenderingContext, dictpar: Map<string,string>, szobj: number, app: mtls.MouseListener)\r\n    {\r\n      var cam: Camera = new Camera(dictpar!);\r\n      cam.zoominVelocity = szobj/20.0;\r\n      if (cam.radius0==0) { cam.radius0 = 2.0*szobj; console.log(\"set cam.radius0 to 2*object size = \"+cam.radius0); }\r\n      cam.target = [0,0,0];\r\n      cam.near = szobj/10.0;\r\n      cam.far = 10.0*szobj;\r\n      cam.setRadius(cam.radius0);\r\n    \r\n      cam.setYUpPerspective(gl,app);\r\n      cam.setYUpEye();\r\n      cam.setYUpLight();\r\n      return cam;\r\n    }\r\n\r\n    private static createZUpCamera(gl: WebGL2RenderingContext, dictpar: Map<string,string>, szobj: number, app: mtls.MouseListener)\r\n    {\r\n       var cam: Camera = new Camera(dictpar!);\r\n       cam.zoominVelocity = szobj/20.0;\r\n       if (cam.radius0==0) { cam.radius0 = 2.0*szobj; console.log(\"set cam.radius0 to 2*object size = \"+cam.radius0); }\r\n       cam.target = [0,0,0];\r\n       cam.near = szobj/10.0;\r\n       cam.far = 10.0*szobj;\r\n       cam.setRadius(cam.radius0);\r\n     \r\n       cam.setZUpPerspective(gl,app);\r\n       cam.setZUpEye();\r\n       cam.setZUpLight();\r\n       return cam;\r\n    }\r\n*/\r\n    static CamYUp: number = 1;\r\n    static CamZUp: number = 2;\r\n\r\n    public static createCamera(gl: WebGL2RenderingContext, dictpar: Map<string,string>, camtype: number, szobj: number, app: mtls.MouseListener): Camera\r\n    {\r\n      var cam: Camera = new Camera(dictpar!);\r\n      cam.zoominVelocity = szobj/20.0;\r\n      if (cam.radius0==0) { cam.radius0 = 2.0*szobj; console.log(\"set cam.radius0 to 2*object size = \"+cam.radius0); }\r\n      cam.target = [0,0,0];\r\n      cam.near = szobj/10.0;\r\n      cam.far = 10.0*szobj;\r\n      cam.setRadius(cam.radius0);\r\n      if (camtype==this.CamYUp) {\r\n        cam.setYUpPerspective(gl,app);\r\n        cam.setYUpEye();\r\n        cam.setYUpLight();\r\n      } else\r\n      if (camtype==this.CamZUp) {\r\n        cam.setZUpPerspective(gl,app);\r\n        cam.setZUpEye();\r\n        cam.setZUpLight();\r\n      }\r\n      else console.log(\"ERROR: ATTEMPT TO INITIALIZE INVALID CAMERA TYPE \"+camtype); \r\n      return cam;\r\n    }\r\n\r\n    public translateEye(v: number[])\r\n    {\r\n      var t=m4.translation(v);\r\n      this.eye=m4.transformPoint(t, this.eye) as number[]; \r\n      this.lookAt = m4.lookAt(this.eye, this.target, this.up);\r\n      this.viewProjection = m4.multiply(this.projection, m4.inverse(this.lookAt));\r\n     // console.log(\"translate eye \"+this.eye);\r\n    }\r\n\r\n    public translateTarget(v: number[])\r\n    {\r\n      var t=m4.translation(v);\r\n      this.target=m4.transformPoint(t, this.target) as number[]; \r\n      this.lookAt = m4.lookAt(this.eye, this.target, this.up);\r\n      //console.log(\"translate target \"+this.target);\r\n      this.viewProjection = m4.multiply(this.projection, m4.inverse(this.lookAt));\r\n    }\r\n\r\n    public ReportEye()\r\n    {\r\n      var sEye = this.eye[0].toPrecision(4)+\",\"+this.eye[1].toPrecision(4)+\",\"+this.eye[2].toPrecision(4);\r\n      var sTarget = this.target[0].toPrecision(4)+\",\"+this.target[1].toPrecision(4)+\",\"+this.target[2].toPrecision(4);\r\n      var sLightPos = this.lightpos[0].toPrecision(4)+\",\"+this.lightpos[1].toPrecision(4)+\",\"+this.lightpos[2].toPrecision(4);\r\n        (document.getElementById('projection') as HTMLDivElement).innerHTML = \"hx:\"+((180.0/Math.PI)*this.ahx).toPrecision(3)+\" hy:\"+((180.0/Math.PI)*this.ahy).toPrecision(3)+\r\n        \"<br>r0=\"+this.radius0.toPrecision(4)+\", r=\"+this.radius.toPrecision(4)+\"<br>eye:[\"+sEye+\"]<br>target: [\"+sTarget+\"]<br>light: \"+sLightPos; \r\n    }\r\n\r\n    public Position(): number[]\r\n    {  return this.eye; }\r\n\r\n    //===================================================================================================================\r\n\r\n    \r\n    public setYUpPerspective(gl: WebGL2RenderingContext, app: mtls.MouseListener | undefined)\r\n    {\r\n      const afov =  (this.fov * Math.PI) / 180;\r\n      const aspect = (gl.canvas  as HTMLCanvasElement).clientWidth / (gl.canvas  as HTMLCanvasElement).clientHeight;\r\n      const zNear = this.near;\r\n      const zFar = this.far;\r\n      this.up = [0, 1, 0];\r\n      this.projection = m4.perspective(afov, aspect, zNear, zFar);  \r\n    }\r\n\r\n    public setZUpPerspective(gl: WebGL2RenderingContext, app: mtls.MouseListener | undefined)\r\n    {\r\n      const afov =  (this.fov * Math.PI) / 180;\r\n      const aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n      const zNear = this.near;\r\n      const zFar = this.far;\r\n      this.up = [0, 0, 1];\r\n      this.projection = m4.perspective(afov, aspect, zNear, zFar);  \r\n    }\r\n\r\n    public setYUpEye()\r\n    {\r\n     // this.zaxis = m4.transformPoint(this.invworldmat, [0,0,1]) as number[];\r\n      this.myr = m4.identity();\r\n      m4.axisRotate(this.myr,this.yaxis, this.ahx, this.myr);\r\n      m4.axisRotate(this.myr,this.zaxis, this.ahy, this.myr);\r\n      this.eye = m4.transformPoint(this.myr, [this.radius, 0,0]) as number[];  \r\n      this.lookAt = m4.lookAt(this.eye, this.target, this.up);\r\n      this.viewProjection = m4.multiply(this.projection, m4.inverse(this.lookAt));\r\n      this.ReportEye();\r\n      console.log(\"< setYUpEye radius=\"+this.radius+\" (\"+this.radius0+\")\");\r\n    }\r\n\r\n    public setZUpEye()\r\n    {\r\n    //  this.yaxis = m4.transformPoint(this.invworldmat, [0,1,0]) as number[];    \r\n      this.myr = m4.identity();\r\n      m4.axisRotate(this.myr,this.zaxis, this.ahx, this.myr);\r\n      //up = m4.transformPoint(myr,[0,1,0]) as number[];\r\n      m4.axisRotate(this.myr,this.yaxis, this.ahy, this.myr);\r\n      this.eye = m4.transformPoint(this.myr, [this.radius, 0,0]) as number[];      \r\n      this.lookAt = m4.lookAt(this.eye, this.target, this.up);\r\n      this.viewProjection = m4.multiply(this.projection, m4.inverse(this.lookAt));\r\n      this.ReportEye();\r\n      console.log(\"< setZUpEye radius=\"+this.radius+\" (\"+this.radius0+\")\");\r\n   }\r\n\r\n   public setYUpLight()\r\n   {\r\n     this.myrl = m4.identity();\r\n     m4.axisRotate(this.myrl,this.yaxis, this.ahorizlight, this.myrl);\r\n     this.up = m4.transformPoint(this.myrl,[0,1,0]) as number[];\r\n     m4.axisRotate(this.myrl,this.zaxis, this.avertlight, this.myrl);\r\n     this.lightpos = m4.transformPoint(this.myrl, [this.radius, 0,0]) as number[];  \r\n   }\r\n\r\n   public setZUpLight()\r\n   {\r\n     this.myrl = m4.identity();\r\n     m4.axisRotate(this.myrl,this.zaxis, this.ahorizlight, this.myrl);\r\n     this.up = m4.transformPoint(this.myrl,[0,1,0]) as number[];\r\n     m4.axisRotate(this.myrl,this.yaxis, this.avertlight, this.myrl);\r\n     this.lightpos = m4.transformPoint(this.myrl, [this.radius, 0,0]) as number[];  \r\n   }\r\n\r\n  public setRadius(r: number)\r\n    { this.radius=this.radius0=r; }\r\n\r\n\r\n    public CamHandlingYUp(gl:WebGL2RenderingContext, app: mtls.MouseListener | undefined, camsignX: number, camsignY: number )\r\n    {          \r\n    \r\n      if (app?.mouse.dragvector!=undefined && app?.mouse.dragdistance>1e-2 )\r\n      {\r\n        const ctrldown = app?.controlkeydown;\r\n        if (!ctrldown)\r\n        {\r\n          this.ahx = this.ahx - camsignX*(app.mouse.dragvector[0]*this.rotationVelocity);\r\n          this.ahy =  this.ahy - camsignY*(app.mouse.dragvector[1]*this.rotationVelocity);\r\n          if (this.ahy<(-Math.PI/2.0)) this.ahy = (-Math.PI/2.0 + 1e-3);\r\n          if (this.ahy>(Math.PI/2.0)) this.ahy =(Math.PI/2.0 - 1e-3);\r\n          this.changeeye = true;\r\n        } else\r\n        {\r\n          this.ahorizlight = this.ahorizlight-app.mouse.dragvector[0]*this.rotationVelocity;\r\n          this.avertlight = this.avertlight-app.mouse.dragvector[1]*this.rotationVelocity;\r\n          this.changelight = true; \r\n        }\r\n        app?.drageventdone();\r\n      }\r\n \r\n      if (app?.mouse.changewheel && app?.mouse.totaldelta != undefined) // && (this.radius0 + app?.mouse.totaldelta* this.zoominVelocity)> 1.0)\r\n      {\r\n        this.radius = this.radius0 + app?.mouse.totaldelta * this.zoominVelocity;\r\n        this.changeeye = true;\r\n        app?.mousewheeleventdone();\r\n      }\r\n\r\n      this.setYUpPerspective(gl, app);\r\n\r\n      if (this.changeeye)\r\n      {    \r\n        this.setYUpEye();\r\n        this.changeeye = false;\r\n     }\r\n\r\n     if (this.changelight)\r\n     {\r\n         this.setYUpLight();\r\n        this.changelight =false;\r\n     }\r\n \r\n    }\r\n\r\n    // Camera with Z-AXIS up\r\n\r\n    public CamHandlingZUp(gl:WebGL2RenderingContext, app: mtls.MouseListener, camsignX: number, camsignY: number)\r\n    {      \r\n      this.setZUpPerspective(gl,app);\r\n   //   var change = false;\r\n      if (app?.mouse.dragvector!=undefined && app?.mouse.dragdistance>1e-2 )\r\n      {\r\n        this.ahx = this.ahx-(camsignX*app.mouse.dragvector[0]*this.rotationVelocity);\r\n        this.ahy = this.ahy-(camsignY*app.mouse.dragvector[1]*this.rotationVelocity);\r\n        if (this.ahy<(-Math.PI/2.0)) this.ahy =-Math.PI/2.0 + 1e-3;\r\n        if (this.ahy>(Math.PI/2.0)) this.ahy =Math.PI/2.0 - 1e-3;\r\n        this.changeeye = true;\r\n      }\r\n    //  if (app?.mouse.totaldelta != undefined && (this.radius0 + app?.mouse.totaldelta* zoominvelocity)> 1.0)\r\n      if (app?.mouse.changewheel && app?.mouse.totaldelta != undefined)  \r\n      {\r\n        this.radius = this.radius0 + app?.mouse.totaldelta * this.zoominVelocity;\r\n        this.changeeye = true;\r\n        app?.mousewheeleventdone();\r\n      //  console.log(\"wheel\");\r\n      }\r\n   //!   this.target = [0, (mobj.meshMinMax.maxy+mobj.meshMinMax.miny)/2, 0];\r\n      if (this.changeeye)\r\n      {    \r\n        this.setZUpEye();\r\n\r\n        this.changeeye=false;\r\n      }\r\n    //  console.log(\"viewProjection= \"+this.viewProjection);\r\n     \r\n     \r\n    }\r\n\r\n  }\r\n\r\n","\r\nexport type Tarrays = {\r\n  position: { numComponents: number; data: Float32Array; }\r\n  boneNdx: { numComponents: number; data: Uint32Array; }\r\n  weight: { numComponents: number; data: Float32Array; }\r\n  indices: { numComponents: number; data: Uint32Array; }\r\n  texcoord: { numComponents: number; data: Float32Array; }\r\n}\r\n\r\nexport abstract class StridedMesh0\r\n{\r\n  nrows: number= 0;\r\n  nsegments: number= 0;\r\n  arrays: Tarrays = {position:{numComponents:0, data:new Float32Array()},\r\n                     boneNdx: {numComponents:0, data:new Uint32Array()},\r\n                     weight:{numComponents:0, data:new Float32Array()},\r\n                     texcoord:{numComponents:0, data:new Float32Array()},\r\n                     indices: {numComponents:0, data:new Uint32Array()},                    \r\n                    };\r\n  degen: boolean = true;\r\n  segmentsize: number = 1.0;\r\n  bonediv: number = 2.0;\r\n  type: number = 0;\r\n  squarevectorarray: number[][] | undefined;\r\n\r\n  floatStraighten(datatitle: string, w: number, wdata: number[][]): Float32Array\r\n  {\r\n    var data = new Float32Array(wdata.length*w);\r\n    console.log(\">floatstraighten\"+w +\" \"+datatitle+\" wdata.length=\"+wdata.length);\r\n    for(var i=0; i<wdata.length; i++) \r\n      for(var j=0; j<w; j++) data[i*w+j]=wdata[i][j]; \r\n    console.log(\"<floatstraighten\"+w +\" \"+datatitle+\": len=\"+data.length);\r\n    return data;\r\n  }\r\n\r\n  intStraighten(datatitle: string, w: number, wdata: number[][]): Uint32Array\r\n  {\r\n    var data = new Uint32Array(wdata.length*w);\r\n    console.log(\">intstraighten\"+w +\" \"+datatitle+\" wdata.length=\"+wdata.length);\r\n    for(var i=0; i<wdata.length; i++) \r\n      for(var j=0; j<w; j++) data[i*w+j]=wdata[i][j]; \r\n    console.log(\"<intstraighten\"+w +\" \"+datatitle+\": len=\"+data.length);\r\n    return data;\r\n  }\r\n\r\n  intArray(datatitle: string, wdata: number[]): Uint32Array\r\n  {\r\n    var data = new Uint32Array(wdata.length);\r\n    console.log(\">intArray\" +\" \"+datatitle+\" wdata.length=\"+wdata.length);\r\n    for(var i=0; i<wdata.length; i++) data[i]=wdata[i]; \r\n    console.log(\"<intArray\" +\" \"+datatitle+\": len=\"+data.length);\r\n    return data;\r\n  }\r\n\r\n  abstract getFishHPositions(): {numComponents: number, data: Float32Array};\r\n  abstract getFishVPositions(): {numComponents: number, data: Float32Array};\r\n  \r\n\r\n}\r\n","import * as stridedmesh0 from \"./stridedmesh0\" // mesh and bones data\r\n\r\ntype number2 = [number,number];\r\ntype number3 = [number,number,number];\r\ntype number4 = [number,number,number,number];\r\n \r\nexport class StridedMesh extends stridedmesh0.StridedMesh0\r\n{\r\n  constructor( cnrows: number, cnsegments: number, scale: number)\r\n  {\r\n    super();\r\n    this.segmentsize = scale*0.18;\r\n    this.nsegments = cnsegments;\r\n    this.nrows = cnrows;\r\n    this.arrays = {\r\n      position: {numComponents:0, data: new Float32Array()},                       // positions to be filled by caller\r\n      boneNdx: this.buildBoneIndex( this.nrows, this.nsegments),                   // bone defined in X-axis direction\r\n      weight: this.buildBoneWeights(this.nrows, this.nsegments),                   // weights for bone segments\r\n      indices: this.buildIndicesStridedTriangleStrip( this.nrows, this.nsegments), // index for any triangle strip segmented quad\r\n      texcoord: this.buildTexCoords( this.nrows, this.nsegments),                  // texture coords for any triangle strip quad\r\n   };\r\n  }\r\n\r\n  buildPositions(n: number, nrows: number, stride: number)\r\n  {\r\n    var posdata: number3[] = [];\r\n    var cx=0, cy=0, cz=0;   \r\n    for (var y=0; y<nrows; y++)\r\n    {\r\n      for (var x=0; x<stride; x++)\r\n      {\r\n        var d = (Math.PI/4.0) * (y-nrows/2) / nrows;\r\n        d = 1.0-Math.cos(d);\r\n        cx = x*this.segmentsize;\r\n        cy = y*this.segmentsize;\r\n        cz = 88.0*d*this.segmentsize;\r\n        posdata.push([cx,cy,cz]);\r\n      }\r\n    }\r\n    var data = this.floatStraighten(\"Positions\",3, posdata); // this.floatStraighten4(\"BoneWeights\",wdata);\r\n    return  { numComponents: 3, data };\r\n  }\r\n\r\n  buildCylPositions(n: number, nrows: number, stride: number, r1: number, r2: number)\r\n  {\r\n    var posdata: number3[] = [];\r\n    var cx=0, cy=0, cz=0, a =0, da=Math.PI*2.0/(nrows-1), z=0, r=5;   \r\n    for (var y=0; y<nrows; y++)\r\n    {\r\n      for (var x=0; x<stride; x++)\r\n      {\r\n        var d = (Math.PI/4.0) * (y-nrows/2) / nrows;\r\n        d = 1.0-Math.cos(d);\r\n        cx = x*this.segmentsize;\r\n        cy = this.segmentsize*Math.sin(a)*r1;\r\n        cz = this.segmentsize*Math.cos(a)*r2;\r\n        posdata.push([cx,cy,cz]);\r\n      }\r\n      a+=da;\r\n    }\r\n    var data = this.floatStraighten(\"Positions\",3, posdata); // this.floatStraighten4(\"BoneWeights\",wdata);\r\n    return  { numComponents: 3, data };\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------\r\n\r\n  buildFishVPositions(n: number, nrows: number, stride: number)\r\n  {\r\n    var posdata: number3[] = [];\r\n    var cx=0, cy=0, cz=0, a =0, da=Math.PI*2.0/(nrows-1), z=0, r=20;   \r\n    var dtail = stride/4;\r\n    var htail = stride*3/4;\r\n    var dr = r/dtail;\r\n    for (var y=0; y<nrows; y++)\r\n    {\r\n      r=1;\r\n      for (var x=0; x<stride; x++)\r\n      {\r\n        var d = (Math.PI/4.0) * (y-nrows/2) / nrows;\r\n        d = 1.0-Math.cos(d);\r\n        cx = x*this.segmentsize;\r\n        if (x<dtail)\r\n        {\r\n          r=r+dr;\r\n        }\r\n        var dtailr = (x-htail);\r\n        if (dtailr<0)\r\n        {           \r\n            cy = this.segmentsize*Math.cos(-a)*r;\r\n            cz = this.segmentsize*Math.sin(-a)*r;          \r\n        } else\r\n        {\r\n          var cdr = 1.0 - dtailr/dtail;            \r\n            cy = this.segmentsize*Math.cos(-a)*r*(cdr);\r\n            cz = this.segmentsize*Math.sin(-a)*r*(2.0-cdr);          \r\n        }\r\n        posdata.push([cx,cy,cz]);\r\n      }\r\n      a+=da;\r\n    }\r\n    var data = this.floatStraighten(\"Positions\",3, posdata); // this.floatStraighten4(\"BoneWeights\",wdata);\r\n    return  { numComponents: 3, data };\r\n  }\r\n\r\n\r\n  buildFishHPositions(n: number, nrows: number, stride: number)\r\n  {\r\n    var posdata: number3[] = [];\r\n    var cx=0, cy=0, cz=0, a =0, da=Math.PI*2.0/(nrows-1), z=0, r=20;   \r\n    var dtail = stride/4;\r\n    var htail = stride*3/4;\r\n    var dr = r/dtail;\r\n    for (var y=0; y<nrows; y++)\r\n    {\r\n      r=1;\r\n      for (var x=0; x<stride; x++)\r\n      {\r\n        var d = (Math.PI/4.0) * (y-nrows/2) / nrows;\r\n        d = 1.0-Math.cos(d);\r\n        cx = x*this.segmentsize;\r\n        if (x<dtail)\r\n        {\r\n          r=r+dr;\r\n        }\r\n        var dtailr = (x-htail);\r\n        if (dtailr<0)\r\n        {\r\n          cy = this.segmentsize*Math.sin(a)*r;\r\n          cz = this.segmentsize*Math.cos(a)*r;\r\n        } else\r\n        {\r\n          var cdr = 1.0 - dtailr/dtail;\r\n          cy = this.segmentsize*Math.sin(a)*r*(2.0-cdr);\r\n          cz = this.segmentsize*Math.cos(a)*r*(cdr);\r\n        }\r\n        posdata.push([cx,cy,cz]);\r\n      }\r\n      a+=da;\r\n    }\r\n    var data = this.floatStraighten(\"Positions\",3, posdata); // this.floatStraighten4(\"BoneWeights\",wdata);\r\n    return  { numComponents: 3, data };\r\n  }\r\n\r\n  getFishHPositions()\r\n  {\r\n    var pos =  this.buildFishHPositions(this.nsegments, this.nrows, this.nsegments);   \r\n    return pos;\r\n  }\r\n\r\n  getFishVPositions()\r\n  {\r\n    var pos =   this.buildFishVPositions(this.nsegments, this.nrows, this.nsegments);\r\n    return pos;\r\n  }\r\n\r\n  getCylPositions(r1: number,r2: number)\r\n  {\r\n    var pos =  this.buildCylPositions(this.nsegments, this.nrows, this.nsegments, r1, r2);   \r\n    return pos;\r\n  }\r\n\r\n  //-----------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  buildIndicesStridedTriangleStrip( nrows: number, stride: number) \r\n  {\r\n    var inxdata: number[] = [];     \r\n    var crow = 1;\r\n    var ca1 = stride; \r\n    while (crow < nrows)\r\n    {\r\n        var i = 0; \r\n        var val = 0;\r\n        var ca0 = ca1-stride;\r\n        while (i < stride) {\r\n          val = ca0;\r\n          if (this.degen)\r\n            if (i==0) inxdata.push(val);\r\n          inxdata.push(val);\r\n          val = ca1;\r\n          inxdata.push(val);\r\n          ca1++;\r\n          ca0++; \r\n          i++;             \r\n        }\r\n        if (this.degen) inxdata.push(val); \r\n        crow++;\r\n    }\r\n    var data = this.intArray(\"Indices\", inxdata);\r\n    return { numComponents: 1, data };\r\n  }\r\n  \r\n  buildBoneIndex(nrows: number, stride: number)\r\n  { \r\n     var ndxdata: number4[] = [];     \r\n     var n1=0,n2=0;\r\n     for (var y=0; y<nrows; y++)\r\n     {\r\n       for (var x=0; x<stride; x++)\r\n       {\r\n        if ((x%2)==0)\r\n          if(this.bonediv>=2)\r\n          {\r\n            n1=x/this.bonediv; n2=99999;  ndxdata.push([n1,n2,99999,99999]);\r\n            n2=1+x/this.bonediv; ndxdata.push([n1,n2,99999,99999]);\r\n          } else \r\n          {\r\n           n1=x;   n2=99999;  ndxdata.push([n1,n2,99999,99999]);\r\n           n1=x+1; n2=99999;  ndxdata.push([n1,n2,99999,99999]);\r\n          }       \r\n       }\r\n     }\r\n    var data = this.intStraighten(\"BoneIndex\",4,ndxdata);\r\n    return { numComponents: 4, data };\r\n  }\r\n\r\n  buildTexCoords( nrows: number, stride: number)\r\n  { \r\n    var i = 0, n1=1.0, n2=0.0; \r\n    var wdata: number2[] = [];     \r\n    var crow = 0;\r\n    while (crow < nrows)\r\n    {\r\n        for (var i=0; i<stride; i++)     \r\n        {   \r\n          var xt = i / +stride.toFixed(4);\r\n          var yt = crow / +nrows.toFixed(4);\r\n          wdata.push([xt,yt]);  \r\n        }                            \r\n        crow++;\r\n    }\r\n    var data = new Float32Array(wdata.length*2);\r\n    console.log(\"=>copy texcoords len=\"+wdata.length+\" stride=\"+stride+\" nrows=\"+nrows);\r\n    for(var i=0; i<wdata.length; i++)   \r\n      for(var j=0; j<2; j++) data[i*2+j]=wdata[i][j];     \r\n    console.log(\"texcoords buffer: len=\"+data.length);\r\n    console.log(data);\r\n    return { numComponents: 2, data };\r\n  }\r\n\r\n  buildBoneWeights( nrows: number, stride: number) \r\n  { \r\n      var wdata: number4[] = [];     \r\n      var n1=1.0, n2=0.0; \r\n      for (var y=0; y<nrows; y++)\r\n      {\r\n        for (var x=0; x<stride; x++)\r\n        {\r\n          if ((x%2)==0)\r\n          {\r\n         //   if(this.bonediv==2) \r\n            {\r\n              wdata.push([1.0,0.0,0,0]);\r\n              wdata.push([0.5,0.5,0,0]);          \r\n            }\r\n         /*   else\r\n            {\r\n              wdata.push([n1,n2,0,0]);\r\n              wdata.push([n1,n2,0,0]);\r\n            } */\r\n          }         \r\n        }\r\n      }\r\n      var data = this.floatStraighten(\"BoneWeights\",4, wdata); // this.floatStraighten4(\"BoneWeights\",wdata);\r\n      return { numComponents: 4, data };\r\n  }\r\n  \r\n  \r\n}\r\n","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as stridedmesh0 from \"./stridedmesh0\" // mesh and bones (data)\r\nimport * as stridedmesh from \"./stridedmesh\" // mesh and bones (data)\r\n\r\n// -- vertex shader --\r\nexport const vsSkeleton = `#version 300 es\r\n\r\n// camera\r\nuniform mat4 viewprojection;\r\nuniform vec3 lightWorldPos;\r\nuniform mat4 world;\r\nuniform mat4 viewInverse;\r\nuniform mat4 worldInverseTranspose;\r\n\r\nin vec4 a_position;\r\nin vec4 a_weight;\r\nin uvec4 a_boneNdx;\r\nin vec2 a_texcoord;\r\n \r\nuniform mat4 projection;\r\nuniform mat4 view;\r\n\r\nuniform sampler2D boneMatrixTexture;\r\n\r\nuniform float numBones;\r\n\r\nout vec2 v_texCoord;\r\n\r\nmat4 m4ident =  mat4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);\r\nmat4 m4zero =  mat4(0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\r\n\r\nmat4 getBoneMatrix(uint boneNdx) {\r\n  if (boneNdx>99998u) return m4zero;\r\n  return mat4(\r\n    texelFetch(boneMatrixTexture, ivec2(0, boneNdx), 0),\r\n    texelFetch(boneMatrixTexture, ivec2(1, boneNdx), 0),\r\n    texelFetch(boneMatrixTexture, ivec2(2, boneNdx), 0),\r\n    texelFetch(boneMatrixTexture, ivec2(3, boneNdx), 0));\r\n}\r\n\r\nvoid main() {\r\n  v_texCoord = a_texcoord;\r\n  vec4 bonemovedskinpos = (getBoneMatrix(a_boneNdx[0]) * a_position * a_weight[0] + getBoneMatrix(a_boneNdx[1]) * a_position * a_weight[1]);\r\n  gl_Position = viewprojection * world * bonemovedskinpos;\r\n }\r\n`;\r\n\r\nexport const fsSkeleton = `#version 300 es\r\nprecision mediump float;\r\n//precision highp float;\r\nuniform vec4 color;\r\nin vec2 v_texCoord;\r\nout vec4 outColor;\r\nuniform sampler2D surfaceTexture;\r\n\r\nvoid main () {\r\n  vec4 cColor =  texture(surfaceTexture, v_texCoord);\r\n  outColor=cColor * vec4(0.5,0.5,0.5,1);\r\n}\r\n`;\r\n\r\nexport type Tuniforms = {\r\n    world: m4.Mat4,\r\n    projection: m4.Mat4,\r\n    viewprojection: m4.Mat4;\r\n    view: m4.Mat4,\r\n    surfaceTexture: WebGLTexture,\r\n    boneMatrixTexture: WebGLTexture,\r\n    color: number[]\r\n  };\r\n\r\nexport class BoneAnimation\r\n{\r\n    bindPose: m4.Mat4[] = [];    \r\n   \r\n    bones: m4.Mat4[] = []; \r\n    boneMatrices: m4.Mat4[] = [] ;\r\n\r\n    numBones: number | undefined;\r\n    boneArray: Float32Array | undefined;\r\n   \r\n    boneMatrixTexture: WebGLTexture |undefined;\r\n    surfaceTexture: WebGLTexture| undefined;\r\n   \r\n    // animation state\r\n    px: number =0.0;\r\n    py: number =0.0;\r\n    pz: number =0.0;\r\n    scale: number = 1.0;\r\n      \r\n    bindPoseInv2: m4.Mat4[] = [] ;\r\n \r\n    phase0: number= 0;\r\n    mesh: stridedmesh0.StridedMesh0 = new stridedmesh.StridedMesh(1,1,1); // | null = null;   \r\n    uniforms: Tuniforms = { world: [], projection: [], viewprojection:[], view:[],surfaceTexture: {}, boneMatrixTexture:{}, color:[] };  \r\n\r\n    bufferInfo: twgl.BufferInfo | null = null;\r\n    skinVAO: WebGLVertexArrayObject | null = null;\r\n    \r\n    constructor( )\r\n    {\r\n   //   this.boneMatrixTexture = new WebGLTexture();\r\n   //   this.surfaceTexture = new WebGLTexture();\r\n    }\r\n\r\n    setNumBones(gl: WebGL2RenderingContext)\r\n    {\r\n        this.numBones = (this.mesh!.type==gl.TRIANGLE_STRIP)? (this.mesh!.nsegments / this.mesh!.bonediv) : this.mesh!.nsegments;   \r\n    }\r\n \r\n    mat4report(m: m4.Mat4)\r\n     {\r\n      var srep: string = m.toString()!;\r\n      var srep1: string = \"\";\r\n      srep.split(\",\").forEach( (item) => { srep1+=item.substring(0,5)+\",\"; } );\r\n      return srep;\r\n    }\r\n \r\n    prepareBoneInv(bindPose: m4.Mat4[])\r\n    {\r\n         // compute the initial positions of each matrix\r\n     \r\n         var nrep = 0;\r\n         console.log(\"prepareBoneInv - bindpose\");\r\n         bindPose.forEach((v)=>{ \r\n           this.mat4report(v);\r\n           console.log(nrep+\"] [\"+v.toString()+\"] \"); \r\n           nrep++;\r\n         });\r\n       \r\n       // compute their inverses\r\n         return  bindPose.map(function(m) {\r\n           return m4.inverse(m);\r\n         }); \r\n    }\r\n    \r\n  /*  \r\n    prepareSurfaceTextures(gl: WebGL2RenderingContext, selectedSurface:string)\r\n    {\r\n        var gradientname = require(\"./resources/models/stone/circlegradient.png\");\r\n        var clovername = require(\"./images/clover.jpg\");\r\n        var zelenskyyname = require(\"./resources/models/stone/zelenskii.png\");\r\n        var flagofukrainname = require(\"./resources/models/stone/flagofukraine.png\");\r\n        var textures = twgl.createTextures(gl, { \r\n         checker: {\r\n           mag: gl.NEAREST,\r\n           min: gl.LINEAR,\r\n           src: [255, 255, 255, 255,  192, 192, 192, 255,\r\n                 92, 92, 92, 255, 255, 255, 255, 255, ],},\r\n         clover: { src: clovername },\r\n         zelenskyy: { src: zelenskyyname },\r\n         gradient: { src: gradientname },\r\n         flagofukraine: { src: flagofukrainname },\r\n        });\r\n       if (selectedSurface==\"clover\") this.surfaceTexture = textures.clover;\r\n       if (selectedSurface==\"zelenskyy\") this.surfaceTexture = textures.zelenskyy;\r\n       if (selectedSurface==\"checker\") this.surfaceTexture = textures.checker;\r\n       if (selectedSurface==\"gradient\") this.surfaceTexture = textures.gradient;\r\n       if (selectedSurface==\"flagofukraine\") this.surfaceTexture = textures.flagofukraine;\r\n       return textures;\r\n    } \r\n  */\r\n \r\n    prepareBoneMatrices(gl: WebGL2RenderingContext, dictpar:Map<string,string>)\r\n    {\r\n       if (this.numBones==undefined) return;\r\n\r\n    \r\n      this.boneArray = new Float32Array(this.numBones! * 16);\r\n    \r\n      // prepare the texture for bone matrices\r\n      this.boneMatrixTexture = gl.createTexture()!;\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, this.boneMatrixTexture);\r\n\r\n      // since we want to use the texture for pure data we turn off filtering\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n \r\n      for (let i = 0; i < this.numBones!; ++i) {\r\n        this.boneMatrices.push(new Float32Array(this.boneArray.buffer, i * 4 * 16, 16));\r\n        this.bindPose.push(m4.identity());  // just allocate storage\r\n        this.bones.push(m4.identity());     // just allocate storage\r\n       }\r\n    }\r\n\r\n    prepareBoneTexture(gl:WebGL2RenderingContext, bindPosInv:m4.Mat4[]|null)\r\n    {   \r\n       if (bindPosInv==null) // when a reset of the bone transformation is not needed, copy bone matrix to GPU\r\n        this.bones.forEach((bone, ndx) => { m4.multiply(bone, m4.identity(), this.boneMatrices[ndx]); });\r\n       else                  // else multiply each by its initial inverse tansformation before copy bone matrix to GPU\r\n        this.bones.forEach((bone, ndx) => { m4.multiply(bone, bindPosInv[ndx], this.boneMatrices[ndx]); });\r\n     \r\n      // update the texture with the current matrices\r\n      gl.bindTexture(gl.TEXTURE_2D, this.boneMatrixTexture!);\r\n      gl.texImage2D(\r\n          gl.TEXTURE_2D,\r\n          0,           // level\r\n          gl.RGBA32F,  // internal format\r\n          4,           // width 4 pixels, each pixel has RGBA so 4 pixels is 16 values\r\n          this.numBones!,    // one row per bone\r\n          0,           // border\r\n          gl.RGBA,     // format\r\n          gl.FLOAT,    // type\r\n          this.boneArray!);\r\n    }\r\n}\r\n","import * as stridedmesh0 from \"./stridedmesh0\" // mesh and bones data\r\n\r\ntype number2 = [number,number];\r\ntype number3 = [number,number,number];\r\ntype number4 = [number,number,number,number];\r\n \r\n//type number4 = number[];\r\n//type number2 = number[];\r\n \r\nexport class StridedMesh extends stridedmesh0.StridedMesh0\r\n{\r\n  \r\n  \r\n  getFishHPositions()\r\n  {\r\n    var pos =  this.build3DTrianglesPositions(this.nsegments, this.nrows, this.nsegments);   \r\n    return pos;\r\n  }\r\n  \r\n  getFishPPositions()\r\n  {\r\n    var pos =  this.build3DTrianglesPositions(this.nsegments, this.nrows, this.nsegments);   \r\n    return pos;\r\n  }\r\n\r\n  getFishVPositions()\r\n  {\r\n    var pos =   this.build3DTrianglesPositions(this.nsegments, this.nrows, this.nsegments);\r\n    return pos;\r\n  }\r\n\r\n\r\n  constructor( cnrows: number, cnsegments: number)\r\n  {\r\n    super();\r\n    this.segmentsize=0.1;\r\n    this.nsegments = cnsegments;\r\n    this.nrows = cnrows;\r\n    this.arrays = {\r\n      position: this.build3DTrianglesPositions(this.nsegments, this.nrows, this.nsegments),\r\n      boneNdx: this.buildBoneTrianglesNDX(this.nsegments, this.nrows, this.nsegments),\r\n      weight: this.buildWeightsTriangles(this.nsegments, this.nrows, this.nsegments),  \r\n      indices: this.buildIndicesTriangles(this.nsegments, this.nrows, this.nsegments), \r\n      texcoord: this.buildTexCoordTriangles(this.nsegments, this.nrows, this.nsegments)\r\n   };\r\n  }\r\n\r\n  buildWeightsTriangles(n:number, nrows: number, stride: number) { \r\n    var i = 0, n1=1.0, n2=0.0; \r\n    var wdata: number4[] = [];     \r\n    var crow = 0;\r\n    while (crow < nrows)\r\n    {\r\n        for (var i=0; i<stride; i++)        \r\n          for (var j=0; j<6; j++) wdata.push([n1,n2,0,0]);                              \r\n        crow++;\r\n    }\r\n    var data = new Float32Array(wdata.length*4);\r\n    console.log(\"=>copy weights len=\"+wdata.length+\" stride=\"+stride+\" nrows=\"+nrows);\r\n    for(var i=0; i<wdata.length; i++)   \r\n      for(var j=0; j<4; j++) data[i*4+j]=wdata[i][j];     \r\n    console.log(\"NDX weights buffer: len=\"+data.length);\r\n    return { numComponents: 4, data };\r\n  }\r\n\r\n  buildTexCoordTriangles(n:number, nrows: number, stride: number) { \r\n    var i = 0, n1=1.0, n2=0.0; \r\n    var wdata: number2[] = [];     \r\n    var crow = 0;\r\n    while (crow < nrows)\r\n    {\r\n        for (var i=0; i<stride; i++)     \r\n        {   \r\n          var xt = i / +stride.toFixed(4);\r\n          var yt = crow / +nrows.toFixed(4);\r\n          for (var j=0; j<6; j++) wdata.push([xt,yt]);  \r\n        }                            \r\n        crow++;\r\n    }\r\n    var data = new Float32Array(wdata.length*2);\r\n    console.log(\"=>copy texcoords len=\"+wdata.length+\" stride=\"+stride+\" nrows=\"+nrows);\r\n    for(var i=0; i<wdata.length; i++)   \r\n      for(var j=0; j<2; j++) data[i*2+j]=wdata[i][j];     \r\n    console.log(\"texcoords buffer: len=\"+data.length);\r\n    console.log(data);\r\n    return { numComponents: 2, data };\r\n  }\r\n\r\n  buildIndicesTriangles(n: number, nrows: number, stride: number) {\r\n    var inxdata: number[] = [];     \r\n    var crow = 0;\r\n    var cpos = 0;\r\n    while (crow < nrows)\r\n    {\r\n        for(var i=0; i<stride;i++) {         \r\n          for (var j=0; j<6; j++) inxdata.push(cpos++);     \r\n        }\r\n        crow++;\r\n    }\r\n    var data = new Uint32Array(inxdata.length);\r\n    for(var i=0; i<inxdata.length; i++) data[i]=inxdata[i];\r\n    console.log(\"indices: len=\"+data.length);\r\n    console.log(data);\r\n    return { numComponents: 1, data };\r\n  }\r\n  \r\n  buildBoneTrianglesNDX(n: number, nrows: number, stride: number)\r\n  { \r\n   var ndxdata: number4[] = [];     \r\n   var crow = 0;\r\n   while (crow < nrows)\r\n   {\r\n       for (var i=0; i<stride; i++)\r\n         for (var j=0; j<6; j++)  ndxdata.push([i/this.bonediv,99999,99999,99999]);                 \r\n       crow++;\r\n   }\r\n   var data = new Uint32Array(ndxdata.length*4);\r\n   crow = 0;\r\n   console.log(\"ndxdat4.len=\"+ndxdata.length);\r\n   console.log(ndxdata);\r\n   for(var i=0; i<ndxdata.length; i++) \r\n   { \r\n     //console.log(i+\"] \"+ndxdata[i]);\r\n     for(var j=0; j<4; j++) data[i*4+j]=ndxdata[i][j]; \r\n   }\r\n   console.log(\"NDX indices buffer: len=\"+data.length);\r\n   console.log(data);\r\n   return { numComponents: 4, data };\r\n  }\r\n\r\n\r\n\r\n    build3DTrianglesPositions(n: number, nrows: number, stride: number)\r\n    {\r\n      var posdata: number[] = [];\r\n      var z=0,sz,cx,cy,cz=0.0,dz=0.0;\r\n      sz =this.segmentsize;\r\n      dz = sz*dz;\r\n        \r\n      for (var y=0; y<nrows; y++)\r\n      {\r\n        var d = (Math.PI/4.0) * (y-nrows/2) / nrows;\r\n        d = 1.0-Math.cos(d);\r\n        z = 8.0*d;\r\n        for (var x=0; x<stride; x++)\r\n        {\r\n          cx = sz*x;\r\n          cy = sz*y;\r\n          cz = sz*z;\r\n          //if ((x%2)==0)\r\n          {\r\n            posdata.push(cx);   //  |_\\\r\n            posdata.push(cy);\r\n            posdata.push(cz);\r\n            posdata.push(cx);\r\n            posdata.push(cy+sz);\r\n            posdata.push(cz+dz);\r\n            posdata.push(cx+sz);\r\n            posdata.push(cy+sz);\r\n            posdata.push(cz+dz);\r\n          } //else\r\n          {\r\n            posdata.push(cx+sz);  //  \\-|\r\n            posdata.push(cy+sz);\r\n            posdata.push(cz+dz);\r\n            posdata.push(cx+sz);\r\n            posdata.push(cy);\r\n            posdata.push(cz);\r\n            posdata.push(cx);\r\n            posdata.push(cy);\r\n            posdata.push(cz);\r\n          }\r\n        }\r\n        cz=cz+dz;\r\n    }\r\n        var data3d = new Float32Array(posdata.length);\r\n        for(var i=0; i<posdata.length; i++) data3d[i] = posdata[i];\r\n        console.log(\"positions: len=\"+data3d.length+\" nvect=\"+(data3d.length/3));\r\n        console.log(data3d);\r\n       return  { numComponents: 3, data: data3d };\r\n    }\r\n\r\n}\r\n","\r\nimport * as twgl from \"./../node_modules/twgl.js\";    // Greg's work\r\nimport { m4 } from \"./../node_modules/twgl.js\";\r\n\r\nimport * as stridedmesh0 from \"./stridedmesh0\" // mesh and bones (data)\r\nimport * as stridedmesh from \"./stridedmesh\" // mesh and bones (data)\r\nimport * as trianglesmesh from \"./trianglesmesh\" // mesh and bones (data)\r\nimport * as boneanimation from \"./boneanimation\"\r\nimport { mat4tools } from \"./mat4tools.js\";\r\n\r\nexport interface FishInterface \r\n  {\r\n    computeBone( time: number, domove: boolean, domovetail: boolean): void;\r\n    createUniforms(gl:WebGL2RenderingContext,dictpar:Map<string,string>): boneanimation.Tuniforms;\r\n    prepareMesh(gl: WebGL2RenderingContext, dictpar:Map<string,string>, scale: number,typeFish: number): stridedmesh0.StridedMesh0;\r\n  }\r\n\r\n // type Meshproducer = (numrows: number, stride: number, scale: number) => {\r\n //   numComponents: number;\r\n //   data: Float32Array;\r\n //  };\r\n  \r\nexport abstract class Fish extends boneanimation.BoneAnimation implements FishInterface\r\n  {\r\n    EndOfBoneTrans: m4.Mat4 = m4.identity();\r\n\r\n    public abstract prepareMesh(gl: WebGL2RenderingContext, dictpar:Map<string,string>, scale: number): stridedmesh0.StridedMesh0; // called from constructors\r\n    protected abstract computeBoneMatrices(bones: m4.Mat4[], di:number): void; //, damp: number, arange: number) :void;                          // called from renderer\r\n  \r\n    constructor (public size: number,public r1: number,public r2: number, public forwardspeed: number, public phase0: number, public deltaphase: number, public arange: number, public ampl: number, public surfacetexturefile: string) \r\n    { super(); }\r\n  \r\n    computeBone( time: number, domove: boolean, domovetail: boolean)\r\n    {\r\n      const aphase = domovetail ? (this.mesh!.bonediv * 0.01 * Math.PI * Math.sin(time * this.deltaphase)):0;\r\n      this.computeBoneMatrices(this.bones,aphase + this.phase0); //, this.ampl, this.arange);     \r\n    }\r\n\r\n    prepareSurfaceTextures(gl: WebGL2RenderingContext, selectedSurface:string)\r\n   {\r\n       var gradientname = require(\"./resources/models/stone/circlegradient.png\");\r\n       var clovername = require(\"./images/clover.jpg\");\r\n       var zelenskyyname = require(\"./resources/models/stone/zelenskii.png\");\r\n       var flagofukrainname = require(\"./resources/models/stone/flagofukraine.png\");\r\n       var textures = twgl.createTextures(gl, { \r\n        checker: {\r\n          mag: gl.NEAREST,\r\n          min: gl.LINEAR,\r\n          src: [255, 255, 255, 255,  192, 192, 192, 255,\r\n                92, 92, 92, 255, 255, 255, 255, 255, ],},\r\n        clover: { src: clovername },\r\n        zelenskyy: { src: zelenskyyname },\r\n        gradient: { src: gradientname },\r\n        flagofukraine: { src: flagofukrainname },\r\n       });\r\n      if (selectedSurface==\"clover\") this.surfaceTexture = textures.clover;\r\n      if (selectedSurface==\"zelenskyy\") this.surfaceTexture = textures.zelenskyy;\r\n      if (selectedSurface==\"checker\") this.surfaceTexture = textures.checker;\r\n      if (selectedSurface==\"gradient\") this.surfaceTexture = textures.gradient;\r\n      if (selectedSurface==\"flagofukraine\") this.surfaceTexture = textures.flagofukraine;\r\n      return textures;\r\n   } \r\n\r\n    createSurfaceTexture(gl:WebGL2RenderingContext)\r\n    {\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.surfaceTexture!);  \r\n    }\r\n\r\n    createBoneTexture(gl:WebGL2RenderingContext, time:number, dictpar:Map<string,string>)\r\n    {\r\n        gl.activeTexture(gl.TEXTURE0);            \r\n        this.prepareBoneMatrices(gl, dictpar);\r\n        this.computeBone(time, false, false);\r\n        this.bindPose=this.bones;\r\n        this.bindPoseInv2 = this.prepareBoneInv(this.bindPose);    \r\n        this.EndOfBoneTrans = m4.identity();     \r\n    }\r\n\r\n    createUniforms(gl:WebGL2RenderingContext,dictpar:Map<string,string>)\r\n    // called from constructors\r\n    {\r\n        return  {\r\n          world: m4.identity(),\r\n          projection: m4.identity(),\r\n          viewprojection: m4.identity(),\r\n          view: m4.translation([0.0, 0.0, 0.0]),\r\n          surfaceTexture: this.surfaceTexture!,\r\n          boneMatrixTexture: this.boneMatrixTexture!,\r\n          color: [0.0, 0.0, 0.0, 0.0],\r\n         };\r\n    }\r\n\r\n    numberDictPar(dictpar:Map<string,string>, parname: string, pardefault: number): number\r\n    {\r\n      var spar: string|undefined;\r\n      if ((spar=dictpar.get(parname))!=undefined) return +spar!;\r\n      return pardefault;\r\n    }\r\n\r\n    stringDictPar(dictpar:Map<string,string>, parname: string, pardefault: string): string\r\n    {\r\n      var spar: string|undefined;\r\n      if ((spar=dictpar.get(parname))!=undefined) return spar!;\r\n      return pardefault;\r\n    }\r\n\r\n  }\r\n\r\n  //--- VARIOUS TYPES OF FISH COME HERE ----------------------------------------------------------------------------\r\n  \r\n  export class FishHTranslated extends Fish\r\n  // Fish with horizontal tail \r\n  {   \r\n    prepareMesh(gl: WebGL2RenderingContext, dictpar:Map<string,string>, scale: number): stridedmesh0.StridedMesh0\r\n    // create mesh positions for a fish with tail in horizontal pose, moving up/down.\r\n    // produce a position item ready for stridedmesh0.Tarray\r\n    {\r\n       this.scale=scale;\r\n       var cstride =  this.numberDictPar(dictpar,\"stride\",80);\r\n       var cnumrows =  this.numberDictPar(dictpar,\"numrows\",80);\r\n       var cmeshtype = this.stringDictPar(dictpar, \"mesh\", \"triangle\" );\r\n       if (cmeshtype==\"strip\")\r\n        {\r\n          var tsmesh = new stridedmesh.StridedMesh(cnumrows, cstride, scale );\r\n          tsmesh.arrays.position = tsmesh.getFishHPositions()\r\n          tsmesh.type = gl.TRIANGLE_STRIP;  \r\n          console.log(\"created triangle strip mesh. phase=\"+this.phase0);\r\n          return tsmesh;\r\n        }  else\r\n        {\r\n            var trmesh = new trianglesmesh.StridedMesh(cnumrows, cstride);\r\n            trmesh.arrays.position = trmesh.getFishHPositions()\r\n            console.log(\"created triangles mesh. phase=\"+this.phase0);\r\n            trmesh.type = gl.TRIANGLES;\r\n            return trmesh;        \r\n        }\r\n    }\r\n  \r\n    protected computeBoneMatrices(bones: m4.Mat4[], di:number) \r\n    // move bone up-down, called from rendering\r\n    { \r\n      var amp=0.0;\r\n      var damp=this.ampl/bones.length;\r\n      var arange=this.arange*2.0*Math.PI;\r\n      for (var i = 0; i < bones.length; i++)\r\n      {          \r\n         var  m = m4.identity();\r\n         var normx = i;\r\n         normx = normx /bones.length;         \r\n         var ay = arange*(normx*di);\r\n         var az = arange*(normx*di);\r\n         m4.translate(m,[this.px,\r\n                         this.py + amp * Math.cos(0.5*ay),\r\n                         this.pz + amp * 10.0 * Math.sin(az)], \r\n                         bones[i]);  \r\n         this.py+=0.0;\r\n         this.pz+=0.00000;\r\n         amp+=this.size*damp;       \r\n      }  \r\n//      this.px+=-this.forwardspeed; // * bones.length;    \r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------------------------------------------\r\n  \r\n  export class FishV extends Fish\r\n  // Fish with vertical tail \r\n  {    \r\n    prepareMesh(gl: WebGL2RenderingContext, dictpar:Map<string,string>, scale: number)\r\n     // create mesh positions for a fish with tail in vertical pose, moving left/right.\r\n    // produce a position item ready for stridedmesh0.Tarray\r\n    {\r\n      this.scale=scale;      \r\n      var cstride =  this.numberDictPar(dictpar,\"stride\",80);\r\n      var cnumrows =  this.numberDictPar(dictpar,\"numrows\",80);\r\n      var cmeshtype = this.stringDictPar(dictpar, \"mesh\", \"strip\" );\r\n      if (cmeshtype==\"strip\")\r\n      {\r\n        var tsmesh = new stridedmesh.StridedMesh(cnumrows, cstride, scale );\r\n        tsmesh.arrays.position = tsmesh.getFishVPositions()\r\n        tsmesh.type = gl.TRIANGLE_STRIP;  \r\n        return tsmesh;\r\n      }  else\r\n      {\r\n          var trmesh = new trianglesmesh.StridedMesh(cnumrows, cstride);\r\n          trmesh.arrays.position = trmesh.getFishVPositions()\r\n          trmesh.type = gl.TRIANGLES;\r\n          return trmesh;        \r\n      }\r\n   }\r\n  \r\n   protected computeBoneMatrices(bones: m4.Mat4[], di:number) \r\n   // move bone left-right, called from rendering\r\n   {   \r\n     var amp=0.0,damp=this.ampl/bones.length, arange=this.arange*2.0*Math.PI;  \r\n     for (var i = 0; i < bones.length; i++)\r\n     {           \r\n         m4.translate(m4.identity(),[this.px,\r\n                        this.py + amp*10.0*Math.cos(arange*(i+di)/bones.length + di),\r\n                        this.pz + amp*Math.sin(+arange*i/bones.length + di)], \r\n                        bones[i]);\r\n        this.py+=0.0;\r\n        this.pz+=0.00000;\r\n        amp+=this.scale*damp;\r\n        \r\n     }  \r\n  //   this.px+=-this.forwardspeed; // * bones.length;      \r\n    } \r\n  }  \r\n\r\n  //----------------------------------------------------------------------------------------------------------\r\n\r\n  export class FishHRotated extends Fish\r\n  // Fish with horizontal tail \r\n  {       \r\n \r\n    prepareMesh(gl: WebGL2RenderingContext, dictpar:Map<string,string>, scale: number): stridedmesh0.StridedMesh0\r\n    // create mesh positions for a fish with tail in horizontal pose, moving up/down.\r\n    // produce a position item ready for stridedmesh0.Tarray\r\n    {\r\n       this.scale=scale;\r\n       var cstride =  this.numberDictPar(dictpar,\"stride\",80);\r\n       var cnumrows =  this.numberDictPar(dictpar,\"numrows\",80);\r\n       var cmeshtype = this.stringDictPar(dictpar, \"mesh\", \"strip\" );\r\n       if (cmeshtype==\"strip\")\r\n        {\r\n          var tsmesh = new stridedmesh.StridedMesh(cnumrows, cstride, scale );\r\n          tsmesh.arrays.position = tsmesh.getCylPositions(this.r1, this.r2)\r\n          tsmesh.type = gl.TRIANGLE_STRIP;  \r\n          console.log(\"created triangle strip mesh. phase=\"+this.phase0);\r\n          return tsmesh;\r\n        }  else\r\n        {\r\n            var trmesh = new trianglesmesh.StridedMesh(cnumrows, cstride);\r\n            trmesh.arrays.position = trmesh.getFishPPositions()\r\n            trmesh.type = gl.TRIANGLES;\r\n            return trmesh;        \r\n        }\r\n    }\r\n  \r\n    protected computeBoneMatrices(bones: m4.Mat4[], di:number) \r\n    // move bone up-down, called from rendering\r\n    { \r\n      var amp=0.0;\r\n      var damp=this.ampl/bones.length;\r\n      var arad=di*Math.PI/180.0;\r\n      var asin=(this.ampl * di)*Math.PI*2.0; //Math.sin( this.phase0+12.0*arad)*this.arange;\r\n     // var arange=this.arange;\r\n     // var cay = -180.0; \r\n      var ay=0.0;\r\n      var bonesize= this.mesh!.nsegments*this.mesh!.segmentsize;\r\n      var jointpos = 0.5;\r\n      var jointpos2 = 0.3;\r\n      for (var i = 0; i < bones.length; i++)\r\n      {          \r\n        var nnormx = i /bones.length;   \r\n        var nnormxal = 0.5 + 0.5*Math.sin( this.arange*nnormx*asin);      \r\n    //    if (nnormx>jointpos) posay = asin * nnormxal; else posay=0;\r\n        ay = asin * nnormxal;\r\n        var  m = m4.identity();\r\n        m = m4.translate(m,[jointpos*bonesize/2+this.px,0,0]);\r\n        m = m4.rotateY(m, ay );\r\n        m = m4.translate(m,[-(jointpos*bonesize/2+this.px),0,0,0]);\r\n        m = m4.translate(m,[this.px,0,0,0]);\r\n    \r\n      //  m = m4.translate(m,[jointpos*bonesize,0,0]);\r\n     //   m = m4.rotateY(m, posay );\r\n     //   m = m4.translate(m,[this.px,0,0,0]);\r\n        bones[i] = m;\r\n      //  this.py+=0.0;\r\n      //  this.pz+=0.00000;\r\n       // amp+=this.size*damp;       \r\n      }  \r\n  //    this.px+=-this.forwardspeed; // * bones.length;    \r\n    }\r\n  }\r\n  \r\n //----------------------------------------------------------------------------------------------------------\r\n\r\n export class FishOneJoint extends Fish\r\n // Fish with horizontal tail, using a joint\r\n {       \r\n  constructor (\r\n    public size: number,\r\n    public r1: number,\r\n    public r2: number, \r\n    public forwardspeed: number, \r\n    public phase0: number, \r\n    public deltaphase: number, \r\n    public arange: number, \r\n    public ampl: number, \r\n    public surfacetexturefile: string,\r\n    public jointpos: number, \r\n    public vaxis:number[]) \r\n  { super(size, r1,r2, forwardspeed, phase0, deltaphase,arange,ampl, surfacetexturefile); }\r\n\r\n   prepareMesh(gl: WebGL2RenderingContext, dictpar:Map<string,string>, scale: number): stridedmesh0.StridedMesh0\r\n   // create mesh positions for a fish with tail in horizontal pose, moving up/down.\r\n   // produce a position item ready for stridedmesh0.Tarray\r\n   {\r\n      this.scale=scale;\r\n      var cstride =  this.numberDictPar(dictpar,\"stride\",80);\r\n      var cnumrows =  this.numberDictPar(dictpar,\"numrows\",80);\r\n      var cmeshtype = this.stringDictPar(dictpar, \"mesh\", \"strip\" );\r\n      if (cmeshtype==\"strip\")\r\n       {\r\n         var tsmesh = new stridedmesh.StridedMesh(cnumrows, cstride, scale );\r\n         tsmesh.arrays.position = tsmesh.getCylPositions(this.r1, this.r2); // tsmesh.getFishVPositions()\r\n         tsmesh.type = gl.TRIANGLE_STRIP;  \r\n         console.log(\"created triangle strip mesh. phase=\"+this.phase0);\r\n         return tsmesh;\r\n       }  else\r\n       {\r\n           var trmesh = new trianglesmesh.StridedMesh(cnumrows, cstride);\r\n           trmesh.arrays.position = trmesh.getFishVPositions()\r\n           trmesh.type = gl.TRIANGLES;\r\n           return trmesh;        \r\n       }\r\n   }\r\n \r\n   protected computeBoneMatrices(bones: m4.Mat4[], di:number ) \r\n   // Rotate a straight tail starting at a single joint which is placed jointpos times length from start, in the X-direction.\r\n   // jointpos is a value between 0 and 1, di is current time\r\n   // Called from rendering\r\n   { \r\n     var bonesize= this.mesh!.nsegments * this.mesh!.segmentsize;   // length in x direction\r\n     var len: number=this.jointpos*bonesize;                        // len is distance from 0 to joint\r\n     var mtrans1 = m4.translation([len,0,0]);                       // joint serves as a rotation point (trans to)\r\n     var mtrans2 = m4.translation([-len,0,0]);                      // joint serves as a rotation point (trans back)\r\n     var ii=bones.length*this.jointpos;                             // ii is index where joint starts\r\n     var mrot = m4.axisRotate(mtrans1,this.vaxis, di * this.ampl ); // rotation used beyond joint\r\n     for (var i = 0; i < bones.length; i++)\r\n     {               \r\n       var m = (i>ii)?mrot:mtrans1;          // before joint, use trans1 matrix. After joint, use rotated trans1\r\n       bones[i] =  m4.multiply(m, mtrans2);  // bone matrix consists of local m translated back to origin\r\n     }  \r\n     this.EndOfBoneTrans = m4.translate(mrot,[bonesize-len-0.1,0,0,0]);  // the end of the bone      \r\n   }\r\n\r\n   \r\n\r\n\r\n }\r\n \r\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0\n            )\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    });\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n      {\n        const clientX = params.x || params.clientX || 0;\n        const clientY = params.y || params.clientY || 0;\n        evt.initMouseEvent(eventType, params.bubbles || false,\n          params.cancelable || true, window, params.clickCount || 1,\n          0, // screen X\n          0, // screen Y\n          clientX, // client X\n          clientY, // client Y\n          false, false, false, false, 0, null);\n        break;\n      }\n      case 'KeyboardEvents':\n      {\n        const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n        common.defaults(params, {\n          cancelable: true,\n          ctrlKey: false,\n          altKey: false,\n          shiftKey: false,\n          metaKey: false,\n          keyCode: undefined,\n          charCode: undefined\n        });\n        init(eventType, params.bubbles || false,\n          params.cancelable, window,\n          params.ctrlKey, params.altKey,\n          params.shiftKey, params.metaKey,\n          params.keyCode, params.charCode);\n        break;\n      }\n      default:\n      {\n        evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n        break;\n      }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n      //      width: '120px',\n      textAlign: 'center',\n      //      padding: '4px',\n      //      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n          arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from './dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n    //    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n    //    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n  //    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          }\n        );\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","\r\nimport * as twgl from \"twgl.js\";          // Greg's work, this twglbaseapp provides all tools like programInfo\r\nimport { m4, v3 }  from \"twgl.js\";    // Greg's work, this baseapp  only imports geometry matrix/vector tools\r\n\r\nimport * as mtls from \"./mouselistener\";  \r\nimport  * as datgui from \"dat.gui\";\r\n\r\n\r\nexport type TbaseappParameters = {\r\n    color0: string;\r\n    move: boolean,\r\n    speed: number\r\n}\r\n\r\nexport var instance: BaseApp|null=null;\r\n\r\nexport class BaseApp\r\n{    \r\n    baseappParameters: TbaseappParameters = {\r\n        move: false,\r\n        speed: 0.04,\r\n        color0: \"#00A000\"\r\n      };  \r\n\r\n    public gl: WebGL2RenderingContext|null=null;\r\n    public app:mtls.MouseListener|null=null;\r\n\r\n    // textures repository\r\n    public textureaspects:Map<string,number> = new Map<string,number>();\r\n    public textures: {[key: string]: WebGLTexture} | null =null;\r\n    public texture: WebGLTexture | undefined;\r\n\r\n    // camera\r\n    public cameraTarget: number[];\r\n    public cameraPosition: number[];\r\n\r\n    // programs\r\n    public twglprograminfo: twgl.ProgramInfo[]|null=null;  // there can be several\r\n\r\n    // environment skybox\r\n    //parameters for the skybox shader\r\n    skyboxLocation: WebGLUniformLocation | undefined;\r\n    viewDirectionProjectionInverseLocation: WebGLUniformLocation | undefined;\r\n    public environmentBufferInfo:twgl.BufferInfo | undefined; // environment texture\r\n    public vaoEnvironment: WebGLVertexArrayObject | undefined; // environment map vao buffer\r\n   \r\n    positionBuffer: WebGLBuffer|undefined;       // environment map geometry (quad in case of twgl)\r\n    positionAttributeLocation: number|undefined; // environment map geometry structure\r\n    \r\n    protected constructor(cgl: WebGL2RenderingContext | undefined | null, capp: mtls.MouseListener | undefined , dictpar:Map<string,string>, divname: string)\r\n    {\r\n        instance = this;\r\n        this.cameraTarget = [0,0.5,0];\r\n        this.cameraPosition = [4,0,0];\r\n        document.getElementById('cdiv')!.innerHTML = \"finding webgl2...\";\r\n        var isWebGL2 = !!cgl;  \r\n        if (!isWebGL2)\r\n        {\r\n            document.getElementById('cdiv')!.innerHTML = \"no webgl2\";\r\n        }  \r\n        else \r\n        {\r\n            document.getElementById('cdiv')!.innerHTML = \"webgl2 found\";      \r\n            this.gl=cgl!;  \r\n            this.app=capp!;  \r\n            this.twglprograminfo = new Array(1);\r\n            this.twglprograminfo![0] = twgl.createProgramInfo(cgl!,[this.vsEnvironmentMap,this.fsEnvironmentMap]);         \r\n            document.getElementById('cdiv')!.innerHTML = \"environment shaders initialized\";      \r\n        }\r\n    }\r\n   \r\n    onChangeColorValue(value? : any)\r\n    {\r\n        var thisinstance = instance!;\r\n        if (thisinstance.gl!=null)\r\n        {\r\n            var cc = (thisinstance.gl!.canvas as HTMLCanvasElement).parentNode;\r\n            var ccd= (cc as HTMLDivElement);\r\n            ccd.style.backgroundColor =  value;        \r\n        }\r\n    }\r\n\r\n    public createGUI(parameters:  {color0: string, move: boolean, speed: number}, instanceParameters: {}): datgui.GUI\r\n    {\r\n   //     console.log(\"=> baseApp initGUI \"+parameters);\r\n        this.baseappParameters= parameters ;\r\n        var cc = (this.gl!.canvas  as HTMLCanvasElement).parentNode;\r\n        var ccd= (cc as HTMLDivElement);\r\n        ccd.style.backgroundColor =  this.baseappParameters.color0;\r\n    \r\n        // park the dat.gui box in the linksdiv below the links, in closed state\r\n        var gui = new datgui.GUI( { autoPlace: false } );\r\n        gui.domElement.id = 'gui_drawimagespace';\r\n        document.getElementById(\"linksdiv\")!.append( gui.domElement);\r\n        gui.close();\r\n\r\n        // connect viewmodel\r\n        gui.remember(parameters, instanceParameters);\r\n     \r\n        // Checkbox forward move animation on/off\r\n        gui.add(parameters, 'move');\r\n        \r\n        // Slider for animation speed\r\n        gui.add(parameters, 'speed').min(0.002).max(0.06).step(0.001);\r\n        \r\n        // Color dialog sets background color\r\n   //     var cel3 = gui.addColor(parameters, 'color0');\r\n\r\n   //     cel3.onChange( this.onChangeColorValue);\r\n   //     console.log(\"<= baseApp initGUI\");\r\n        return gui;\r\n    }\r\n\r\n    //======================================================================================================\r\n\r\n     \r\n    defaultTextureReadyCallback(err: any, texture: WebGLTexture, source: twgl.TextureSrc): void\r\n    { \r\n      console.log(\"Environment textureA isready.\");\r\n    }\r\n\r\n    straightTextureCallback(err: any, texture: WebGLTexture)\r\n    {\r\n      console.log(\"Environment textureB isready.\");\r\n    }\r\n   \r\n        //--- used in drawimagespace, reads the texture repository maps textures[] and texureaspects[] ----------------------\r\n\r\n        public prepareSurfaceTextures(gl: WebGL2RenderingContext, selectedSurface:string)\r\n        {\r\n          this.textureaspects.set(\"checker\", 1.0);\r\n          this.textureaspects.set(\"clover\", 1.0);\r\n          this.textureaspects.set(\"zelenskyy\", 1.0);\r\n          this.textureaspects.set(\"aristotle\", (512.0/512.0));\r\n          this.textureaspects.set(\"flagofukraine\", (856.0/1288.0));\r\n          this.textureaspects.set(\"flagofukraine2\", (1288.0/856.0));\r\n          this.textureaspects.set(\"geotriangle\", (258.0/424.0));\r\n          this.textureaspects.set(\"geotriangle2\", (212.0/424.0));\r\n          this.textureaspects.set(\"geotriangle2\", (212.0/424.0));\r\n          this.textureaspects.set(\"protractorT2\", (395.0/747.0));\r\n          var gradientname = require(\"./../resources/models/stone/circlegradient.png\");\r\n          var aristotlename = require(\"./../resources/models/stone/aristoteles1.png\");\r\n          var clovername = require(\"./../images/clover.jpg\");\r\n          var zelenskyyname = require(\"./../resources/models/stone/zelenskii.png\");\r\n          var flagofukrainname = require(\"./../resources/models/stone/flagofukraine.png\");\r\n          var flagofukrainname2 = require(\"./../resources/models/stone/flagofukraine2.png\");\r\n          var trianglename = require(\"./../resources/models/stone/geodriehoek.png\");\r\n          var trianglename2 = require(\"./../resources/models/stone/geodriehoek2.png\");\r\n          var protractorT2name = require(\"./../resources/models/stone/protractorT2.png\");\r\n          this.textures = twgl.createTextures(gl, { \r\n              checker: {mag: gl.NEAREST, min: gl.LINEAR,src: [255, 255, 255, 255,  192, 192, 192, 0,   92, 92, 92, 255, 255, 255, 255, 255, ],},\r\n              clover: { src: clovername },\r\n              zelenskyy: { src: zelenskyyname },\r\n              gradient: { src: gradientname },\r\n              flagofukraine: { src: flagofukrainname },\r\n              flagofukraine2: { src: flagofukrainname2 },\r\n              geotriangle: { src: trianglename },\r\n              geotriangle2: { src: trianglename2 },\r\n              aristotle: { src: aristotlename },\r\n              protractorT2: { src: protractorT2name }\r\n            });\r\n          if (selectedSurface==\"checker\") return this.textures.checker;\r\n          if (selectedSurface==\"clover\") return this.textures.clover;\r\n          if (selectedSurface==\"zelenskyy\") return this.textures.zelenskyy;\r\n          if (selectedSurface==\"gradient\") return this.textures.gradient;\r\n          if (selectedSurface==\"flagofukraine\") return this.textures.flagofukraine;                       \r\n          if (selectedSurface==\"flagofukraine2\") return this.textures.flagofukraine2;                       \r\n          if (selectedSurface==\"geotriangle\") return this.textures.geotriangle;                       \r\n          if (selectedSurface==\"geotriangle2\") return this.textures.geotriangle2;                       \r\n          if (selectedSurface==\"aristotle\") return this.textures.geotriangle2;                       \r\n          if (selectedSurface==\"protractorT2\") return this.textures.protractorT2;                       \r\n        } \r\n\r\n    public compileandconnectshaders(gl: WebGL2RenderingContext, program: WebGLProgram, vs: string, fs: string, reportdiv: string)\r\n    {\r\n        var serr:string=\"\";\r\n\r\n            var vsshader = gl.createShader( gl.VERTEX_SHADER);\r\n            if (vsshader!=null)\r\n            {\r\n                gl.shaderSource(vsshader, vs);\r\n                gl.compileShader(vsshader);\r\n            } else serr+= \"vertex shader create issue\";\r\n            var fshader = gl.createShader( gl.FRAGMENT_SHADER);\r\n            if (fshader!=null)\r\n            {\r\n                gl.shaderSource(fshader, fs);\r\n                gl.compileShader(fshader);\r\n                \r\n            } else serr+= \"fragment shader create issue\";\r\n            if(serr.length>0) document.getElementById(reportdiv)!.innerHTML = serr;\r\n            else\r\n                {          \r\n                    serr=\"\";                             \r\n                    gl.attachShader(program, vsshader!);\r\n                    gl.deleteShader(vsshader!);\r\n                    gl.attachShader(program, fshader!);\r\n                    gl.deleteShader(fshader!);\r\n                    gl.linkProgram(program);\r\n                    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n                        serr+=(`Link failed: ${gl.getProgramInfoLog(program)}`);\r\n                        var logvertexshader = gl.getShaderInfoLog(vsshader!);\r\n                        if (logvertexshader) serr+=(`${logvertexshader}`);\r\n                        var logfragmentshader = gl.getShaderInfoLog(fshader!);\r\n                        if (logfragmentshader) serr+=(`${logfragmentshader}`);\r\n                        var re = /(\\r\\n|\\r|\\n)/gi; \r\n                        var str = serr.replace(re, \"<br>\"); \r\n                        document.getElementById(reportdiv)!.innerHTML =\"shader issue..\"+\"<br>\"+str;\r\n                    } else\r\n                    {                          \r\n                        return true;\r\n                    }\r\n                    }\r\n    }\r\n\r\n    //--- used in skybox and skyboxcube to initialize a cubemap texture from 6 images -----------------------------------------\r\n\r\n    public vsEnvironmentMap = `#version 300 es\r\n        in vec4 a_position;\r\n        out vec4 v_position;\r\n        void main() {\r\n        v_position = a_position;\r\n        gl_Position = vec4(a_position.xy, 1, 1);\r\n        }\r\n        `;\r\n\r\n    public fsEnvironmentMap = `#version 300 es\r\n        precision highp float;\r\n\r\n        uniform samplerCube u_skybox;\r\n        uniform mat4 u_viewDirectionProjectionInverse;\r\n\r\n        in vec4 v_position;\r\n\r\n        // we need to declare an output for the fragment shader\r\n        out vec4 outColor;\r\n\r\n        void main() {\r\n        vec4 t = u_viewDirectionProjectionInverse * v_position;\r\n        // outColor = vec4(0,0,0,0);\r\n        outColor = texture(u_skybox, normalize(t.xyz / t.w));\r\n        }\r\n        `;\r\n\r\n        \r\n      \r\n    protected createEnvironmentMapGeo(gl: WebGL2RenderingContext)\r\n    {\r\n        // Create a vertex array object (attribute state) and make it the one we're currently working with\r\n        this.vaoEnvironment = gl.createVertexArray()!;\r\n        gl.bindVertexArray(this.vaoEnvironment);\r\n       \r\n        this.positionAttributeLocation = gl.getAttribLocation(this.twglprograminfo![0].program, \"a_position\");\r\n      \r\n        // Create a buffer for positions\r\n        this.positionBuffer = gl.createBuffer()!;\r\n        // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\r\n        // Put the positions in the buffer\r\n        var positions = new Float32Array(\r\n            [\r\n               1, -1,   -1,-1, -1, 1, // triangle SW-SE-NW\r\n               1, -1,   -1, 1, 1, 1, // triangle NW-SE-NE\r\n            ]);\r\n        \r\n        gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n     \r\n\r\n       this.restorePosAttributeContext(gl, this.positionBuffer, this.positionAttributeLocation, 2);\r\n   \r\n    }\r\n\r\n    protected createEnvironmentMapTexture(gl: WebGL2RenderingContext, scene: number, textureReadyCallback: (a:any, t:WebGLTexture)=>void | undefined ): WebGLTexture|null\r\n    {        \r\n        var mytexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, mytexture);\r\n        var pos_x_name=\"\",pos_y_name=\"\",pos_z_name = \"\";\r\n        var neg_x_name=\"\",neg_y_name=\"\",neg_z_name = \"\";\r\n        var p=scene;\r\n        switch (p) {\r\n            case 0: {\r\n                pos_x_name= require(\"./../images/chmuseum/pos-x.jpg\");\r\n                pos_y_name= require(\"./../images/chmuseum/pos-y.jpg\");\r\n                pos_z_name= require(\"./../images/chmuseum/pos-z.jpg\");\r\n                neg_x_name= require(\"./../images/chmuseum/neg-x.jpg\");\r\n                neg_y_name= require(\"./../images/chmuseum/neg-y.jpg\");\r\n                neg_z_name= require(\"./../images/chmuseum/neg-z.jpg\");\r\n                break;\r\n            }\r\n            case 1: {\r\n                pos_x_name= require(\"./../images/yokohama/posx.jpg\");\r\n                pos_y_name= require(\"./../images/yokohama/posy.jpg\");\r\n                pos_z_name= require(\"./../images/yokohama/posz.jpg\");\r\n                neg_x_name= require(\"./../images/yokohama/negx.jpg\");\r\n                neg_y_name= require(\"./../images/yokohama/negy.jpg\");\r\n                neg_z_name= require(\"./../images/yokohama/negz.jpg\");\r\n                break;\r\n            }\r\n            case 2: {\r\n                pos_x_name= require(\"./../images/gamlastan/posx.jpg\");\r\n                pos_y_name= require(\"./../images/gamlastan/posy.jpg\");\r\n                pos_z_name= require(\"./../images/gamlastan/posz.jpg\");\r\n                neg_x_name= require(\"./../images/gamlastan/negx.jpg\");\r\n                neg_y_name= require(\"./../images/gamlastan/negy.jpg\");\r\n                neg_z_name= require(\"./../images/gamlastan/negz.jpg\");\r\n                break;\r\n            }\r\n        }\r\n        const faceInfos = [\r\n            {target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,url: pos_x_name,},\r\n            {target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,url: neg_x_name,},\r\n            {target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,url: pos_y_name,},\r\n            {target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,url: neg_y_name,},\r\n            {target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,url: pos_z_name,},\r\n            {target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,url: neg_z_name,},\r\n        ];\r\n        var nImage = 0;\r\n        faceInfos.forEach((faceInfo) => {\r\n            const {target, url} = faceInfo;\r\n        \r\n            // Upload the canvas to the cubemap face.\r\n            const level = 0;\r\n            const internalFormat = gl.RGBA;\r\n            const width = 256;\r\n            const height = 256;\r\n            const format = gl.RGBA;\r\n            const type = gl.UNSIGNED_BYTE;\r\n        \r\n            // setup each face so it's immediately renderable\r\n            gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\r\n        \r\n            // Asynchronously load an image\r\n            const image = new Image();\r\n            if ((new URL(url, window.location.href)).origin !== window.location.origin) {\r\n                image.crossOrigin = \"\";\r\n                }\r\n         \r\n           // this.requestCORSIfNotSameOrigin(image, url)\r\n            image.src = url;\r\n            image.addEventListener('load', () => {\r\n                        //gl.useProgram(this.program![0]);\r\n                        // Now that the image has loaded make copy it to the texture.\r\n                        gl.bindTexture(gl.TEXTURE_CUBE_MAP, mytexture);\r\n                        gl.texImage2D(target, level, internalFormat, format, type, image);\r\n                        // lx note: this is too early! console yields a warning..  \r\n                        // gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n                        console.log(\"nImage=\"+nImage+\"/\"+faceInfos.length+\" loaded: \"+image.src);\r\n                        // instead.. initialize mipmap when all face textures are read\r\n                        if (++nImage==faceInfos.length)\r\n                        {\r\n                            gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n                            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);      \r\n                            if (textureReadyCallback != undefined)    \r\n                            {\r\n                                textureReadyCallback(0, mytexture!);\r\n                            } \r\n                        }\r\n                    });\r\n        });\r\n        this.texture= mytexture!;\r\n        return mytexture;\r\n    }\r\n\r\n    /*\r\n    private requestCORSIfNotSameOrigin(img: HTMLImageElement, url: string) {\r\n        if ((new URL(url, window.location.href)).origin !== window.location.origin) {\r\n        img.crossOrigin = \"\";\r\n        }\r\n    }\r\n    */\r\n/*\r\n    public computeprojectionmatrices(gl: WebGL2RenderingContext, fov:number): m4.Mat4\r\n    // env map\r\n    {\r\n        // Build a projection matrix.\r\n        var aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n        this.projectionMatrix = m4.perspective(fov, aspect, 1, 2000);\r\n      \r\n        // Build a view matrix.\r\n        var up = [0, 1, 0];\r\n        var cameraMatrix = m4.lookAt(this.cameraPosition, this.cameraTarget, up);\r\n        this.viewMatrix = m4.inverse(cameraMatrix);\r\n       \r\n        // viewDirectionMatrix is viewMatrix without translation (direction only)\r\n        this.viewDirectionMatrix = m4.copy(this.viewMatrix);\r\n        this.viewDirectionMatrix[12] = 0;\r\n        this.viewDirectionMatrix[13] = 0;\r\n        this.viewDirectionMatrix[14] = 0;\r\n        //\r\n        this.viewDirectionProjectionMatrix =  m4.multiply( this.projectionMatrix!, this.viewDirectionMatrix!);\r\n\r\n        return this.viewDirectionProjectionMatrix;\r\n        //\r\n    }\r\n*/\r\n    public computeprojectionmatrices(gl: WebGL2RenderingContext, fov:number): m4.Mat4\r\n    // env map\r\n    {\r\n        // Build a projection matrix.\r\n        var aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n        var projectionMatrix = m4.perspective(fov, aspect, 1, 2000);\r\n      \r\n        // Build a view matrix.\r\n        var up = [0, 1, 0];\r\n        var cameraMatrix = m4.lookAt(this.cameraPosition, this.cameraTarget, up);\r\n        var viewMatrix = m4.inverse(cameraMatrix);\r\n       \r\n        // viewDirectionMatrix is viewMatrix without translation (direction only)\r\n        var viewDirectionMatrix = m4.copy(viewMatrix);\r\n        viewDirectionMatrix[12] = 0;\r\n        viewDirectionMatrix[13] = 0;\r\n        viewDirectionMatrix[14] = 0;\r\n        //\r\n        var viewDirectionProjectionMatrix =  m4.multiply( projectionMatrix!, viewDirectionMatrix!);\r\n\r\n        return viewDirectionProjectionMatrix;\r\n        //\r\n    }\r\n\r\n    public restorePosAttributeContext(gl: WebGL2RenderingContext, posBuffer: WebGLBuffer, posAttributeLocation: number, size: number)\r\n    {\r\n      // ==> 2023-03-01 restore this part to solve the clear error\r\n        // 1. Bind the buffer\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\n        // 2. Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        var size = size;          // 2 components per iteration\r\n        var type = gl.FLOAT;   // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        var offset = 0;        // start at the beginning of the buffer\r\n        gl.vertexAttribPointer(posAttributeLocation, size, type, normalize, stride, offset);\r\n        // 3. Enable this\r\n        gl.enableVertexAttribArray(posAttributeLocation);\r\n        // <==\r\n    }\r\n \r\n    public renderenvironmentmap(gl: WebGL2RenderingContext, fov:number,  uniformlocs: {invproj: WebGLUniformLocation ,loc:WebGLUniformLocation }, texture: WebGLTexture)\r\n    {         \r\n        gl.bindVertexArray(this.vaoEnvironment!);\r\n        this.restorePosAttributeContext(gl, this.positionBuffer!, this.positionAttributeLocation!, 2); \r\n  \r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP,texture);\r\n        var viewDirectionProjectionMatrix = this.computeprojectionmatrices(gl,   fov);\r\n        var viewDirectionProjectionInverseMatrix = m4.inverse(viewDirectionProjectionMatrix!);\r\n        gl.uniformMatrix4fv(uniformlocs.invproj, false, viewDirectionProjectionInverseMatrix);\r\n        gl.uniform1i(uniformlocs.loc, 0);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 1 * 6);\r\n        //gl.bindVertexArray(null);\r\n    }\r\n    \r\n    protected createEnvironmentMapGeoTwgl(gl: WebGL2RenderingContext)\r\n    {\r\n      this.environmentBufferInfo = twgl.primitives.createXYQuadBufferInfo(gl,300); \r\n      this.vaoEnvironment = twgl.createVAOFromBufferInfo(gl,this.twglprograminfo![0], this.environmentBufferInfo)!;\r\n      gl.bindVertexArray(this.vaoEnvironment);\r\n    }\r\n \r\n    public renderenvironmentmapTwgl(gl: WebGL2RenderingContext, fov:number, texture: WebGLTexture)\r\n    {\r\n        \r\n        var viewDirectionProjectionInverseMatrix = twgl.m4.inverse(this.computeprojectionmatrices(gl, fov));\r\n      \r\n        // Rotate the cube around the x axis\r\n     //   if (this.skyboxCubeParameters.movecube)\r\n     //     this.worldMatrix = twgl.m4.axisRotation( [1,0,0] as twgl.v3.Vec3 , mstime * this.skyboxCubeParameters.angVelocityCube);\r\n     //   else \r\n     //     this.worldMatrix = twgl.m4.translation([0,0,0]); // twgl.m4.identity();\r\n\r\n        // draw the environment\r\n   //     gl.useProgram(this.twglprograminfo![0].program);\r\n        \r\n        gl.bindVertexArray(this.vaoEnvironment!);\r\n      //  this.restoreContext(gl,this.positionBuffer!,this.positionAttributeLocation!, 2);\r\n        twgl.setUniforms( this.twglprograminfo![0], { \r\n          u_viewDirectionProjectionInverse: viewDirectionProjectionInverseMatrix,\r\n          u_skybox: texture,\r\n        });\r\n        twgl.drawBufferInfo(gl, this.environmentBufferInfo!);  \r\n        gl.flush();\r\n    }\r\n\r\n}\r\n","//import * as twgl from \"./../node_modules/twgl.js\";    // Greg's work\r\n//import { m4 } from \"./../node_modules/twgl.js\";\r\n\r\nimport * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as mtls from \"./baseapp/mouselistener\";     // connect events for buttons and wheel\r\nimport * as camhandler from \"./baseapp/camhandler\"   // camera projection\r\nimport * as stridedmesh0 from \"./stridedmesh0\" // mesh and bones (data)\r\n\r\nimport * as boneanimation from \"./boneanimation\"\r\nimport * as fish from \"./fish\"\r\nimport * as baseapp from \"./baseapp/baseapp\";\r\n\r\nimport  * as datgui from \"dat.gui\";\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\ntwgl.setAttributePrefix(\"a_\");\r\n\r\ntype Tuniforms = {\r\n    world: m4.Mat4,\r\n    projection: m4.Mat4,\r\n    viewprojection: m4.Mat4;\r\n    view: m4.Mat4,\r\n    surfaceTexture: WebGLTexture,\r\n    boneMatrixTexture: WebGLTexture,\r\n    color: number[]\r\n  };\r\n\r\nexport class Skeleton extends baseapp.BaseApp\r\n{\r\n  skeletonParameters = {\r\n    move: false,\r\n    movetail: true,\r\n    speed: 0.4,\r\n    texture: 'geotriangle2',\r\n    color0: \"#00A000\",\r\n  };          \r\n   \r\n    cam: camhandler.Camera|undefined;\r\n    uniforms: Tuniforms | undefined;\r\n    bufferInfo: twgl.BufferInfo | null = null;\r\n    skinVAO: WebGLVertexArrayObject | null = null;\r\n    phase0: number=0.0; //2.0; // 143 degrees \r\n    afish: fish.FishHTranslated | undefined;\r\n   \r\n\r\n    static instance: Skeleton;\r\n\r\n    constructor( cgl: WebGL2RenderingContext, capp: mtls.MouseListener | undefined , dictpar:Map<string,string>, cdiv:string)\r\n    { \r\n      super(cgl, capp, dictpar, cdiv);\r\n      Skeleton.instance = this;\r\n      this.twglprograminfo = new Array(2);\r\n      this.twglprograminfo![1] = twgl.createProgramInfo(cgl, [boneanimation.vsSkeleton, boneanimation.fsSkeleton]);\r\n  \r\n    }\r\n\r\n    main(gl: WebGL2RenderingContext,  dictpar:Map<string,string>)\r\n    {\r\n      var time0: number=0;\r\n    \r\n     // super.maininfo(gl, dictpar,boneanimation.vsSkeleton, boneanimation.fsSkeleton );\r\n   \r\n      var spar:string|undefined;\r\n      if ((spar=dictpar.get(\"phase2\"))!=undefined) this.phase0= +spar!;\r\n    \r\n      this.afish = new fish.FishHTranslated (1.0,0.2,0.3,  0.0, 1.0, 0.015,0.5,2.5, \"zelenskyy\");\r\n      this.afish.forwardspeed=(this.skeletonParameters.move)?0.06:0.0;\r\n      this.afish.prepareSurfaceTextures(gl, \"zelenskyy\");\r\n      this.afish.mesh = this.afish.prepareMesh(gl, dictpar, 1.0);   \r\n      this.afish.numBones = (this.afish.mesh!.type==gl.TRIANGLE_STRIP)? (this.afish.mesh!.nsegments / this.afish.mesh!.bonediv) : this.afish.mesh!.nsegments; \r\n      this.afish.createBoneTexture(gl, time0, dictpar);\r\n      this.afish.createSurfaceTexture(gl);\r\n\r\n      this.uniforms= this.afish.createUniforms(gl, dictpar); // this.phase0);\r\n      this.bufferInfo = twgl.createBufferInfoFromArrays(gl, this.afish.mesh!.arrays);\r\n\r\n      this.skinVAO = twgl.createVAOFromBufferInfo(gl, this.twglprograminfo![1], this.bufferInfo!);\r\n      this.cam=camhandler.Camera.createCamera(gl,dictpar, camhandler.Camera.CamZUp, 50.0, this.app!);\r\n      this.cam.zoominVelocity = 0.5;\r\n      requestAnimationFrame(() => this.render(time0));   \r\n    }\r\n\r\n    //------------------------------------------------------------------------------------------------------------\r\n\r\n    gui: datgui.GUI|null=null;\r\n\r\n    onChangeColorValue(value? : any)\r\n    {\r\n      //console.log(\"we are in color=[\"+value+\"]\");\r\n      var thisinstance = Skeleton.instance!;\r\n      if (thisinstance.gl!=null)\r\n      {\r\n        var cc = (thisinstance.gl!.canvas as HTMLCanvasElement).parentNode;\r\n        var ccd= (cc as HTMLDivElement);\r\n        ccd.style.backgroundColor =  value;\r\n      }\r\n    }\r\n\r\n    public initGUI(parameters: {move:boolean, movetail:boolean,speed:number, texture:string, color0:string})\r\n    {\r\n      this.skeletonParameters = parameters;\r\n\r\n      var cc = (this.gl!.canvas as HTMLCanvasElement).parentNode;\r\n      var ccd= (cc as HTMLDivElement);\r\n      ccd.style.backgroundColor =  this.skeletonParameters.color0;\r\n  \r\n      // park the dat.gui box in the linksdiv below the links, in closed state\r\n      var gui = new datgui.GUI( { autoPlace: false } );\r\n      gui.domElement.id = 'gui_drawimagespace';\r\n      document.getElementById(\"linksdiv\")!.append( gui.domElement);\r\n      gui.close();\r\n\r\n      // connect viewmodel\r\n      gui.remember(parameters); //this.fishAnimationParameters);\r\n    \r\n      // Checkbox forward move animation on/off\r\n      gui.add(parameters, 'move'); //this.fishAnimationParameters, 'move');\r\n      // Checkbox tail animation on/off\r\n      gui.add(parameters, 'movetail');\r\n    \r\n      // Slider for animation speed\r\n      gui.add(parameters, 'speed').min(0.02).max(0.1).step(0.002);\r\n  \r\n      // Color dialog sets background color\r\n      var cel3 = gui.addColor(parameters, 'color0');\r\n      cel3.onChange( this.onChangeColorValue);\r\n        \r\n      gui.updateDisplay();\r\n      return gui;\r\n    }\r\n     \r\n\r\n    //------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n    render(time: number) \r\n    {       \r\n        var gl = this.gl!;\r\n        gl.useProgram(this.twglprograminfo![1].program);\r\n        twgl.resizeCanvasToDisplaySize(gl.canvas  as HTMLCanvasElement);\r\n        gl.viewport(0, 0,  gl.canvas.width, gl.canvas.height);        \r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.enable(gl.CULL_FACE);\r\n      \r\n        var cam: camhandler.Camera = this.cam!;\r\n        cam.CamHandlingZUp(gl, this.app!, 1.0, -1.0);\r\n        var uniforms = this.uniforms!;\r\n        uniforms.viewprojection = cam.viewProjection;   \r\n  \r\n        gl.bindVertexArray(this.skinVAO);\r\n    \r\n        this.afish!.forwardspeed=(this.skeletonParameters.move)?(this.skeletonParameters.speed):0.0;\r\n        this.afish!.computeBone(time, this.skeletonParameters.move, this.skeletonParameters.movetail);\r\n        this.afish!.prepareBoneTexture(gl,this.afish!.bindPoseInv2); \r\n       \r\n        uniforms.world = m4.translate(m4.identity(), [20.0, -20.0, 0.0]);  // draw a fish\r\n        twgl.setUniforms(this.twglprograminfo![1], uniforms)\r\n        twgl.drawBufferInfo(gl, this.bufferInfo!, this.afish!.mesh!.type);     \r\n       \r\n        uniforms.world = m4.translate(m4.identity(), [0.0, 0.0, 0.0]);     // draw a fish\r\n        twgl.setUniforms(this.twglprograminfo![1], uniforms)\r\n        twgl.drawBufferInfo(gl, this.bufferInfo!, this.afish!.mesh!.type);\r\n  \r\n        this.afish!.computeBone(time, this.skeletonParameters.move, this.skeletonParameters.movetail);\r\n        this.afish!.prepareBoneTexture(gl,this.afish!.bindPoseInv2);\r\n\r\n        uniforms.world = m4.translate(m4.identity(), [50.0, -20.0, 10.0]); // draw a fish    \r\n        twgl.setUniforms(this.twglprograminfo![1], uniforms)\r\n        twgl.drawBufferInfo(gl, this.bufferInfo!, this.afish!.mesh!.type);     \r\n\r\n        uniforms.world = m4.translate(m4.identity(), [-10.0, 5.0, -10.0]); // draw a fish\r\n        twgl.setUniforms(this.twglprograminfo![1], uniforms)\r\n        twgl.drawBufferInfo(gl, this.bufferInfo!, this.afish!.mesh!.type);\r\n       \r\n        requestAnimationFrame(() => this.render(++time));       \r\n    }   \r\n}\r\n","\r\nexport class AnimationClock\r\n{\r\n  frame:number=0;\r\n\r\n  private vnow: Date = new Date();\r\n\r\n  private tdt: number=0;\r\n \r\n  getTime(cframe: number): number\r\n  {\r\n    const now = new Date();\r\n    const ctime = now.getTime();\r\n    const dt = ctime-this.vnow.getTime();\r\n    if ((this.frame % 100)==0) \r\n    { \r\n      var fps = 1000.0/((this.tdt)/100.0);\r\n      var s: string = \"cframe=\"+cframe+\" tdt=\"+(this.tdt/100.0).toPrecision(4)+\" ms, fps: \"+ fps.toPrecision(3);\r\n     // var s: string = \"cframe=\"+cframe+\" tdt=\"+this.tdt+\" ms, fps: \"+(1000.0/(this.tdt/100.0)).toPrecision(3).toString();\r\n      console.log(s); \r\n      (document.getElementById('app') as HTMLDivElement).innerHTML = s;\r\n      this.tdt=0; \r\n    }\r\n    this.tdt+=dt; \r\n    this.vnow = now; \r\n    this.frame++;\r\n    return  ctime;\r\n  }\r\n\r\n}\r\n","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as mtls from \"./baseapp/mouselistener\";     // connect events for buttons and wheel\r\nimport * as camhandler from \"./baseapp/camhandler\"   // camera projection\r\n\r\nimport * as boneanimation from \"./boneanimation\"\r\nimport * as fish from \"./fish\"\r\n\r\nimport  * as datgui from \"dat.gui\";\r\nimport * as baseapp from \"./baseapp/baseapp\";\r\nimport * as animationclock from \"./baseapp/animationclock\";\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class FishAnimation extends baseapp.BaseApp\r\n{          \r\n    fishAnimationParameters = {\r\n      b: this.baseappParameters,\r\n      movetail: true,\r\n      texture: 'geotriangle2',\r\n      sling: 117,\r\n    };          \r\n\r\n    fish: fish.Fish[] = [ // SIZE R1 R2 FWSP  PH0  DELTAP  AR   AMPL  TEX          JOINT JOINTAX\r\n    new fish.FishHTranslated(1.0,2.0,0.3, 0.03, 0.8, 0.0016, 0.5, 2.0, \"zelenskyy\"),\r\n    new fish.FishOneJoint   (0.06, 40.0,24.0,0.03, 0.0, 0.0055, -9999.0, 2.1, \"gradient\", 0.6, [0.0,1.0,0.0]),\r\n    new fish.FishHRotated   (0.5,16.0,22.0, 0.03, 0.1, 0.0015, 1.0, 0.5, \"gradient\"),\r\n    new fish.FishV(          0.2,0.2,0.3, 0.03, 1.0,  0.0150, 0.5, 5.00, \"flagofukraine\"),\r\n    new fish.FishHTranslated(0.3,0.2,0.3, 0.03, 0.8,  0.0085, 0.5, 2.50, \"zelenskyy\")];  \r\n  \r\n    fishjointcounts: number[] = [1, 28, 1, 1, 1];  \r\n\r\n    fishpositions = [\r\n    [[0.0, -20.0, 0.0]], \r\n    [[-15,15,0]],\r\n    [[20.0, -5.0, -15.0]],\r\n    [[-10.0, -5.0, 0.0]],\r\n    [[0.0, 0.0, 1.0]]];\r\n  \r\n    cam: camhandler.Camera|undefined;\r\n    \r\n    clock: animationclock.AnimationClock = new animationclock.AnimationClock();\r\n\r\n    static instance: FishAnimation;\r\n\r\n    constructor( cgl: WebGL2RenderingContext, capp: mtls.MouseListener | undefined , dictpar:Map<string,string>,cdiv: string)\r\n    {       \r\n      super(cgl, capp, dictpar, cdiv);\r\n      FishAnimation.instance=this;\r\n      this.twglprograminfo = new Array(2);\r\n      this.twglprograminfo![1] = twgl.createProgramInfo(cgl, [boneanimation.vsSkeleton, boneanimation.fsSkeleton]);\r\n    }\r\n\r\n    main(gl:WebGL2RenderingContext, dictpar:Map<string,string>)\r\n    {\r\n      twgl.setAttributePrefix(\"a_\");\r\n      var gl = this.gl!;\r\n      var nFish: number = 0;\r\n      var time0: number = 0;\r\n      this.fish.forEach((afish)=>{\r\n        afish.prepareSurfaceTextures(gl,afish.surfacetexturefile);\r\n        afish.mesh = afish.prepareMesh(gl, dictpar, afish.size);\r\n        afish.setNumBones(gl);\r\n        afish.createBoneTexture(gl, time0, dictpar);\r\n        afish.createSurfaceTexture(gl);\r\n        afish.uniforms= afish.createUniforms(gl, dictpar);\r\n        afish.bufferInfo = twgl.createBufferInfoFromArrays(gl, afish.mesh!.arrays);\r\n        afish.skinVAO = twgl.createVAOFromBufferInfo(gl, this.twglprograminfo![1], afish.bufferInfo);\r\n        nFish++;\r\n      });   \r\n      this.cam=camhandler.Camera.createCamera(gl,dictpar,camhandler.Camera.CamZUp, 30.0, this.app!);\r\n      this.cam.zoominVelocity = 0.5;\r\n      requestAnimationFrame(() => this.render(time0));    \r\n    }\r\n\r\n    onChangeColorValue(value? : any)\r\n    {\r\n      //console.log(\"we are in color=[\"+value+\"]\");\r\n      var thisinstance = FishAnimation.instance!;\r\n      if (thisinstance.gl!=null)\r\n      {\r\n        var cc = (thisinstance.gl!.canvas  as HTMLCanvasElement).parentNode;\r\n        var ccd= (cc as HTMLDivElement);\r\n        ccd.style.backgroundColor =  value;\r\n      }\r\n    }\r\n\r\n    public initGUI(parameters: { b: {color0: string, move: boolean,  speed: number}, movetail:boolean, texture:string,  sling:number}): datgui.GUI      \r\n    {\r\n      this.fishAnimationParameters= parameters;\r\n    \r\n      // The base GUI provides checkboxes for move and move of objects,\r\n      // a color dialog to choose background, Slider for animation speed\r\n      var gui = super.createGUI(this.fishAnimationParameters.b, this.fishAnimationParameters);\r\n      \r\n      // add a slider for sling\r\n      gui.add(this.fishAnimationParameters, 'sling').min(9).max(120).step(1);\r\n   \r\n      gui.updateDisplay();\r\n      return gui;\r\n    }\r\n  \r\n    render(time: number) \r\n    {\r\n        var gl = this.gl!;\r\n        gl.useProgram(this.twglprograminfo![1].program);\r\n        twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n        gl.viewport(0, 0,  gl.canvas.width, gl.canvas.height);        \r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.enable(gl.CULL_FACE);\r\n    \r\n        var cam: camhandler.Camera = this.cam!;\r\n        cam.CamHandlingZUp(gl, this.app!, 1.0, -1.0);     \r\n        for (var fishtype=0; fishtype<this.fish.length; fishtype++)\r\n          this.fish[fishtype].uniforms!.viewprojection = cam.viewProjection; \r\n\r\n        for (var fishtype=0; fishtype<this.fish.length; fishtype++)\r\n        {                   \r\n          gl.bindVertexArray(this.fish[fishtype].skinVAO);\r\n          this.fish[fishtype].forwardspeed = this.fishAnimationParameters.b.move?this.fishAnimationParameters.b.speed:0.0;\r\n            \r\n          if (this.fishjointcounts[fishtype]==1) // single joint fish\r\n          {\r\n            this.fish[fishtype].computeBone(time, this.fishAnimationParameters.b.move, this.fishAnimationParameters.movetail);\r\n            this.fish[fishtype].prepareBoneTexture(gl,this.fish[fishtype].bindPoseInv2); // freeform bones need to keep their initial transformations\r\n            this.fish[fishtype].uniforms!.world = m4.translation(this.fishpositions[fishtype][0]);      // draw a fish at some position\r\n            twgl.setUniforms(this.twglprograminfo![1], this.fish[fishtype].uniforms)\r\n            twgl.drawBufferInfo(gl, this.fish[fishtype].bufferInfo!, this.fish[fishtype].mesh.type);              \r\n          }\r\n          else  // multiple joint segments\r\n          {\r\n            var localmatrix = m4.translation(this.fishpositions[fishtype][0]); // start transforming origin of joint #0 to fish position\r\n            var ampl0 = this.fish[fishtype].ampl;\r\n            var sling = this.fishAnimationParameters.sling;\r\n            for (var i=0; i<this.fishjointcounts[fishtype]; i++)  // there are fishjointcounts joints for this fish type\r\n            {\r\n              var timeoffs = i*sling;\r\n              var nx = i/this.fishjointcounts[fishtype];\r\n              this.fish[fishtype].ampl = ampl0 * nx;\r\n              this.fish[fishtype].computeBone(time-timeoffs, this.fishAnimationParameters.b.move, this.fishAnimationParameters.movetail);\r\n              this.fish[fishtype].prepareBoneTexture(gl, null); // for a segment, bindPoseInv2 need not be set (null)\r\n              this.fish[fishtype].uniforms!.world = localmatrix; // transformation for joint part depends on previous joint\r\n              twgl.setUniforms(this.twglprograminfo![1], this.fish[fishtype].uniforms)\r\n              twgl.drawBufferInfo(gl, this.fish[fishtype].bufferInfo!, this.fish[fishtype].mesh.type);     \r\n              localmatrix = m4.multiply(localmatrix, this.fish[fishtype].EndOfBoneTrans);  // stack the end-transformation of this segment into matrix cm         \r\n            }\r\n            this.fish[fishtype].ampl = ampl0;\r\n          }\r\n        }         \r\n        requestAnimationFrame(() => this.render(this.clock.getTime(this.clock.frame)));   \r\n    }   \r\n}","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n","import chroma from \"chroma-js\";\r\n\r\n//import * as twgl from \"./../node_modules/twgl.js\";    // Greg's work\r\n//import { m4 } from \"./../node_modules/twgl.js\";\r\n\r\nimport * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as mtls from \"./baseapp/mouselistener\";\r\nimport * as camhandler from \"./baseapp/camhandler\" // camera projection\r\n\r\nimport  * as datgui from \"dat.gui\";\r\n   \r\n\r\ntype Tuniforms = { \r\n  u_diffuseMult?: [number,Number, number, number], \r\n  u_texture?:WebGLTexture, \r\n  u_diffuse?: WebGLTexture,\r\n  u_viewInverse: twgl.m4.Mat4, \r\n  u_world: twgl.m4.Mat4, \r\n  u_worldInverseTranspose: twgl.m4.Mat4, \r\n  u_worldViewProjection: twgl.m4.Mat4 \r\n};\r\n\r\ntype Tobject = {\r\n  translation: number[], \r\n  ySpeed:number,\r\n  zSpeed:number, \r\n  uniforms:Tuniforms \r\n};\r\n\r\nexport class Tdrawitem \r\n{\r\n \r\n  \r\n  do: twgl.DrawObject;\r\n  obj: Tobject;\r\n\r\n  constructor(cdo:twgl.DrawObject, cobj: Tobject)\r\n  {\r\n    this.do = cdo;\r\n    this.obj = cobj;\r\n  }\r\n\r\n  public static getTwglDrawObjects(a: Tdrawitem[])\r\n  {\r\n    var ad: twgl.DrawObject[] = [];\r\n    a.forEach((el)=> ad.push(el.do));\r\n    return ad;\r\n  }\r\n}\r\n\r\nexport class ManyTextures\r\n{\r\n    manyTexturesParameters = {\r\n      move: false,\r\n      speed: 0.4,\r\n      texture: 'geotriangle2',\r\n      color0: \"#00A000\",\r\n    };\r\n    \r\n    static instance:ManyTextures|undefined;\r\n\r\n    // Publics\r\n    baseHue = this.rand(300);            // color of objects\r\n    numObjects = 200;                    // object count\r\n    spreadRadius = this.numObjects/10.0; // random placement range for objects\r\n    dtime = 0.02;                        // animation timer interval\r\n\r\n    // Set in constructor\r\n    private gl: WebGL2RenderingContext;           // connect to WebGL2 and Html5Canvas\r\n    private app: mtls.MouseListener | undefined;  // connect mouse and keyboard to camera and light\r\n    private cam: camhandler.Camera | undefined;               // create a camera in the constructor of this object\r\n\r\n    // Local\r\n    private drawItems: Tdrawitem[] = [];                           // resource\r\n    private textures: {[key: string]: WebGLTexture} | null = null; // resource\r\n\r\n    private ctx2D: CanvasRenderingContext2D | null = null;  // a 2D canvas to draw things on (used for dynamic circle texture)\r\n \r\n    // Shaders\r\n    private one_point_vs = `    \r\n    uniform mat4 u_worldViewProjection;\r\n\r\n    attribute vec4 a_position;\r\n    attribute vec2 a_texcoord;\r\n\r\n    varying vec4 v_position;\r\n    varying vec2 v_texCoord;\r\n\r\n    void main() {\r\n      v_texCoord = a_texcoord;\r\n      gl_Position = u_worldViewProjection * a_position;\r\n    }\r\n    `;\r\n\r\n    private one_point_fs = `\r\n    precision mediump float;\r\n\r\n    varying vec4 v_position;\r\n    varying vec2 v_texCoord;\r\n\r\n    uniform vec4 u_diffuseMult;\r\n    uniform sampler2D u_diffuse;\r\n\r\n    void main() {\r\n      vec4 diffuseColor = texture2D(u_diffuse, v_texCoord) * u_diffuseMult;\r\n      if (diffuseColor.a < 0.1) {\r\n        discard;\r\n      }\r\n      gl_FragColor = diffuseColor;\r\n    }\r\n    `;\r\n\r\n    private env_map_vs = `\r\n    uniform mat4 u_viewInverse;\r\n    uniform mat4 u_world;\r\n    uniform mat4 u_worldViewProjection;\r\n    uniform mat4 u_worldInverseTranspose;\r\n\r\n    attribute vec4 a_position;\r\n    attribute vec3 a_normal;\r\n\r\n    varying vec3 v_normal;\r\n    varying vec3 v_surfaceToView;\r\n\r\n    void main() {\r\n      v_normal = (u_worldInverseTranspose * vec4(a_normal, 0)).xyz;\r\n      v_surfaceToView = (u_viewInverse[3] - (u_world * a_position)).xyz;\r\n      gl_Position = u_worldViewProjection * a_position;\r\n    }\r\n    `;\r\n\r\n    private env_map_fs = `\r\n    precision mediump float;\r\n\r\n    uniform samplerCube u_texture;\r\n\r\n    varying vec3 v_surfaceToView;\r\n    varying vec3 v_normal;\r\n\r\n    void main() {\r\n      vec3 normal = normalize(v_normal);\r\n      vec3 surfaceToView = normalize(v_surfaceToView);\r\n      vec4 color = textureCube(u_texture, -reflect(surfaceToView, normal));\r\n      gl_FragColor = color;\r\n    }\r\n    `;\r\n\r\n    \r\n    constructor( cgl: WebGL2RenderingContext, capp: mtls.MouseListener | undefined , dictpar:Map<string,string>)\r\n    { \r\n      ManyTextures.instance = this;\r\n      this.app = capp;\r\n      this.gl = cgl;      \r\n    }\r\n\r\n    main(gl: WebGL2RenderingContext, dictpar:Map<string,string>)\r\n    {\r\n      this.Prepare(dictpar);\r\n      twgl.resizeCanvasToDisplaySize((this.gl.canvas as HTMLCanvasElement));   \r\n      var szobj=25.0;\r\n      this.cam=camhandler.Camera.createCamera(this.gl,dictpar, camhandler.Camera.CamYUp, szobj, this.app!);\r\n      this.cam.zoominVelocity = szobj/40.0;\r\n      requestAnimationFrame(() => this.render(0));\r\n      console.log(\"Animation requested.\");\r\n    }\r\n\r\n\r\n    gui: datgui.GUI|null=null;\r\n\r\n    onChangeTextureCombo(value? : any)\r\n    {\r\n      var thisinstance = ManyTextures.instance!;\r\n      //console.log(\"we are in texture=[\"+value+\"] obj.speed=\"+ thisinstance.imagespaceParameters.speed);\r\n    //  thisinstance.currentTexture = value;\r\n    //  console.log(\"set currentTexture to [\"+value+\"]\");\r\n    //  if (value==\"clover\") thisinstance.ny=8.0; else \r\n    //  if (value==\"geotriangle2\") thisinstance.ny=2.0; else thisinstance.ny=4.0;\r\n      thisinstance.app!.mouse.totaldelta = 0;\r\n    }\r\n \r\n    onChangeColorValue(value? : any)\r\n    {\r\n      //console.log(\"we are in color=[\"+value+\"]\");\r\n      var thisinstance = ManyTextures.instance!;\r\n      if (thisinstance.gl!=null)\r\n      {\r\n        var cc = (thisinstance.gl!.canvas as HTMLCanvasElement).parentNode;\r\n        var ccd= (cc as HTMLDivElement);\r\n        ccd.style.backgroundColor =  value;\r\n      }\r\n    }\r\n\r\n    public initGUI(parameters: {move:boolean, speed:number, texture:string, color0:string})\r\n    {\r\n        this.manyTexturesParameters=parameters;\r\n\r\n        var cc = (this.gl!.canvas as HTMLCanvasElement).parentNode;\r\n        var ccd= (cc as HTMLDivElement);\r\n        ccd.style.backgroundColor =  this.manyTexturesParameters.color0;;\r\n   \r\n        // park the dat.gui box in the linksdiv below the links, in closed state\r\n        var gui = new datgui.GUI( { autoPlace: false } );\r\n        gui.domElement.id = 'gui_drawimagespace';\r\n        document.getElementById(\"linksdiv\")!.append( gui.domElement);\r\n        gui.close();\r\n\r\n        // connect viewmodel\r\n        gui.remember(this.manyTexturesParameters);\r\n      \r\n        // Checkbox for animation on/off\r\n        gui.add(this.manyTexturesParameters, 'move');\r\n       \r\n        // Slider for animation speed\r\n        gui.add(this.manyTexturesParameters, 'speed').min(0.02).max(4).step(0.01);\r\n     \r\n        // Color dialog sets background color\r\n        var cel3 = gui.addColor(this.manyTexturesParameters, 'color0');\r\n        cel3.onChange( this.onChangeColorValue);\r\n       \r\n        // Combobox texture from accepted values\r\n       // var cel2 = gui.add(this.manyTexturesParameters, 'texture', [ 'geotriangle2','zelenskyy', 'clover', 'checker' ] );\r\n       // cel2.onChange( this.onChangeTextureCombo);\r\n           \r\n        gui.updateDisplay();\r\n        return gui;\r\n      }\r\n     \r\n \r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nrand(min:number, max?: number) \r\n{\r\n  if (max === undefined) {\r\n      max = min;\r\n      min = 0;\r\n  }\r\n  return min + Math.random() * (max - min);\r\n}\r\n\r\ndrawCircle2D(  time: number) \r\n // Update the dynamic texture canvas.\r\n // Draw a circle with radius varying with time\r\n{\r\n  if (this.ctx2D!=null)\r\n  {\r\n   this.ctx2D.fillStyle = \"#00f\";\r\n   this.ctx2D.strokeStyle = \"#ff0\";\r\n   this.ctx2D.lineWidth = 10; // changed to number in current version !\r\n   this.ctx2D.fillRect(0, 0,  this.ctx2D.canvas.width,  this.ctx2D.canvas.height);\r\n   this.ctx2D.beginPath();\r\n   this.ctx2D.arc( this.ctx2D.canvas.width / 2,  this.ctx2D.canvas.height / 2,  this.ctx2D.canvas.width / 2.2 * Math.abs(Math.cos(time)), 0, Math.PI * 2);\r\n   this.ctx2D.stroke();\r\n  }\r\n}\r\n\r\npublic    CreateAllTextures(gl: WebGLRenderingContext, ctx: CanvasRenderingContext2D, cubemapCtx: CanvasRenderingContext2D, \r\n  cubeFaceCvs: HTMLCanvasElement[] | null): {[key: string]: WebGLTexture} | null\r\n{\r\n  var posxname = require(\"./images/yokohama/small/posx.jpg\")\r\n  var negxname = require(\"./images/yokohama/small/negx.jpg\")\r\n  var posyname = require(\"./images/yokohama/small/posy.jpg\")\r\n  var negyname = require(\"./images/yokohama/small/negy.jpg\")\r\n  var poszname = require(\"./images/yokohama/small/posz.jpg\")\r\n  var negzname = require(\"./images/yokohama/small/negz.jpg\")\r\n  var clovername = require(\"./images/clover.jpg\")\r\n  var hfticon16name =  require(\"./images/hft-icon-16.png\")\r\n  var goldengatename =  require(\"./images/goldengate.jpg\")\r\n \r\n\r\n  var textures = twgl.createTextures(gl, {\r\n  // a power of 2 image\r\n  hftIcon: { src: hfticon16name, mag: gl.NEAREST },\r\n  // a non-power of 2 image\r\n  clover: { src: clovername },\r\n  // From a canvas\r\n  fromCanvas: { src: ctx.canvas },\r\n  // A cubemap from 6 images\r\n\r\n  yokohama:  {\r\n    target: gl.TEXTURE_CUBE_MAP,\r\n    src: [\r\n      posxname,\r\n      negxname,\r\n      posyname,\r\n      negyname,\r\n      poszname,\r\n      negzname,\r\n    ],\r\n  \r\n  }, \r\n\r\n  // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\r\n  // twgl-full.js:1973 WebGL: INVALID_OPERATION: bindTexture: textures can not be used with multiple targets\r\n  goldengate:  {\r\n    target: gl.TEXTURE_CUBE_MAP,\r\n    src: goldengatename,\r\n  },  \r\n\r\n  // A 2x2 pixel texture from a JavaScript array\r\n  checker: {\r\n    mag: gl.NEAREST,\r\n    min: gl.LINEAR,\r\n    src: [\r\n      255, 255, 255, 255,\r\n      192, 192, 192, 255,\r\n      92, 92, 92, 255,\r\n      255, 255, 255, 255,\r\n    ],\r\n  },\r\n  // a 1x8 pixel texture from a typed array.\r\n  stripe:  {\r\n    mag: gl.NEAREST,\r\n    min: gl.LINEAR,\r\n    format: gl.LUMINANCE,\r\n    src: new Uint8Array([\r\n      255,\r\n      128,\r\n      255,\r\n      128,\r\n      255,\r\n      128,\r\n      255,\r\n      128,\r\n    ]),\r\n    width: 1,\r\n  }, \r\n \r\n  // a cubemap from array\r\n  cubemapFromArray: {\r\n    target: gl.TEXTURE_CUBE_MAP,\r\n    format: gl.RGBA,\r\n    src: [\r\n      0xF0, 0x80, 0x80, 0xFF,\r\n      0x80, 0xE0, 0x80, 0xFF,\r\n      0x80, 0x80, 0xD0, 0xFF,\r\n      0xC0, 0x80, 0x80, 0xFF,\r\n      0x80, 0xB0, 0x80, 0xFF,\r\n      0x8F, 0x80, 0x00, 0xFF,\r\n    ],\r\n  }, \r\n  cubemapFromCanvas: { target: gl.TEXTURE_CUBE_MAP, src: cubemapCtx?.canvas }, \r\n  //cubemapFrom6Canvases:  { target: gl.TEXTURE_CUBE_MAP, src: cubemapCtx?.canvas }, \r\n  cubemapFrom6Canvases: { target: gl.TEXTURE_CUBE_MAP, src: cubeFaceCvs! }, // \"twgl-full.js:5068 Uncaught unsupported src type\" */\r\n  });\r\n  return textures;\r\n}\r\n\r\n//=====================================================================================================================\r\n\r\npublic Prepare(dictpar:Map<string,string>)\r\n{\r\n    twgl.setDefaults({attribPrefix: \"a_\"});\r\n  \r\n    const onePointProgramInfo = twgl.createProgramInfo(this.gl, [this.one_point_vs, this.one_point_fs]);\r\n    const envMapProgramInfo = twgl.createProgramInfo(this.gl, [this.env_map_vs, this.env_map_fs]);\r\n     \r\n      const shapes = [\r\n        twgl.primitives.createSphereBufferInfo(this.gl, 1, 24, 12),\r\n        twgl.primitives.createCubeBufferInfo(this.gl, 2),\r\n        twgl.primitives.createPlaneBufferInfo(this.gl, 2, 2),\r\n        twgl.primitives.createTruncatedConeBufferInfo(this.gl, 1, 0, 2, 24, 1),\r\n      ];\r\n\r\n    // A circle on a canvas\r\n    this.ctx2D  = document.createElement(\"canvas\").getContext(\"2d\"); \r\n    if (this.ctx2D)\r\n    {\r\n        this.ctx2D.canvas.width  = 64;\r\n        this.ctx2D.canvas.height = 64;\r\n        this.drawCircle2D(0);\r\n    }\r\n  \r\n    // A cubemap drawn to a canvas with a circle on each face.\r\n    const cubemapCtx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    const size = 40;\r\n    if (cubemapCtx)\r\n    {\r\n     cubemapCtx.canvas.width  = size * 6;\r\n     cubemapCtx.canvas.height = size;\r\n     cubemapCtx.fillStyle = \"#888\";\r\n     for (let ff = 0; ff < 6; ++ff) {\r\n      const color = chroma.hsv((this.baseHue + ff * 10) % 360, 1 - ff / 6, 1);\r\n      cubemapCtx.fillStyle = color.darken().hex();\r\n      cubemapCtx.fillRect(size * ff, 0, size, size);\r\n      cubemapCtx.save();\r\n      cubemapCtx.translate(size * (ff + 0.5), size * 0.5);\r\n      cubemapCtx.beginPath();\r\n      cubemapCtx.arc(0, 0, size * 0.3, 0, Math.PI * 2);\r\n      cubemapCtx.fillStyle = color.hex();\r\n      cubemapCtx.fill();\r\n      cubemapCtx.restore();\r\n      \r\n     }\r\n    }\r\n   \r\n    var cubeFaceCanvases : HTMLCanvasElement[] = new Array<HTMLCanvasElement>();\r\n    // make 6 canvases to show loading from 6 element\r\n    for (let ff = 0; ff < 6; ++ff) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = 128;\r\n      canvas.height = 128;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const color = chroma.hsv((this.baseHue + ff * 10) % 360, 1 - ff / 6, 1);\r\n      if (ctx!=null)\r\n      {\r\n        ctx.fillStyle = color.darken().hex();\r\n        ctx.fillRect(0, 0, 128, 128);\r\n        ctx.translate(64, 64);\r\n        ctx.rotate(Math.PI * .05);\r\n        ctx.fillStyle = color.hex();\r\n        ctx.fillRect(-40, -40, 80, 80); \r\n        cubeFaceCanvases.push(canvas);\r\n      }\r\n    }    \r\n    if (this.gl && this.ctx2D && cubemapCtx) \r\n    {\r\n        this.textures = this.CreateAllTextures(this.gl, this.ctx2D!, cubemapCtx, cubeFaceCanvases);    \r\n        console.log(\"All textures created.\"); \r\n    }\r\n\r\n    if (this.textures != null && this.textures != undefined)\r\n    {\r\n\r\n      // This is soley to make it easy to pick textures at random\r\n      const twoDTextures = [\r\n        this.textures.checker,\r\n        this.textures.stripe,\r\n        this.textures.hftIcon,\r\n        this.textures.clover,\r\n        this.textures.fromCanvas,\r\n      ];\r\n\r\n      const cubeTextures = [\r\n        this.textures.yokohama,\r\n        this.textures.goldengate,\r\n        this.textures.cubemapFromCanvas,\r\n        this.textures.cubemapFrom6Canvases,\r\n        this.textures.cubemapFromArray,\r\n      ];\r\n\r\n      for (let ii = 0; ii < this.numObjects; ++ii) {\r\n         let uniforms: Tuniforms;\r\n         let programInfo;\r\n         let shape;\r\n         const renderType = this.rand(0, 2) | 0;\r\n         switch (renderType) {\r\n         case 0:  // checker\r\n           shape = shapes[ii % shapes.length];\r\n           programInfo = onePointProgramInfo;\r\n           uniforms = {\r\n             u_diffuseMult: chroma.hsv((this.baseHue + this.rand(0, 60)) % 360, 0.4, 0.8).gl(),\r\n             u_diffuse: twoDTextures[this.rand(0, twoDTextures.length) | 0],\r\n             u_viewInverse: m4.identity(),// this.camera,\r\n             u_world: m4.identity(),\r\n             u_worldInverseTranspose: m4.identity(),\r\n             u_worldViewProjection: m4.identity(),\r\n           };\r\n           break;\r\n         case 1:  // yokohama\r\n           shape = this.rand(0, 2) < 1 ? shapes[1] : shapes[3];\r\n           programInfo = envMapProgramInfo;\r\n           uniforms = {\r\n             u_texture: cubeTextures[this.rand(0, cubeTextures.length) | 0],\r\n             u_viewInverse:m4.identity(), // this.camera,\r\n             u_world: m4.identity(),\r\n             u_worldInverseTranspose: m4.identity(),\r\n             u_worldViewProjection: m4.identity(),\r\n           };\r\n           break;\r\n           default: throw \"wAT!\";\r\n          }   \r\n          this.drawItems.push( new Tdrawitem({ // Tdrawobject\r\n            programInfo: programInfo,\r\n            bufferInfo: shape,\r\n            uniforms: uniforms\r\n            },\r\n            { // Tobject\r\n              translation: [this.rand(-this.spreadRadius, this.spreadRadius), this.rand(-this.spreadRadius, this.spreadRadius), this.rand(-this.spreadRadius, this.spreadRadius)],\r\n              ySpeed: this.rand(1, 3),\r\n              zSpeed: this.rand(1, 3),\r\n              uniforms: uniforms,\r\n            } \r\n            ));\r\n\r\n        } // for\r\n      } // if textures!=null\r\n\r\n  } // Prepare\r\n\r\n  //===========================================================================================================\r\n\r\n  render(time: number) {\r\n    \r\n    if (this.gl==null || this.textures==null || this.ctx2D==null) return;\r\n\r\n    // prepare window\r\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\r\n    this.gl.enable(this.gl.DEPTH_TEST);\r\n    this.gl.enable(this.gl.BLEND);\r\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    \r\n    // update the dynamic texture canvas (grow circle)\r\n    this.drawCircle2D( time);\r\n    twgl.setTextureFromElement(this.gl, this.textures.fromCanvas, this.ctx2D.canvas);\r\n\r\n    // refer camera to Identity world\r\n    var world1 = m4.identity();\r\n    //this.cam.invworldmat = m4.inverse(world1);\r\n    this.cam!.CamHandlingYUp(this.gl, this.app!, 1.0, 1.0);\r\n  \r\n    // rotate the objects local worlds\r\n    this.drawItems.forEach((obj) => {\r\n       const uni = obj.obj.uniforms;\r\n       const world = m4.identity(); // local worlds turn\r\n       m4.translate(world, obj.obj.translation, world);\r\n       if (this.manyTexturesParameters.move)\r\n       {\r\n         m4.rotateY(world, this.manyTexturesParameters.speed* time * obj.obj.ySpeed, world);\r\n         m4.rotateZ(world, this.manyTexturesParameters.speed*time * obj.obj.zSpeed, world);\r\n       }\r\n       uni.u_world= world; // this object's world     \r\n       uni.u_worldInverseTranspose = m4.transpose(m4.inverse(world1)); \r\n       m4.multiply(this.cam!.viewProjection, world, uni.u_worldViewProjection);  // this object's matrix\r\n    });\r\n\r\n    // let twgl draw each drawObject\r\n    twgl.drawObjectList(this.gl, Tdrawitem.getTwglDrawObjects( this.drawItems));\r\n\r\n    // .. next\r\n    requestAnimationFrame(() => this.render(time+this.dtime));\r\n  }\r\n\r\n}","import chroma from \"chroma-js\";\r\n\r\nimport * as twgl from \"twgl.js\"   // Greg's work\r\nimport { m4 } from \"twgl.js\"\r\n\r\nimport * as datgui from \"dat.gui\"\r\n\r\nimport * as camhandler from \"./../baseapp/camhandler\" // camera projection   \r\nimport * as scene from \"./scene\"\r\n\r\nimport { TAnimation1Parameters }  from \"./scene\"\r\n\r\ntype Tuniforms = { \r\n  u_diffuseMult?: [number,Number, number, number], \r\n  u_texture?:WebGLTexture, \r\n  u_diffuse?: WebGLTexture,\r\n  u_viewInverse: twgl.m4.Mat4, \r\n  u_world: twgl.m4.Mat4, \r\n  u_worldInverseTranspose: twgl.m4.Mat4, \r\n  u_worldViewProjection: twgl.m4.Mat4 \r\n};\r\n\r\ntype Tobject = {\r\n  translation: number[], \r\n  ySpeed:number,\r\n  zSpeed:number, \r\n  uniforms:Tuniforms \r\n};\r\n\r\n\r\n\r\nexport class Tdrawitem \r\n{\r\n  do: twgl.DrawObject;\r\n  obj: Tobject;\r\n\r\n  constructor(cdo:twgl.DrawObject, cobj: Tobject)\r\n  {\r\n    this.do = cdo;\r\n    this.obj = cobj;\r\n  }\r\n\r\n  public static getTwglDrawObjects(a: Tdrawitem[])\r\n  {\r\n    var ad: twgl.DrawObject[] = [];\r\n    a.forEach((el)=> ad.push(el.do));\r\n    return ad;\r\n  }\r\n}\r\n\r\nexport class ManyTexturesScene implements scene.SceneInterface\r\n{\r\n  // Interface\r\n  animationParameters: TAnimation1Parameters | undefined;\r\n  scenesize: number = 40;\r\n\r\n  sceneenv:number = 1;\r\n  positionLocation: number | undefined; // WebGLUniformLocation | undefined;\r\n      \r\n  \r\n  public static instance: ManyTexturesScene | undefined;\r\n\r\n  vertexShaderSource = ``;\r\n  fragmentShaderSource = ``;\r\n  twglprograminfo: twgl.ProgramInfo[]|null=null;  // there are 2 sets of shaders defined here.\r\n  cameraPosition: [number,number,number] | undefined\r\n\r\n  // Local\r\n  baseHue = this.rand(300);            // color of objects\r\n  numObjects = 200;                    // object count\r\n  spreadRadius = this.numObjects/10.0; // random placement range for objects\r\n  dtime = 0.02;                        // animation timer interval\r\n  \r\n  private drawItems: Tdrawitem[] = [];                           // resource\r\n  private textures: {[key: string]: WebGLTexture} | null = null; // resource\r\n\r\n  private ctx2D: CanvasRenderingContext2D | null = null;  // a 2D canvas to draw things on (used for dynamic circle texture)\r\n\r\n    // Shaders\r\n    private one_point_vs = `#version 300 es\r\n        \r\n    uniform mat4 u_worldViewProjection;\r\n\r\n    in vec4 a_position;\r\n    in vec2 a_texcoord;\r\n\r\n    out vec2 v_texCoord;\r\n\r\n    void main() {\r\n      v_texCoord = a_texcoord;\r\n      gl_Position = u_worldViewProjection * a_position;\r\n    }\r\n    `;\r\n\r\n    private one_point_fs = `#version 300 es\r\n    precision highp float;\r\n\r\n    in vec2 v_texCoord;\r\n\r\n    uniform vec4 u_diffuseMult;\r\n    uniform sampler2D u_diffuse;\r\n\r\n    out vec4 outColor;\r\n\r\n    void main() {\r\n      vec4 diffuseColor = texture(u_diffuse, v_texCoord) * u_diffuseMult;\r\n      if (diffuseColor.a < 0.1) {\r\n        discard;\r\n      }\r\n      outColor = diffuseColor;\r\n    }\r\n    `;\r\n\r\n    private env_map_vs = `#version 300 es\r\n\r\n    uniform mat4 u_viewInverse;\r\n    uniform mat4 u_world;\r\n    uniform mat4 u_worldViewProjection;\r\n    uniform mat4 u_worldInverseTranspose;\r\n\r\n    in vec4 a_position;\r\n    in vec3 a_normal;\r\n\r\n    out vec3 v_normal;\r\n    out vec3 v_surfaceToView;\r\n\r\n    void main() {\r\n      v_normal = (u_worldInverseTranspose * vec4(a_normal, 0)).xyz;\r\n      v_surfaceToView = (u_viewInverse[3] - (u_world * a_position)).xyz;\r\n      gl_Position = u_worldViewProjection * a_position;\r\n    }\r\n    `;\r\n\r\n    private env_map_fs = `#version 300 es\r\n    precision mediump float;\r\n\r\n    uniform samplerCube u_texture;\r\n\r\n    in vec3 v_surfaceToView;\r\n    in vec3 v_normal;\r\n\r\n    out vec4 outColor;\r\n\r\n    void main() {\r\n      vec3 normal = normalize(v_normal);\r\n      vec3 surfaceToView = normalize(v_surfaceToView);\r\n      vec4 color = texture(u_texture, -reflect(surfaceToView, normal));\r\n      outColor = color;\r\n    }\r\n    `;\r\n  \r\n    \r\nconstructor(gl: WebGL2RenderingContext)\r\n{\r\n  ManyTexturesScene.instance = this;\r\n  this.twglprograminfo=new Array(3);   \r\n  this.twglprograminfo![1] = twgl.createProgramInfo(gl, [this.one_point_vs, this.one_point_fs]);\r\n  this.twglprograminfo![2] = twgl.createProgramInfo(gl, [this.env_map_vs, this.env_map_fs]);\r\n}\r\n\r\npublic extendGUI(gui: datgui.GUI)\r\n{\r\n// Slider for sling speed\r\n// Checkbox forward move animation on/off\r\nconsole.log(\"=> manyTextures extendGUI movetail\"+this.animationParameters!);\r\n gui.add(this.animationParameters!, 'movetail');\r\n //gui.add(this.animationParameters!, 'sling').min(9).max(120).step(1);\r\n // Slider for shininess\r\n //gui.add(this.animationParameters!, 'shininess').min(0).max(20.0).step(0.1);\r\n gui.add(this.animationParameters!, 'fov', 5.0,85.0,1.0 );\r\n \r\n gui.updateDisplay();\r\n console.log(\"<= manyTextures extendGUI\");\r\n}\r\n\r\nrand(min:number, max?: number) \r\n{\r\n  if (max === undefined) {\r\n      max = min;\r\n      min = 0;\r\n  }\r\n  return min + Math.random() * (max - min);\r\n}\r\n\r\ndrawCircle2D(  time: number) \r\n // Update the dynamic texture canvas.\r\n // Draw a circle with radius varying with time\r\n{\r\n  if (this.ctx2D!=null)\r\n  {\r\n   this.ctx2D.fillStyle = \"#00f\";\r\n   this.ctx2D.strokeStyle = \"#ff0\";\r\n   this.ctx2D.lineWidth = 10; // changed to number in current version !\r\n   this.ctx2D.fillRect(0, 0,  this.ctx2D.canvas.width,  this.ctx2D.canvas.height);\r\n   this.ctx2D.beginPath();\r\n   this.ctx2D.arc( this.ctx2D.canvas.width / 2,  this.ctx2D.canvas.height / 2,  this.ctx2D.canvas.width / 2.2 * Math.abs(Math.cos(time)), 0, Math.PI * 2);\r\n   this.ctx2D.stroke();\r\n  }\r\n}\r\n\r\npublic    CreateAllTextures(gl: WebGLRenderingContext, ctx: CanvasRenderingContext2D, cubemapCtx: CanvasRenderingContext2D, \r\n  cubeFaceCvs: HTMLCanvasElement[] | null, cb: twgl.TexturesReadyCallback | undefined): {[key: string]: WebGLTexture} | null\r\n{\r\n  var posxname = require(\"./../images/yokohama/small/posx.jpg\")\r\n  var negxname = require(\"./../images/yokohama/small/negx.jpg\")\r\n  var posyname = require(\"./../images/yokohama/small/posy.jpg\")\r\n  var negyname = require(\"./../images/yokohama/small/negy.jpg\")\r\n  var poszname = require(\"./../images/yokohama/small/posz.jpg\")\r\n  var negzname = require(\"./../images/yokohama/small/negz.jpg\")\r\n  var clovername = require(\"./../images/clover.jpg\")\r\n  var hfticon16name =  require(\"./../images/hft-icon-16.png\")\r\n  var goldengatename =  require(\"./../images/goldengate.jpg\")\r\n \r\n\r\n  var textures = twgl.createTextures(gl, {\r\n  // a power of 2 image\r\n  hftIcon: { src: hfticon16name, mag: gl.NEAREST },\r\n  // a non-power of 2 image\r\n  clover: { src: clovername },\r\n  // From a canvas\r\n  fromCanvas: { src: ctx.canvas },\r\n  // A cubemap from 6 images\r\n\r\n  yokohama:  {\r\n    target: gl.TEXTURE_CUBE_MAP,\r\n    src: [\r\n      posxname,\r\n      negxname,\r\n      posyname,\r\n      negyname,\r\n      poszname,\r\n      negzname,\r\n    ],\r\n  \r\n  }, \r\n\r\n  // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\r\n  // twgl-full.js:1973 WebGL: INVALID_OPERATION: bindTexture: textures can not be used with multiple targets\r\n  goldengate:  {\r\n    target: gl.TEXTURE_CUBE_MAP,\r\n    src: goldengatename,\r\n  },  \r\n\r\n  // A 2x2 pixel texture from a JavaScript array\r\n  checker: {\r\n    mag: gl.NEAREST,\r\n    min: gl.LINEAR,\r\n    src: [\r\n      255, 255, 255, 255,\r\n      192, 192, 192, 255,\r\n      92, 92, 92, 255,\r\n      255, 255, 255, 255,\r\n    ],\r\n  },\r\n  // a 1x8 pixel texture from a typed array.\r\n  stripe:  {\r\n    mag: gl.NEAREST,\r\n    min: gl.LINEAR,\r\n    format: gl.LUMINANCE,\r\n    src: new Uint8Array([\r\n      255,\r\n      128,\r\n      255,\r\n      128,\r\n      255,\r\n      128,\r\n      255,\r\n      128,\r\n    ]),\r\n    width: 1,\r\n  }, \r\n \r\n  // a cubemap from array\r\n  cubemapFromArray: {\r\n    target: gl.TEXTURE_CUBE_MAP,\r\n    format: gl.RGBA,\r\n    src: [\r\n      0xF0, 0x80, 0x80, 0xFF,\r\n      0x80, 0xE0, 0x80, 0xFF,\r\n      0x80, 0x80, 0xD0, 0xFF,\r\n      0xC0, 0x80, 0x80, 0xFF,\r\n      0x80, 0xB0, 0x80, 0xFF,\r\n      0x8F, 0x80, 0x00, 0xFF,\r\n    ],\r\n  }, \r\n  cubemapFromCanvas: { target: gl.TEXTURE_CUBE_MAP, src: cubemapCtx?.canvas }, \r\n  //cubemapFrom6Canvases:  { target: gl.TEXTURE_CUBE_MAP, src: cubemapCtx?.canvas }, \r\n  cubemapFrom6Canvases: { target: gl.TEXTURE_CUBE_MAP, src: cubeFaceCvs! }, // \"twgl-full.js:5068 Uncaught unsupported src type\" */\r\n  }, cb); \r\n  return textures;\r\n}\r\n\r\n//=====================================================================================================================\r\n//sceneReadyCallback: (a:any)=>void = this.defaultCallback;\r\n\r\npublic resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }  \r\n\r\npublic Prepare(gl: WebGL2RenderingContext, sceneReadyCallback: (a:any)=>void | undefined)\r\n{\r\n   // this.sceneReadyCallback = sceneReadyCallback;\r\n    twgl.setDefaults({attribPrefix: \"a_\"});\r\n  \r\n    const shapes = [\r\n        twgl.primitives.createSphereBufferInfo(gl, 1, 24, 12),\r\n        twgl.primitives.createCubeBufferInfo(gl, 2),\r\n        twgl.primitives.createPlaneBufferInfo(gl, 2, 2),\r\n        twgl.primitives.createTruncatedConeBufferInfo(gl, 1, 0, 2, 24, 1),\r\n      ];\r\n\r\n    // A circle on a canvas\r\n    this.ctx2D  = document.createElement(\"canvas\").getContext(\"2d\"); \r\n    if (this.ctx2D)\r\n    {\r\n        this.ctx2D.canvas.width  = 64;\r\n        this.ctx2D.canvas.height = 64;\r\n        this.drawCircle2D(0);\r\n    }\r\n  \r\n    // A cubemap drawn to a canvas with a circle on each face.\r\n    const cubemapCtx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    const size = 40;\r\n    if (cubemapCtx)\r\n    {\r\n     cubemapCtx.canvas.width  = size * 6;\r\n     cubemapCtx.canvas.height = size;\r\n     cubemapCtx.fillStyle = \"#888\";\r\n     for (let ff = 0; ff < 6; ++ff) {\r\n      const color = chroma.hsv((this.baseHue + ff * 10) % 360, 1 - ff / 6, 1);\r\n      cubemapCtx.fillStyle = color.darken().hex();\r\n      cubemapCtx.fillRect(size * ff, 0, size, size);\r\n      cubemapCtx.save();\r\n      cubemapCtx.translate(size * (ff + 0.5), size * 0.5);\r\n      cubemapCtx.beginPath();\r\n      cubemapCtx.arc(0, 0, size * 0.3, 0, Math.PI * 2);\r\n      cubemapCtx.fillStyle = color.hex();\r\n      cubemapCtx.fill();\r\n      cubemapCtx.restore();\r\n      \r\n     }\r\n    }\r\n   \r\n    var cubeFaceCanvases : HTMLCanvasElement[] = new Array<HTMLCanvasElement>();\r\n    // make 6 canvases to show loading from 6 element\r\n    for (let ff = 0; ff < 6; ++ff) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = 128;\r\n      canvas.height = 128;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const color = chroma.hsv((this.baseHue + ff * 10) % 360, 1 - ff / 6, 1);\r\n      if (ctx!=null)\r\n      {\r\n        ctx.fillStyle = color.darken().hex();\r\n        ctx.fillRect(0, 0, 128, 128);\r\n        ctx.translate(64, 64);\r\n        ctx.rotate(Math.PI * .05);\r\n        ctx.fillStyle = color.hex();\r\n        ctx.fillRect(-40, -40, 80, 80); \r\n        cubeFaceCanvases.push(canvas);\r\n      }\r\n    }    \r\n    if (gl && this.ctx2D && cubemapCtx) \r\n    {\r\n      this.textures = this.CreateAllTextures(gl, this.ctx2D!, cubemapCtx, cubeFaceCanvases, //this.texturesReadyCallback);   \r\n      (err: any, textures: {\r\n        [key: string]: WebGLTexture;\r\n      }, sources: {\r\n        [key: string]: any;\r\n      }) => {\r\n          console.log(\"All textures created. scenesize=\"+this.scenesize); \r\n         \r\n    \r\n\r\n        if (this.textures != null && this.textures != undefined)\r\n        {\r\n\r\n          // This is soley to make it easy to pick textures at random\r\n          const twoDTextures = [\r\n            this.textures.checker,\r\n            this.textures.stripe,\r\n            this.textures.hftIcon,\r\n            this.textures.clover,\r\n            this.textures.fromCanvas,\r\n          ];\r\n\r\n          const cubeTextures = [\r\n            this.textures.yokohama,\r\n            this.textures.goldengate,\r\n            this.textures.cubemapFromCanvas,\r\n            this.textures.cubemapFrom6Canvases,\r\n            this.textures.cubemapFromArray,\r\n          ];\r\n\r\n          for (let ii = 0; ii < this.numObjects; ++ii) {\r\n            let uniforms: Tuniforms;\r\n            let programInfo;\r\n            let shape;\r\n            const renderType = this.rand(0, 2) | 0;\r\n            switch (renderType) {\r\n            case 0:  // checker\r\n              shape = shapes[ii % shapes.length];\r\n              programInfo = this.twglprograminfo![1];\r\n              uniforms = {\r\n                u_diffuseMult: chroma.hsv((this.baseHue + this.rand(0, 60)) % 360, 0.4, 0.8).gl(),\r\n                u_diffuse: twoDTextures[this.rand(0, twoDTextures.length) | 0],\r\n                u_viewInverse: m4.identity(),// this.camera,\r\n                u_world: m4.identity(),\r\n                u_worldInverseTranspose: m4.identity(),\r\n                u_worldViewProjection: m4.identity(),\r\n              };\r\n              break;\r\n            case 1:  // yokohama\r\n              shape = this.rand(0, 2) < 1 ? shapes[1] : shapes[3];\r\n              programInfo = this.twglprograminfo![2];\r\n              uniforms = {\r\n                u_texture: cubeTextures[this.rand(0, cubeTextures.length) | 0],\r\n                u_viewInverse:m4.identity(), // this.camera,\r\n                u_world: m4.identity(),\r\n                u_worldInverseTranspose: m4.identity(),\r\n                u_worldViewProjection: m4.identity(),\r\n              };\r\n              break;\r\n              default: throw \"wAT!\";\r\n              }   \r\n              this.drawItems.push( new Tdrawitem({ // Tdrawobject\r\n                programInfo: programInfo,\r\n                bufferInfo: shape,\r\n                uniforms: uniforms\r\n                },\r\n                { // Tobject\r\n                  translation: [this.rand(-this.spreadRadius, this.spreadRadius), this.rand(-this.spreadRadius, this.spreadRadius), this.rand(-this.spreadRadius, this.spreadRadius)],\r\n                  ySpeed: this.rand(1, 3),\r\n                  zSpeed: this.rand(1, 3),\r\n                  uniforms: uniforms,\r\n                } \r\n                ));\r\n\r\n            } // for\r\n          } // if textures!=null \r\n          sceneReadyCallback(0);\r\n      }); // read callback for textures\r\n      console.log(\"<= createAllTextures\");\r\n    } // return in main thread (earlier)\r\n  }\r\n    \r\n  public initScene(gl: WebGL2RenderingContext, cap:TAnimation1Parameters,dictpar:Map<string,string>,  p: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined)\r\n    { \r\n      this.Prepare(gl, sceneReadyCallback);\r\n    }\r\n\r\n\r\n  public drawScene(gl: WebGL2RenderingContext, cam: camhandler.Camera, time: number) \r\n  { \r\n  //  this.cameraPosition = (this.animationParameters?.b.move)? [Math.cos(time * 0.04 * this.animationParameters.b.speed) * 4.0, 0, \r\n  //    Math.sin(time * 0.04 * this.animationParameters.b.speed) * 4.0] : [4.0,0.0,0.0];\r\n  //  if (!this.animationParameters?.b.move)\r\n  //    this.cameraPosition = cam?.Position() as [number,number,number]; // [cam?.Position()[0]!,cam?.Position()[1]!,cam?.Position()[2]!];\r\n\r\n  \r\n\r\n        // update the dynamic texture canvas (shrink and grow circle)\r\n        if (this.animationParameters!.movetail) this.drawCircle2D( time * 0.01); else this.drawCircle2D( 1.0);\r\n        twgl.setTextureFromElement(gl, this.textures!.fromCanvas, this.ctx2D!.canvas);\r\n    \r\n        // use Identity world\r\n        var world1 = m4.identity();\r\n       \r\n        // rotate the objects local worlds\r\n        this.drawItems.forEach((obj) => {\r\n           const uni = obj.obj.uniforms;\r\n           const world = m4.identity(); // local worlds turn\r\n           m4.translate(world, obj.obj.translation, world);\r\n           if (this.animationParameters!=null)\r\n           if (this.animationParameters.b.move)\r\n           {\r\n             m4.rotateY(world,this.animationParameters.b.speed* time * 0.05 * obj.obj.ySpeed, world);\r\n             m4.rotateZ(world, this.animationParameters.b.speed*time * 0.05 * obj.obj.zSpeed, world);\r\n           }\r\n           uni.u_world= world; // this object's world     \r\n           uni.u_worldInverseTranspose = m4.transpose(m4.inverse(world1)); \r\n           m4.multiply(cam.viewProjection, world, uni.u_worldViewProjection);  // this object's matrix\r\n        });\r\n    \r\n        // let twgl draw each drawObject\r\n        twgl.drawObjectList(gl, Tdrawitem.getTwglDrawObjects( this.drawItems));    \r\n  }\r\n}","import * as twgl from \"twgl.js\";          // Lib: Gregg's work\r\nimport * as datgui from \"dat.gui\";        // Lib: dat.gui\r\nimport * as mtls from \"./baseapp/mouselistener\";  // connect events for mouse movement, buttons and wheel\r\n\r\nimport * as baseapp from \"./baseapp/baseapp\";      // convenient base class initializing gl2 and program(s)\r\n\r\nexport class drawimagespace extends baseapp.BaseApp\r\n{\r\n      imagespaceParameters = {\r\n        move: false,\r\n        teal: false,\r\n        speed: 0.4,                    // moving camera\r\n        texture: 'geotriangle2',\r\n        color0: \"#00A000\",\r\n      };\r\n\r\n      diffuseLocation: WebGLUniformLocation=0;\r\n      imageSizeLocation: WebGLUniformLocation=0;\r\n      tealLocation: WebGLUniformLocation=0;\r\n      xshiftLocation: WebGLUniformLocation=0;\r\n      yshiftLocation: WebGLUniformLocation=0;\r\n      aspectLocation: WebGLUniformLocation=0;\r\n\r\n      cxshift:number=0; // total hhift texture space (pixels)\r\n      cyshift:number=0; // total hhift texture space (pixels)\r\n      cxdshift: number=6.0; // moving camera\r\n      cydshift: number=4.0; // moving camera\r\n      cxshiftmax: number=1000; // moving camera x limit\r\n      cyshiftmax: number=400;  // moving camera y limit\r\n      xzoomoffset: number = 0;\r\n      yzoomoffset: number = 0;\r\n\r\n      xzoomoffsetLocation:   WebGLUniformLocation=0;\r\n      yzoomoffsetLocation:   WebGLUniformLocation=0;\r\n\r\n      currentTexture = \"geotriangle2\";\r\n      ny = 0.0;\r\n      txtaspect: number = 1.0;\r\n\r\n      static zoomVelocity = 0.075;\r\n      static animationVelocity=0.25;\r\n\r\n      static instance: drawimagespace;\r\n   \r\n     vs = `#version 300 es\r\n        precision highp float;\r\n        precision highp int;   \r\n        void main()\r\n        {\r\n          //show smaller, centered triangle gl_Position = vec4(1.f * float(uint(gl_VertexID) % 2u) - 0.5f, 1.f*float(uint(gl_VertexID) / 2u) - 0.5f, 1.0, 1.0);\r\n          //show half viewport triangle gl_Position = vec4(2.f * float(uint(gl_VertexID) % 2u) - 1.f, 2.f*float(uint(gl_VertexID) / 2u) - 1.f, 1.0, 1.0);\r\n          //show (the same) half viewport triangle  gl_Position = vec4(4.f * float(uint(gl_VertexID) % 2u) - 2.0f, 4.f*float(uint(gl_VertexID) / 2u) - 2.0f, 1.0, 1.0);\r\n          //show covering right side of viewport gl_Position = vec4(4.f * float(uint(gl_VertexID) % 2u) + 0.0f, 4.f*float(uint(gl_VertexID) / 2u) - 1.0f, 1.0, 1.0);\r\n          //show covering upper right square of viewport gl_Position = vec4(4.f * float(uint(gl_VertexID) % 2u) + 0.0f, 4.f*float(uint(gl_VertexID) / 2u) + 0.0f, 1.0, 1.0);\r\n          //show covering  entire viewport\r\n          gl_Position = vec4(4.f * float(uint(gl_VertexID) % 2u) - 1.0f,\r\n                             4.f * float(uint(gl_VertexID) / 2u) - 1.0f, \r\n                             1.0, 1.0);       \r\n        }`;\r\n\r\n         fs = `#version 300 es\r\n        precision highp float;\r\n        precision highp int;\r\n        uniform sampler2D diffuse;\r\n        uniform vec2 u_imageSize;\r\n        uniform int u_teal; \r\n        uniform int u_xshift; \r\n        uniform int u_yshift; \r\n        uniform float u_aspect; \r\n        uniform float u_xzoomoffset    ;\r\n        uniform float u_yzoomoffset    ;\r\n          out vec4 color;\r\n        void main()\r\n        {\r\n          float px = u_aspect *(gl_FragCoord.x-float(u_xshift));\r\n          float py = gl_FragCoord.y-float(u_yshift);\r\n          px-=u_xzoomoffset;\r\n          py-=u_yzoomoffset;\r\n          vec2 texoffset1 = vec2(  px, py) / u_imageSize;\r\n          vec2 texcoord1 = texoffset1 + vec2(  u_xzoomoffset, u_yzoomoffset);\r\n\r\n          vec4 ccolor = texture(diffuse, texcoord1);\r\n          if ((py<u_imageSize.y && px<u_imageSize.x) || (u_teal ==1))\r\n            color=ccolor;\r\n        }`;\r\n      \r\n      \r\n        public constructor(cgl: WebGL2RenderingContext | undefined | null, capp: mtls.MouseListener | undefined , dictpar:Map<string,string>, cdiv: string)\r\n        {\r\n          super(cgl, capp, dictpar, cdiv);\r\n          drawimagespace.instance = this;\r\n          this.twglprograminfo=new Array(2);\r\n          this.twglprograminfo![1] = twgl.createProgramInfo(cgl!, [this.vs, this.fs]);  \r\n        }\r\n  \r\n  //===================================================================================================\r\n\r\n      gui: datgui.GUI|null=null;\r\n\r\n      onChangeTextureCombo(value? : any)\r\n      {\r\n        var thisinstance = drawimagespace.instance; //! as drawimagespace;\r\n        console.log(\"we are in texture=[\"+value+\"] obj.speed=\"+ thisinstance.imagespaceParameters.speed);\r\n        thisinstance.currentTexture = value;\r\n        console.log(\"set currentTexture to [\"+value+\"]\");\r\n        if (value==\"clover\") thisinstance.ny=8.0; else \r\n        if (value==\"geotriangle2\") thisinstance.ny=2.0; else thisinstance.ny=4.0;\r\n\r\n        console.log(\"this.textureaspects=\"+thisinstance.textureaspects)\r\n        if (value == \"geotriangle\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"geotriangle\")!;\r\n        if (value == \"geotriangle2\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"geotriangle2\")!;\r\n        if (value == \"flagofukraine\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"flagofukraine\")!;\r\n        if (value == \"flagofukraine2\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"flagofukraine2\")!;\r\n        if (value == \"clover\") if (thisinstance.textureaspects.has(\"clover\")) thisinstance.txtaspect = thisinstance.textureaspects.get(\"clover\")!;\r\n        if (value == \"aristotle\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"aristotle\")!;\r\n        if (value == \"checker\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"checker\")!;\r\n        if (value == \"zelenskyy\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"zelenskyy\")!;\r\n        if (value == \"protractorT2\") thisinstance.txtaspect = thisinstance.textureaspects.get(\"protractorT2\")!;\r\n        //alert(\"txtaspect set at \"+thisinstance.txtaspect);\r\n\r\n        thisinstance.app!.mouse.totaldelta = 0;\r\n      }\r\n  \r\n      onChangeColorValue(value? : any)\r\n      {\r\n        console.log(\"we are in color=[\"+value+\"]\");\r\n        var thisinstance = drawimagespace.instance!;\r\n        if (thisinstance.gl!=null)\r\n        {\r\n          var cc = (thisinstance.gl!.canvas as HTMLCanvasElement).parentNode;\r\n          var ccd= (cc as HTMLDivElement);\r\n          ccd.style.backgroundColor =  value;\r\n        }\r\n      }\r\n\r\n      public initGUI(parameters: {move:boolean, teal:boolean, speed:number, texture:string, color0:string})\r\n      {\r\n        this.imagespaceParameters=parameters;\r\n        \r\n        var cc = (this.gl!.canvas as HTMLCanvasElement).parentNode;\r\n        var ccd= (cc as HTMLDivElement);\r\n        ccd.style.backgroundColor =  this.imagespaceParameters.color0;\r\n  \r\n        // park the dat.gui box in the linksdiv below the links, in closed state\r\n        var gui = new datgui.GUI( { autoPlace: false } );\r\n        gui.domElement.id = 'gui_drawimagespace';\r\n        document.getElementById(\"linksdiv\")!.append( gui.domElement);\r\n        gui.close();\r\n\r\n        // connect viewmodel\r\n        gui.remember(this.imagespaceParameters);\r\n      \r\n        // Checkbox for animation on/off\r\n        gui.add(this.imagespaceParameters, 'move');\r\n\r\n        // Checkbox for tealing texture on/off\r\n        gui.add(this.imagespaceParameters, 'teal');\r\n       \r\n        // Slider for animation speed\r\n        gui.add(this.imagespaceParameters, 'speed').min(0.2).max(1).step(0.005);\r\n     \r\n        // Color dialog sets background color\r\n        var cel3 = gui.addColor(this.imagespaceParameters, 'color0');\r\n        cel3.onChange( this.onChangeColorValue);\r\n       \r\n        // Combobox texture from accepted values\r\n        var cel2 = gui.add(this.imagespaceParameters, 'texture', [ 'geotriangle2','zelenskyy', 'clover', 'checker','aristotle','protractorT2' ] );\r\n        cel2.onChange( this.onChangeTextureCombo);\r\n           \r\n        gui.updateDisplay();\r\n        return gui;\r\n      }\r\n\r\n  //---------------------------------------------------------------------------------------------------------\r\n  \r\n      public main(gl: WebGL2RenderingContext, dictpar:Map<string,string>)\r\n      { \r\n      //  super.main(gl, dictpar,\"\",\"\");\r\n      //  if (this.program && this.gl && this.program[0])\r\n        {\r\n          this.prepareSurfaceTextures(gl, \"zelenskyy\")!;\r\n          gl.viewport(0, 0,  gl.canvas.width, gl.canvas.height); \r\n\r\n          this.txtaspect = this.textureaspects.get(\"geotriangle2\")!;\r\n          this.ny=1.0;\r\n\r\n          console.log(\"this.twglprograminfo.length=\"+this.twglprograminfo?.length);\r\n\r\n          var program = this.twglprograminfo![1].program;\r\n          console.log(\"<assigned program\");\r\n\r\n          this.diffuseLocation = gl.getUniformLocation(program, 'diffuse')!;\r\n          this.imageSizeLocation = gl.getUniformLocation(program, 'u_imageSize')!;\r\n          this.tealLocation = gl.getUniformLocation(program, 'u_teal')!;\r\n          this.xshiftLocation = gl.getUniformLocation(program, 'u_xshift')!;\r\n          this.yshiftLocation = gl.getUniformLocation(program, 'u_yshift')!;\r\n          this.aspectLocation = gl.getUniformLocation(program, 'u_aspect')!;  \r\n          this.xzoomoffsetLocation = gl.getUniformLocation(program, 'u_xzoomoffset')!;\r\n          this.yzoomoffsetLocation = gl.getUniformLocation(program, 'u_yzoomoffset')!;\r\n      \r\n         // gl.useProgram(this.twglprograminfo![0].program);\r\n         // gl.viewport(0, 0,  gl.canvas.width, gl.canvas.height); \r\n\r\n          requestAnimationFrame(() => this.render(0)); \r\n        } //else\r\n        //console.log(\"initprogram program[0] fails.\");\r\n      }\r\n      \r\n      readcolor(original: string) \r\n      {\r\n        var s = (original[0]=='#')?original.substring(1):original;\r\n        var v1 = parseInt(s.substring(0,2),16); \r\n        var v2 = parseInt(s.substring(2,4),16); \r\n        var v3 = parseInt(s.substring(4,6),16); \r\n        return {\r\n          r: v1/256.0,\r\n          g: v2/256.0,\r\n          b: v3/256.0\r\n        };\r\n      }  \r\n\r\n      render(time: number)\r\n      {               \r\n        if (this.textures!=null)\r\n        {       \r\n            var gl: WebGL2RenderingContext = this.gl!;\r\n            twgl.resizeCanvasToDisplaySize(gl.canvas  as HTMLCanvasElement);\r\n    \r\n            gl.useProgram(this.twglprograminfo![1].program);\r\n            gl.viewport(0, 0,  gl.canvas.width, gl.canvas.height); \r\n\r\n            var texture = this.textures[this.currentTexture];\r\n            if (texture==null || texture==undefined) { console.log(\"no texture\");  requestAnimationFrame(() => this.render(++time)); return; }\r\n          //  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n            if (this.imagespaceParameters.move)\r\n            {\r\n                this.cxshift+=this.imagespaceParameters.speed*this.cxdshift;\r\n                if (this.cxshift>this.cxshiftmax) this.cxdshift=-this.cxdshift;\r\n                if (this.cxshift<1) this.cxdshift=-this.cxdshift;\r\n                this.cyshift+=this.imagespaceParameters.speed*this.cydshift;\r\n                if (this.cyshift>this.cyshiftmax) this.cydshift=-this.cydshift;\r\n                if (this.cyshift<1) this.cydshift=-this.cydshift;\r\n            }     else\r\n            if (this.app!.mouse.dragvector && this.app!.mouse.dragdistance)\r\n            {\r\n              var v = this.app!.mouse.dragvector!;\r\n              var d = this.app!.mouse.dragpdistance!;\r\n              this.cxshift+=0; //  /gl.canvas.width;\r\n              this.cyshift+=0; // /gl.canvas.width;\r\n              this.xzoomoffset= this.app!.mouse.px!;\r\n              this.yzoomoffset= this.app!.mouse.py!;\r\n              ///console.log(\"cxshift=\"+ this.cxshift+\" cyshift=\"+this.cyshift)             \r\n            }\r\n        \r\n            // this does not work here, background is div background of canvas\r\n              gl.clearColor(0.0,0.0,0.0,1.0);       \r\n              gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);     \r\n        \r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        \r\n            // gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n            // blur the checker\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        \r\n            if (!this.imagespaceParameters.teal)\r\n            {\r\n              // this will show a single instance of the texture image\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)  // horizontal\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); // vertical\r\n            } else \r\n            {\r\n              // this will show tealed texture images\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)  // horizontal\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); // vertical    \r\n            }\r\n\r\n            // The texture is sampled according to cdivx and cdivy.\r\n            // ny determines how many texture images are shown in vertical direction in tealed mode.\r\n            // totaldelta is the distance the mouse wheel has moved.\r\n            // zoomVelocity decides the speed of zoomin/zoomout\r\n            // the fragment shader will sample the texture using the viewport size and cdiv.\r\n            var cdivy = this.ny+this.app?.mouse.totaldelta!*drawimagespace.zoomVelocity;\r\n            var cdivx = cdivy; // keep aspect ratio of image space\r\n\r\n            // set zoomin state (imageSize)\r\n            gl.uniform2f(this.imageSizeLocation, gl.canvas.width/cdivx, gl.canvas.height/cdivy);\r\n\r\n            // aspect ratio texture dimensions i.r.t. viewport   \r\n            var daspect:number = (gl.canvas.height)/gl.canvas.width;   \r\n            gl.uniform1f(this.aspectLocation, this.txtaspect/daspect);\r\n            \r\n            gl.uniform1f(this.xzoomoffsetLocation, this.xzoomoffset);\r\n            gl.uniform1f(this.yzoomoffsetLocation, this.yzoomoffset);\r\n          \r\n            // horizontal and vertical shift\r\n\r\n            gl.uniform1i(this.tealLocation, (this.imagespaceParameters.teal?1:0));\r\n            gl.uniform1i(this.xshiftLocation, this.cxshift);\r\n            gl.uniform1i(this.yshiftLocation, this.cyshift);\r\n          \r\n            // note vs is not bound to any VertexArray. The vertex shader emits all \r\n            // viewport pixel positions to the fragment shader, like ShaderToy does.\r\n            // gl.bindVertexArray(this.vertexArray!);\r\n\r\n            // ..this results in the\r\n            gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n\r\n            document.getElementById(\"cdiv\")!.innerHTML =\"draw \"+time+\"<br>xshift=\"+Math.round(this.cxshift)+\"<br>yshift=\"+this.cyshift+\"<br>\"+\"<br>xcoom=\"+this.xzoomoffset+\"<br>yzoom=\"+this.yzoomoffset+\"<br>\"+\" c.width=\"+gl.canvas.width+\r\n                                                        \" \"+\" c.height=\"+gl.canvas.height+\"<br>texture=\"+this.currentTexture+\" ny=\"+this.ny  ; // +\" \"+ccolor.r+\" \"+ccolor.g+\" \"+ccolor.b;       ;\r\n          } else \r\n            document.getElementById(\"cdiv\")!.innerHTML = \"Initializing textures, time=\"+time ; //+ \" this.textures.length=\"+this.textures!.length;\r\n          requestAnimationFrame(() => this.render(++time));\r\n      }\r\n}\r\n","import * as datgui from \"dat.gui\";                      // ext lib: datgui\r\nimport * as animationclock from \"./baseapp/animationclock\";     // own lib: frame counter\r\nimport * as mtls from \"./baseapp/mouselistener\";                // own lib: mouse/touhcpad\r\n\r\nimport * as camhandler from \"./baseapp/camhandler\"   // camera projection\r\nimport * as baseapp from \"./baseapp/baseapp\";        // base app for this\r\nimport * as scene from \"./scene/scene\"             // generic scene (interface)\r\n\r\nexport class Animation1 extends baseapp.BaseApp\r\n{\r\n    // all parameters in any scene\r\n    animation1Parameters: scene.TAnimation1Parameters = {\r\n        b:  this.baseappParameters,\r\n        texture: 'geotriangle2',\r\n        fov: 60,\r\n        typelight: 'point light',\r\n        sling: 117,\r\n        shininess: 0.1,\r\n        movetail: true\r\n      };  \r\n    ctime: number = new Date().getTime();\r\n    scene: scene.SceneInterface;                                                     \r\n    clock: animationclock.AnimationClock;\r\n    cam: camhandler.Camera|undefined;\r\n\r\n    doclear: boolean = true;\r\n    doTwglEnv: boolean = false;\r\n\r\n    constructor( cgl: WebGL2RenderingContext, capp: mtls.MouseListener | undefined , cscene: scene.SceneInterface, dictpar:Map<string,string>, cdiv: string)\r\n    {       \r\n        super(cgl, capp, dictpar,cdiv);\r\n        this.scene = cscene;\r\n        this.clock = new animationclock.AnimationClock();\r\n    }\r\n    \r\n    public initGUI(parameters: scene.TAnimation1Parameters): datgui.GUI\r\n    {\r\n        console.log(\"=> animation1 initGUI \"+parameters);\r\n        this.animation1Parameters = parameters ;\r\n        var gui = super.createGUI(this.animation1Parameters.b, this.animation1Parameters);   \r\n        this.scene.animationParameters =this.animation1Parameters;\r\n        this.scene.extendGUI(gui);         \r\n        return gui;\r\n    }\r\n\r\n    public main(gl:WebGL2RenderingContext,  dictpar:Map<string,string>)\r\n    {\r\n        if (this.scene.twglprograminfo!=null && this.scene.twglprograminfo!=undefined) \r\n           {\r\n              var pienv = this.twglprograminfo![0];\r\n              this.twglprograminfo = new Array(this.scene.twglprograminfo.length);\r\n              this.twglprograminfo[0]=pienv;\r\n\r\n               for (var j=0; j<this.scene.twglprograminfo.length; j++)\r\n                   if (this.scene.twglprograminfo[j]!=null && this.scene.twglprograminfo[j]!=undefined) \r\n                   {\r\n                     this.twglprograminfo![j]=this.scene.twglprograminfo[j];\r\n                   }\r\n           }\r\n      \r\n        this.cam=camhandler.Camera.createCamera(gl,dictpar,camhandler.Camera.CamYUp,  this.scene.scenesize, this.app!);\r\n        this.cam.zoominVelocity = 0.5;\r\n\r\n        if (this.scene.sceneenv>0)\r\n        {   \r\n            gl.useProgram(this.twglprograminfo![0].program);\r\n             this.skyboxLocation = gl.getUniformLocation(this.twglprograminfo![0].program, \"u_skybox\")!;\r\n            this.viewDirectionProjectionInverseLocation = gl.getUniformLocation(this.twglprograminfo![0].program, \"u_viewDirectionProjectionInverse\")!;\r\n            if (this.doTwglEnv) this.createEnvironmentMapGeoTwgl(gl);\r\n              else this.createEnvironmentMapGeo(gl); \r\n            this.createEnvironmentMapTexture(gl, this.scene.sceneenv, this.textureEnvReadyCallback)!;     \r\n        }  else \r\n        {      \r\n            this.scene.initScene(gl, this.animation1Parameters, dictpar, this.twglprograminfo![1], this.sceneReadyCallback);\r\n        }\r\n    }\r\n\r\n    sceneReadyCallback(err: any): void\r\n    { \r\n        var thisinstance = baseapp.instance!;\r\n        var ainstance = thisinstance as Animation1;\r\n        ainstance.scene.resizeCanvas(ainstance.gl!); \r\n        requestAnimationFrame(() => ainstance.render(ainstance.ctime)); //ainstance.clock.getTime(this.clock.frame))); \r\n    }\r\n\r\n    textureEnvReadyCallback(err: any, texture: WebGLTexture): void\r\n    { \r\n        var thisinstance = baseapp.instance!;\r\n        var ainstance = thisinstance as Animation1;\r\n        ainstance.scene.initScene(ainstance.gl!, ainstance.animation1Parameters, undefined, ainstance.twglprograminfo![1], ainstance.sceneReadyCallback);   \r\n    }\r\n\r\n    render(time: number) \r\n    {\r\n        var gl = this.gl!;\r\n        if (this.doclear)\r\n        { \r\n          gl.clear(gl.DEPTH_BUFFER_BIT);\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        }\r\n        this.scene.animationParameters = this.animation1Parameters;\r\n        this.scene.resizeCanvas(gl);  \r\n        gl.viewport(0, 0,  gl.canvas.width, gl.canvas.height);        \r\n         var cam: camhandler.Camera = this.cam!;\r\n        cam.CamHandlingYUp(gl, this.app!, 1.0, -1.0);   \r\n        if (this.scene.sceneenv>0)\r\n        {         \r\n            if (!this.scene.animationParameters?.b.move) this.cameraPosition =   [cam?.Position()[0],cam?.Position()[1],cam?.Position()[2]];\r\n              else   this.cameraPosition = (this.scene.animationParameters?.b.move)? [Math.cos(time * 0.005 * this.scene.animationParameters.b.speed), 0, \r\n                                                                                      Math.sin(time * 0.005 * this.scene.animationParameters.b.speed) ] : [ 1.0,0.0,0.0];\r\n            var  fieldOfViewRadians = this.animation1Parameters.fov * Math.PI / 180; \r\n            gl.useProgram(this.twglprograminfo![0].program);\r\n            gl.disable(gl.CULL_FACE);  \r\n            gl.depthFunc(gl.LEQUAL); \r\n            if (this.doTwglEnv) \r\n              {\r\n                this.renderenvironmentmapTwgl(gl, fieldOfViewRadians,  this.texture!); \r\n              }\r\n              else\r\n              { \r\n                this.renderenvironmentmap(gl, fieldOfViewRadians, { invproj: this.viewDirectionProjectionInverseLocation!, loc:this.skyboxLocation! }, this.texture!);\r\n              } \r\n        }    \r\n        if (this.twglprograminfo![1] != undefined && this.twglprograminfo![1] != null )       \r\n        {  \r\n            gl.useProgram(this.twglprograminfo![1].program);\r\n            gl.enable(gl.DEPTH_TEST); // obscure vertices behind other vertices\r\n            gl.enable(gl.CULL_FACE);  // only show left-turned triangles\r\n            this.scene.drawScene(gl, cam, time);\r\n        }\r\n        requestAnimationFrame(() => this.render(this.clock.getTime(this.clock.frame)));\r\n    } \r\n}\r\n","import * as twgl from \"twgl.js\";          // Greg's work\r\nimport * as mtls from \"./baseapp/mouselistener\";  // connect events for buttons and wheel\r\nimport * as baseapp from \"./baseapp/baseapp\";\r\nimport * as camhandler from \"./baseapp/camhandler\";  \r\n\r\nimport  * as datgui from \"dat.gui\";\r\n\r\nexport class skyboxcube extends baseapp.BaseApp\r\n{\r\n    public constructor(cgl: WebGL2RenderingContext | undefined | null, capp: mtls.MouseListener | undefined , dictpar:Map<string,string>, cdiv: string)\r\n    {\r\n        super(cgl, capp, dictpar, cdiv);\r\n        var pi = this.twglprograminfo![0];\r\n        this.twglprograminfo=new Array(2);\r\n        this.twglprograminfo[0] = pi;\r\n        this.twglprograminfo![1] = twgl.createProgramInfo(cgl!, [this.vsMirrorCube, this.fsMirrorCube]);  \r\n    }\r\n\r\n    //-----------------------------------------------------------------------------------------------------------------\r\n\r\n    skyboxCubeParameters = {\r\n      movecube: true,\r\n      moveenv: true,      \r\n      fieldOfViewDegrees:0,      // perspective aperture\r\n      radiusCam: 0,               // perspective fisheye\r\n      angVelocityCam:  0,   // camera rotation velocity\r\n      angVelocityCube: 0          // mirror cube rotation velocity\r\n    };   \r\n\r\n    vaoCube: WebGLVertexArrayObject | undefined;\r\n    reflectingCubeBufferInfo: twgl.BufferInfo | undefined;\r\n   // texture: WebGLTexture| undefined;\r\n    cam: camhandler.Camera|undefined;\r\n\r\n\r\n    worldMatrix: twgl.m4.Mat4 | undefined;\r\n    viewMatrix: twgl.m4.Mat4 | undefined;\r\n    projectionMatrix: twgl.m4.Mat4 | undefined;\r\n    viewDirectionMatrix: twgl.m4.Mat4 | undefined;\r\n\r\n  //  fieldOfViewRadians : number = this.skyboxCubeParameters.fieldOfViewDegrees * Math.PI / 180;\r\n   \r\n    protected createReflectingCubeGeo(gl: WebGL2RenderingContext)\r\n    {\r\n      this.reflectingCubeBufferInfo = twgl.primitives.createCubeBufferInfo(gl, 1.2);\r\n      this.vaoCube = twgl.createVAOFromBufferInfo(gl,this.twglprograminfo![1], this.reflectingCubeBufferInfo)!;\r\n    }\r\n\r\n    public main(gl: WebGL2RenderingContext, dictpar:Map<string,string>) \r\n    {   \r\n      // http://127.0.0.1:1234/index.html?skyboxcube&fov=22&movecube=true&moveenv=true\r\n      \r\n      var b: string|null|undefined =\"\"; \r\n      b=dictpar.get(\"movecube\");  if (b) this.skyboxCubeParameters.movecube=(b==\"true\");\r\n      b=dictpar.get(\"moveenv\"); if (b) this.skyboxCubeParameters.moveenv=(b==\"true\") \r\n      b=dictpar.get(\"fov\"); if (b) this.skyboxCubeParameters.fieldOfViewDegrees=+b!; \r\n      b=dictpar.get(\"vele\"); if(b) this.skyboxCubeParameters.angVelocityCam=+b!;\r\n      b=dictpar.get(\"velc\"); if(b)  this.skyboxCubeParameters.angVelocityCube=+b!;\r\n\r\n      // https://webgl2fundamentals.org/webgl/lessons/webgl-skybox.html\r\n\r\n \r\n      // super.maininfos(gl, dictpar, [ {vs:this.vsEnvironmentMap, fs:this.fsEnvironmentMap}, {vs:this.vsMirrorCube,fs:this.fsMirrorCube}]);\r\n      twgl.setAttributePrefix(\"a_\");  // naming convention for vertex positions and normals in shaders used when twgl will organize uniforms\r\n      this.createReflectingCubeGeo(gl);         \r\n      this.createEnvironmentMapGeoTwgl(gl);         \r\n      this.texture =  this.createEnvironmentMapTexture(gl, 1,this.textureReadyCallback)!;\r\n      \r\n      this.cam=camhandler.Camera.createCamera(gl,dictpar,camhandler.Camera.CamYUp, 0.5, this.app!);\r\n      this.cam.zoominVelocity = 0.5;\r\n      this.cam.setRadius(6.0);\r\n      this.cam.translateEye([6.0,0,0]);\r\n\r\n      requestAnimationFrame(() => this.render(0));           \r\n    }\r\n\r\n    textureReadyCallback(err: any, texture: WebGLTexture): void\r\n    { \r\n      console.log(\"SkyboxCube Environment texture isready.\");\r\n    }\r\n \r\n\r\n    public initGUI(parameters: {movecube:boolean, moveenv:boolean,fieldOfViewDegrees:number,radiusCam:number,angVelocityCam:number,angVelocityCube: number})\r\n    {\r\n        this.skyboxCubeParameters= parameters;\r\n     \r\n        // park the dat.gui box in the linksdiv below the links, in closed state\r\n        var gui = new datgui.GUI( { autoPlace: false } );\r\n        gui.domElement.id = 'gui_drawimagespace';\r\n        document.getElementById(\"linksdiv\")!.append( gui.domElement);\r\n        gui.close();\r\n\r\n        // connect viewmodel\r\n        gui.remember(this.skyboxCubeParameters);\r\n      \r\n        // Checkbox forward move animation on/off\r\n        gui.add(this.skyboxCubeParameters, 'movecube');\r\n        // Checkbox tail animation on/off\r\n        gui.add(this.skyboxCubeParameters, 'moveenv');\r\n       \r\n        // Slider for field of view\r\n        gui.add(this.skyboxCubeParameters, 'fieldOfViewDegrees').min(20.0).max(80.0).step(0.02);\r\n       // Slider for animation speed\r\n        gui.add(this.skyboxCubeParameters, 'radiusCam').min(0.1).max(20.0).step(0.02);\r\n       // Slider for animation speed\r\n        gui.add(this.skyboxCubeParameters, 'angVelocityCam').min(0.0001).max(0.01).step(0.0001);\r\n      // Slider for animation speed of cube\r\n        gui.add(this.skyboxCubeParameters, 'angVelocityCube').min(0.001).max(0.01).step(0.0001);\r\n     \r\n        gui.updateDisplay();\r\n        return gui;\r\n      }\r\n  \r\n\r\n      private render( mstime: number) {\r\n      \r\n        var gl = this.gl!;\r\n        twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);       \r\n        gl.enable(gl.CULL_FACE);\r\n       // gl.enable(gl.DEPTH_TEST);     \r\n       // gl.depthFunc(gl.LEQUAL);        \r\n    \r\n        // by default, rotate camera position.\r\n        this.cameraPosition = (this.skyboxCubeParameters.moveenv)? [Math.cos(mstime * this.skyboxCubeParameters.angVelocityCam) * this.skyboxCubeParameters.radiusCam, 0, \r\n                              Math.sin(mstime * this.skyboxCubeParameters.angVelocityCam) * this.skyboxCubeParameters.radiusCam] : [this.skyboxCubeParameters.radiusCam,0.0,0.0];\r\n   \r\n        // the projected direction of view is inverted and passed to environment shader as u_viewDirectionProjectionInverse to address the cube map texture\r\n        // computeprojectionmatrices will find projection, view and direction matrix, invert it for the Cubemap \r\n        var fieldOfViewRadians = this.skyboxCubeParameters.fieldOfViewDegrees * Math.PI / 180;\r\n      \r\n        // field of view angle determines how narrow or wide the camera view is\r\n        // aperture will be normalized to width of viewport.\r\n        if(this.cam)\r\n        {\r\n           var cam: camhandler.Camera = this.cam!;\r\n          cam.rotationVelocity = this.skyboxCubeParameters.angVelocityCam/(Math.PI/2.0-fieldOfViewRadians!);\r\n\r\n          cam.CamHandlingYUp(gl, this.app!, -1.0, -1.0);  \r\n          cam.ReportEye();\r\n          // override cameraPosition by mouse camera position when moveenv checked off\r\n          if (!this.skyboxCubeParameters.moveenv)\r\n            this.cameraPosition = this.cam?.Position()!;\r\n        }\r\n \r\n        var viewDirectionProjectionInverseMatrix = twgl.m4.inverse(this.computeprojectionmatrices(gl, fieldOfViewRadians));\r\n      \r\n        // Rotate the cube around the x axis\r\n        if (this.skyboxCubeParameters.movecube)\r\n          this.worldMatrix = twgl.m4.axisRotation( [1,0,0] as twgl.v3.Vec3 , mstime * this.skyboxCubeParameters.angVelocityCube);\r\n        else \r\n          this.worldMatrix = twgl.m4.translation([0,0,0]); // twgl.m4.identity();\r\n\r\n        // draw the environment\r\n        gl.useProgram(this.twglprograminfo![0].program);\r\n        gl.bindVertexArray(this.vaoEnvironment!);\r\n        twgl.setUniforms( this.twglprograminfo![0], { \r\n          u_viewDirectionProjectionInverse: viewDirectionProjectionInverseMatrix,\r\n          u_skybox: this.texture,\r\n        });\r\n        twgl.drawBufferInfo(gl, this.environmentBufferInfo!);  \r\n\r\n           \r\n        // Build a view matrix for the mirror cube.\r\n        var aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n        this.projectionMatrix = twgl.m4.perspective(fieldOfViewRadians, aspect, 1, 2000);\r\n        // Build a view matrix.\r\n        var up = [0, 1, 0];\r\n        var cameraMatrix = twgl.m4.lookAt(this.cameraPosition, this.cameraTarget, up);\r\n        this.viewMatrix = twgl.m4.inverse(cameraMatrix);\r\n     \r\n\r\n        // draw the mirror cube\r\n        if (this.viewMatrix==undefined)this.viewMatrix=twgl.m4.identity();\r\n        if (this.projectionMatrix==undefined)this.projectionMatrix=twgl.m4.identity();\r\n        gl.useProgram(this.twglprograminfo![1].program);      \r\n      //  gl.depthFunc(gl.LESS);  // use the default depth test\r\n        gl.bindVertexArray(this.vaoCube!);  \r\n        twgl.setUniforms(this.twglprograminfo![1]!, {\r\n          u_world: this.worldMatrix,\r\n          u_view: this.viewMatrix,\r\n          u_projection: this.projectionMatrix,\r\n          u_texture: this.texture,\r\n          u_worldCameraPosition: this.cameraPosition,\r\n        });\r\n        twgl.drawBufferInfo(gl, this.reflectingCubeBufferInfo!);\r\n\r\n        //next frame\r\n        requestAnimationFrame(() => this.render(++mstime));   \r\n    }  \r\n\r\n    //--- Shaders for the mirrorCoube -------------------------------------------------------------------------\r\n\r\n    vsMirrorCube = `#version 300 es\r\n    \r\n    in vec4 a_position;\r\n    in vec3 a_normal;\r\n    \r\n    uniform mat4 u_projection;\r\n    uniform mat4 u_view;\r\n    uniform mat4 u_world;\r\n    \r\n    out vec3 v_worldPosition;\r\n    out vec3 v_worldNormal;\r\n    \r\n    void main() {\r\n      // Multiply the position by the matrix.\r\n      gl_Position = u_projection * u_view * u_world * a_position;\r\n    \r\n      // send the view position to the fragment shader\r\n      v_worldPosition = (u_world * a_position).xyz;\r\n    \r\n      // orient the normals and pass to the fragment shader\r\n      v_worldNormal = mat3(u_world) * a_normal;\r\n    }\r\n    `;\r\n    \r\n    fsMirrorCube = `#version 300 es\r\n    precision highp float;\r\n    \r\n    // Passed in from the vertex shader.\r\n    in vec3 v_worldPosition;\r\n    in vec3 v_worldNormal;\r\n    \r\n    // The texture.\r\n    uniform samplerCube u_texture;\r\n    \r\n    // The position of the camera\r\n    uniform vec3 u_worldCameraPosition;\r\n    \r\n    // we need to declare an output for the fragment shader\r\n    out vec4 outColor;\r\n    \r\n    void main() {\r\n      vec3 worldNormal = normalize(v_worldNormal);\r\n      vec3 eyeToSurfaceDir = normalize(v_worldPosition - u_worldCameraPosition);\r\n      vec3 direction = reflect(eyeToSurfaceDir,worldNormal);\r\n    \r\n      outColor = texture(u_texture, direction);\r\n    }\r\n    `;\r\n}\r\n","!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var n=t();for(var a in n)(\"object\"==typeof exports?exports:e)[a]=n[a]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/\",n(n.s=0)}({\"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! exports provided: OBJ, Attribute, DuplicateAttributeException, Layout, Material, MaterialLibrary, Mesh, TYPES, downloadModels, downloadMeshes, initMeshBuffers, deleteMeshBuffers, version */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OBJ\", function() { return OBJ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mesh */ \"./src/mesh.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Mesh\", function() { return _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\\n\\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./material */ \"./src/material.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Material\", function() { return _material__WEBPACK_IMPORTED_MODULE_1__[\"Material\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MaterialLibrary\", function() { return _material__WEBPACK_IMPORTED_MODULE_1__[\"MaterialLibrary\"]; });\\n\\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ \"./src/layout.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Attribute\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"Attribute\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DuplicateAttributeException\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"DuplicateAttributeException\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Layout\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"Layout\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TYPES\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"TYPES\"]; });\\n\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"downloadModels\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadModels\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"downloadMeshes\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadMeshes\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"initMeshBuffers\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"initMeshBuffers\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deleteMeshBuffers\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"deleteMeshBuffers\"]; });\\n\\n\\n\\n\\n\\nconst version = \"2.0.3\";\\nconst OBJ = {\\n    Attribute: _layout__WEBPACK_IMPORTED_MODULE_2__[\"Attribute\"],\\n    DuplicateAttributeException: _layout__WEBPACK_IMPORTED_MODULE_2__[\"DuplicateAttributeException\"],\\n    Layout: _layout__WEBPACK_IMPORTED_MODULE_2__[\"Layout\"],\\n    Material: _material__WEBPACK_IMPORTED_MODULE_1__[\"Material\"],\\n    MaterialLibrary: _material__WEBPACK_IMPORTED_MODULE_1__[\"MaterialLibrary\"],\\n    Mesh: _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\\n    TYPES: _layout__WEBPACK_IMPORTED_MODULE_2__[\"TYPES\"],\\n    downloadModels: _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadModels\"],\\n    downloadMeshes: _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadMeshes\"],\\n    initMeshBuffers: _utils__WEBPACK_IMPORTED_MODULE_3__[\"initMeshBuffers\"],\\n    deleteMeshBuffers: _utils__WEBPACK_IMPORTED_MODULE_3__[\"deleteMeshBuffers\"],\\n    version,\\n};\\n/**\\n * @namespace\\n */\\n\\n\\n\\n//# sourceURL=webpack:///./src/index.ts?')},\"./src/layout.ts\":\n/*!***********************!*\\\n  !*** ./src/layout.ts ***!\n  \\***********************/\n/*! exports provided: TYPES, DuplicateAttributeException, Attribute, Layout */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPES\", function() { return TYPES; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DuplicateAttributeException\", function() { return DuplicateAttributeException; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Attribute\", function() { return Attribute; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Layout\", function() { return Layout; });\\nvar TYPES;\\n(function (TYPES) {\\n    TYPES[\"BYTE\"] = \"BYTE\";\\n    TYPES[\"UNSIGNED_BYTE\"] = \"UNSIGNED_BYTE\";\\n    TYPES[\"SHORT\"] = \"SHORT\";\\n    TYPES[\"UNSIGNED_SHORT\"] = \"UNSIGNED_SHORT\";\\n    TYPES[\"FLOAT\"] = \"FLOAT\";\\n})(TYPES || (TYPES = {}));\\n/**\\n * An exception for when two or more of the same attributes are found in the\\n * same layout.\\n * @private\\n */\\nclass DuplicateAttributeException extends Error {\\n    /**\\n     * Create a DuplicateAttributeException\\n     * @param {Attribute} attribute - The attribute that was found more than\\n     *        once in the {@link Layout}\\n     */\\n    constructor(attribute) {\\n        super(`found duplicate attribute: ${attribute.key}`);\\n    }\\n}\\n/**\\n * Represents how a vertex attribute should be packed into an buffer.\\n * @private\\n */\\nclass Attribute {\\n    /**\\n     * Create an attribute. Do not call this directly, use the predefined\\n     * constants.\\n     * @param {string} key - The name of this attribute as if it were a key in\\n     *        an Object. Use the camel case version of the upper snake case\\n     *        const name.\\n     * @param {number} size - The number of components per vertex attribute.\\n     *        Must be 1, 2, 3, or 4.\\n     * @param {string} type - The data type of each component for this\\n     *        attribute. Possible values:<br/>\\n     *        \"BYTE\": signed 8-bit integer, with values in [-128, 127]<br/>\\n     *        \"SHORT\": signed 16-bit integer, with values in\\n     *            [-32768, 32767]<br/>\\n     *        \"UNSIGNED_BYTE\": unsigned 8-bit integer, with values in\\n     *            [0, 255]<br/>\\n     *        \"UNSIGNED_SHORT\": unsigned 16-bit integer, with values in\\n     *            [0, 65535]<br/>\\n     *        \"FLOAT\": 32-bit floating point number\\n     * @param {boolean} normalized - Whether integer data values should be\\n     *        normalized when being casted to a float.<br/>\\n     *        If true, signed integers are normalized to [-1, 1].<br/>\\n     *        If true, unsigned integers are normalized to [0, 1].<br/>\\n     *        For type \"FLOAT\", this parameter has no effect.\\n     */\\n    constructor(key, size, type, normalized = false) {\\n        this.key = key;\\n        this.size = size;\\n        this.type = type;\\n        this.normalized = normalized;\\n        switch (type) {\\n            case \"BYTE\":\\n            case \"UNSIGNED_BYTE\":\\n                this.sizeOfType = 1;\\n                break;\\n            case \"SHORT\":\\n            case \"UNSIGNED_SHORT\":\\n                this.sizeOfType = 2;\\n                break;\\n            case \"FLOAT\":\\n                this.sizeOfType = 4;\\n                break;\\n            default:\\n                throw new Error(`Unknown gl type: ${type}`);\\n        }\\n        this.sizeInBytes = this.sizeOfType * size;\\n    }\\n}\\n/**\\n * A class to represent the memory layout for a vertex attribute array. Used by\\n * {@link Mesh}\\'s TBD(...) method to generate a packed array from mesh data.\\n * <p>\\n * Layout can sort of be thought of as a C-style struct declaration.\\n * {@link Mesh}\\'s TBD(...) method will use the {@link Layout} instance to\\n * pack an array in the given attribute order.\\n * <p>\\n * Layout also is very helpful when calling a WebGL context\\'s\\n * <code>vertexAttribPointer</code> method. If you\\'ve created a buffer using\\n * a Layout instance, then the same Layout instance can be used to determine\\n * the size, type, normalized, stride, and offset parameters for\\n * <code>vertexAttribPointer</code>.\\n * <p>\\n * For example:\\n * <pre><code>\\n *\\n * const index = glctx.getAttribLocation(shaderProgram, \"pos\");\\n * glctx.vertexAttribPointer(\\n *   layout.position.size,\\n *   glctx[layout.position.type],\\n *   layout.position.normalized,\\n *   layout.position.stride,\\n *   layout.position.offset);\\n * </code></pre>\\n * @see {@link Mesh}\\n */\\nclass Layout {\\n    /**\\n     * Create a Layout object. This constructor will throw if any duplicate\\n     * attributes are given.\\n     * @param {Array} ...attributes - An ordered list of attributes that\\n     *        describe the desired memory layout for each vertex attribute.\\n     *        <p>\\n     *\\n     * @see {@link Mesh}\\n     */\\n    constructor(...attributes) {\\n        this.attributes = attributes;\\n        this.attributeMap = {};\\n        let offset = 0;\\n        let maxStrideMultiple = 0;\\n        for (const attribute of attributes) {\\n            if (this.attributeMap[attribute.key]) {\\n                throw new DuplicateAttributeException(attribute);\\n            }\\n            // Add padding to satisfy WebGL\\'s requirement that all\\n            // vertexAttribPointer calls have an offset that is a multiple of\\n            // the type size.\\n            if (offset % attribute.sizeOfType !== 0) {\\n                offset += attribute.sizeOfType - (offset % attribute.sizeOfType);\\n                console.warn(\"Layout requires padding before \" + attribute.key + \" attribute\");\\n            }\\n            this.attributeMap[attribute.key] = {\\n                attribute: attribute,\\n                size: attribute.size,\\n                type: attribute.type,\\n                normalized: attribute.normalized,\\n                offset: offset,\\n            };\\n            offset += attribute.sizeInBytes;\\n            maxStrideMultiple = Math.max(maxStrideMultiple, attribute.sizeOfType);\\n        }\\n        // Add padding to the end to satisfy WebGL\\'s requirement that all\\n        // vertexAttribPointer calls have a stride that is a multiple of the\\n        // type size. Because we\\'re putting differently sized attributes into\\n        // the same buffer, it must be padded to a multiple of the largest\\n        // type size.\\n        if (offset % maxStrideMultiple !== 0) {\\n            offset += maxStrideMultiple - (offset % maxStrideMultiple);\\n            console.warn(\"Layout requires padding at the back\");\\n        }\\n        this.stride = offset;\\n        for (const attribute of attributes) {\\n            this.attributeMap[attribute.key].stride = this.stride;\\n        }\\n    }\\n}\\n// Geometry attributes\\n/**\\n * Attribute layout to pack a vertex\\'s x, y, & z as floats\\n *\\n * @see {@link Layout}\\n */\\nLayout.POSITION = new Attribute(\"position\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s normal\\'s x, y, & z as floats\\n *\\n * @see {@link Layout}\\n */\\nLayout.NORMAL = new Attribute(\"normal\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s normal\\'s x, y, & z as floats.\\n * <p>\\n * This value will be computed on-the-fly based on the texture coordinates.\\n * If no texture coordinates are available, the generated value will default to\\n * 0, 0, 0.\\n *\\n * @see {@link Layout}\\n */\\nLayout.TANGENT = new Attribute(\"tangent\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s normal\\'s bitangent x, y, & z as floats.\\n * <p>\\n * This value will be computed on-the-fly based on the texture coordinates.\\n * If no texture coordinates are available, the generated value will default to\\n * 0, 0, 0.\\n * @see {@link Layout}\\n */\\nLayout.BITANGENT = new Attribute(\"bitangent\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s texture coordinates\\' u & v as floats\\n *\\n * @see {@link Layout}\\n */\\nLayout.UV = new Attribute(\"uv\", 2, TYPES.FLOAT);\\n// Material attributes\\n/**\\n * Attribute layout to pack an unsigned short to be interpreted as a the index\\n * into a {@link Mesh}\\'s materials list.\\n * <p>\\n * The intention of this value is to send all of the {@link Mesh}\\'s materials\\n * into multiple shader uniforms and then reference the current one by this\\n * vertex attribute.\\n * <p>\\n * example glsl code:\\n *\\n * <pre><code>\\n *  // this is bound using MATERIAL_INDEX\\n *  attribute int materialIndex;\\n *\\n *  struct Material {\\n *    vec3 diffuse;\\n *    vec3 specular;\\n *    vec3 specularExponent;\\n *  };\\n *\\n *  uniform Material materials[MAX_MATERIALS];\\n *\\n *  // ...\\n *\\n *  vec3 diffuse = materials[materialIndex];\\n *\\n * </code></pre>\\n * TODO: More description & test to make sure subscripting by attributes even\\n * works for webgl\\n *\\n * @see {@link Layout}\\n */\\nLayout.MATERIAL_INDEX = new Attribute(\"materialIndex\", 1, TYPES.SHORT);\\nLayout.MATERIAL_ENABLED = new Attribute(\"materialEnabled\", 1, TYPES.UNSIGNED_SHORT);\\nLayout.AMBIENT = new Attribute(\"ambient\", 3, TYPES.FLOAT);\\nLayout.DIFFUSE = new Attribute(\"diffuse\", 3, TYPES.FLOAT);\\nLayout.SPECULAR = new Attribute(\"specular\", 3, TYPES.FLOAT);\\nLayout.SPECULAR_EXPONENT = new Attribute(\"specularExponent\", 3, TYPES.FLOAT);\\nLayout.EMISSIVE = new Attribute(\"emissive\", 3, TYPES.FLOAT);\\nLayout.TRANSMISSION_FILTER = new Attribute(\"transmissionFilter\", 3, TYPES.FLOAT);\\nLayout.DISSOLVE = new Attribute(\"dissolve\", 1, TYPES.FLOAT);\\nLayout.ILLUMINATION = new Attribute(\"illumination\", 1, TYPES.UNSIGNED_SHORT);\\nLayout.REFRACTION_INDEX = new Attribute(\"refractionIndex\", 1, TYPES.FLOAT);\\nLayout.SHARPNESS = new Attribute(\"sharpness\", 1, TYPES.FLOAT);\\nLayout.MAP_DIFFUSE = new Attribute(\"mapDiffuse\", 1, TYPES.SHORT);\\nLayout.MAP_AMBIENT = new Attribute(\"mapAmbient\", 1, TYPES.SHORT);\\nLayout.MAP_SPECULAR = new Attribute(\"mapSpecular\", 1, TYPES.SHORT);\\nLayout.MAP_SPECULAR_EXPONENT = new Attribute(\"mapSpecularExponent\", 1, TYPES.SHORT);\\nLayout.MAP_DISSOLVE = new Attribute(\"mapDissolve\", 1, TYPES.SHORT);\\nLayout.ANTI_ALIASING = new Attribute(\"antiAliasing\", 1, TYPES.UNSIGNED_SHORT);\\nLayout.MAP_BUMP = new Attribute(\"mapBump\", 1, TYPES.SHORT);\\nLayout.MAP_DISPLACEMENT = new Attribute(\"mapDisplacement\", 1, TYPES.SHORT);\\nLayout.MAP_DECAL = new Attribute(\"mapDecal\", 1, TYPES.SHORT);\\nLayout.MAP_EMISSIVE = new Attribute(\"mapEmissive\", 1, TYPES.SHORT);\\n\\n\\n//# sourceURL=webpack:///./src/layout.ts?')},\"./src/material.ts\":\n/*!*************************!*\\\n  !*** ./src/material.ts ***!\n  \\*************************/\n/*! exports provided: Material, MaterialLibrary */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Material\", function() { return Material; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaterialLibrary\", function() { return MaterialLibrary; });\\n/**\\n * The Material class.\\n */\\nclass Material {\\n    constructor(name) {\\n        this.name = name;\\n        /**\\n         * Constructor\\n         * @param {String} name the unique name of the material\\n         */\\n        // The values for the following attibutes\\n        // are an array of R, G, B normalized values.\\n        // Ka - Ambient Reflectivity\\n        this.ambient = [0, 0, 0];\\n        // Kd - Defuse Reflectivity\\n        this.diffuse = [0, 0, 0];\\n        // Ks\\n        this.specular = [0, 0, 0];\\n        // Ke\\n        this.emissive = [0, 0, 0];\\n        // Tf\\n        this.transmissionFilter = [0, 0, 0];\\n        // d\\n        this.dissolve = 0;\\n        // valid range is between 0 and 1000\\n        this.specularExponent = 0;\\n        // either d or Tr; valid values are normalized\\n        this.transparency = 0;\\n        // illum - the enum of the illumination model to use\\n        this.illumination = 0;\\n        // Ni - Set to \"normal\" (air).\\n        this.refractionIndex = 1;\\n        // sharpness\\n        this.sharpness = 0;\\n        // map_Kd\\n        this.mapDiffuse = emptyTextureOptions();\\n        // map_Ka\\n        this.mapAmbient = emptyTextureOptions();\\n        // map_Ks\\n        this.mapSpecular = emptyTextureOptions();\\n        // map_Ns\\n        this.mapSpecularExponent = emptyTextureOptions();\\n        // map_d\\n        this.mapDissolve = emptyTextureOptions();\\n        // map_aat\\n        this.antiAliasing = false;\\n        // map_bump or bump\\n        this.mapBump = emptyTextureOptions();\\n        // disp\\n        this.mapDisplacement = emptyTextureOptions();\\n        // decal\\n        this.mapDecal = emptyTextureOptions();\\n        // map_Ke\\n        this.mapEmissive = emptyTextureOptions();\\n        // refl - when the reflection type is a cube, there will be multiple refl\\n        //        statements for each side of the cube. If it\\'s a spherical\\n        //        reflection, there should only ever be one.\\n        this.mapReflections = [];\\n    }\\n}\\nconst SENTINEL_MATERIAL = new Material(\"sentinel\");\\n/**\\n * https://en.wikipedia.org/wiki/Wavefront_.obj_file\\n * http://paulbourke.net/dataformats/mtl/\\n */\\nclass MaterialLibrary {\\n    constructor(data) {\\n        this.data = data;\\n        /**\\n         * Constructs the Material Parser\\n         * @param mtlData the MTL file contents\\n         */\\n        this.currentMaterial = SENTINEL_MATERIAL;\\n        this.materials = {};\\n        this.parse();\\n    }\\n    /* eslint-disable camelcase */\\n    /* the function names here disobey camelCase conventions\\n     to make parsing/routing easier. see the parse function\\n     documentation for more information. */\\n    /**\\n     * Creates a new Material object and adds to the registry.\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_newmtl(tokens) {\\n        const name = tokens[0];\\n        // console.info(\\'Parsing new Material:\\', name);\\n        this.currentMaterial = new Material(name);\\n        this.materials[name] = this.currentMaterial;\\n    }\\n    /**\\n     * See the documenation for parse_Ka below for a better understanding.\\n     *\\n     * Given a list of possible color tokens, returns an array of R, G, and B\\n     * color values.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     * @return {*} a 3 element array containing the R, G, and B values\\n     * of the color.\\n     */\\n    parseColor(tokens) {\\n        if (tokens[0] == \"spectral\") {\\n            throw new Error(\"The MTL parser does not support spectral curve files. You will \" +\\n                \"need to convert the MTL colors to either RGB or CIEXYZ.\");\\n        }\\n        if (tokens[0] == \"xyz\") {\\n            throw new Error(\"The MTL parser does not currently support XYZ colors. Either convert the \" +\\n                \"XYZ values to RGB or create an issue to add support for XYZ\");\\n        }\\n        // from my understanding of the spec, RGB values at this point\\n        // will either be 3 floats or exactly 1 float, so that\\'s the check\\n        // that i\\'m going to perform here\\n        if (tokens.length == 3) {\\n            const [x, y, z] = tokens;\\n            return [parseFloat(x), parseFloat(y), parseFloat(z)];\\n        }\\n        // Since tokens at this point has a length of 3, we\\'re going to assume\\n        // it\\'s exactly 1, skipping the check for 2.\\n        const value = parseFloat(tokens[0]);\\n        // in this case, all values are equivalent\\n        return [value, value, value];\\n    }\\n    /**\\n     * Parse the ambient reflectivity\\n     *\\n     * A Ka directive can take one of three forms:\\n     *   - Ka r g b\\n     *   - Ka spectral file.rfl\\n     *   - Ka xyz x y z\\n     * These three forms are mutually exclusive in that only one\\n     * declaration can exist per material. It is considered a syntax\\n     * error otherwise.\\n     *\\n     * The \"Ka\" form specifies the ambient reflectivity using RGB values.\\n     * The \"g\" and \"b\" values are optional. If only the \"r\" value is\\n     * specified, then the \"g\" and \"b\" values are assigned the value of\\n     * \"r\". Values are normally in the range 0.0 to 1.0. Values outside\\n     * of this range increase or decrease the reflectivity accordingly.\\n     *\\n     * The \"Ka spectral\" form specifies the ambient reflectivity using a\\n     * spectral curve. \"file.rfl\" is the name of the \".rfl\" file containing\\n     * the curve data. \"factor\" is an optional argument which is a multiplier\\n     * for the values in the .rfl file and defaults to 1.0 if not specified.\\n     *\\n     * The \"Ka xyz\" form specifies the ambient reflectivity using CIEXYZ values.\\n     * \"x y z\" are the values of the CIEXYZ color space. The \"y\" and \"z\" arguments\\n     * are optional and take on the value of the \"x\" component if only \"x\" is\\n     * specified. The \"x y z\" values are normally in the range of 0.0 to 1.0 and\\n     * increase or decrease ambient reflectivity accordingly outside of that\\n     * range.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ka(tokens) {\\n        this.currentMaterial.ambient = this.parseColor(tokens);\\n    }\\n    /**\\n     * Diffuse Reflectivity\\n     *\\n     * Similar to the Ka directive. Simply replace \"Ka\" with \"Kd\" and the rules\\n     * are the same\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Kd(tokens) {\\n        this.currentMaterial.diffuse = this.parseColor(tokens);\\n    }\\n    /**\\n     * Spectral Reflectivity\\n     *\\n     * Similar to the Ka directive. Simply replace \"Ks\" with \"Kd\" and the rules\\n     * are the same\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ks(tokens) {\\n        this.currentMaterial.specular = this.parseColor(tokens);\\n    }\\n    /**\\n     * Emissive\\n     *\\n     * The amount and color of light emitted by the object.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ke(tokens) {\\n        this.currentMaterial.emissive = this.parseColor(tokens);\\n    }\\n    /**\\n     * Transmission Filter\\n     *\\n     * Any light passing through the object is filtered by the transmission\\n     * filter, which only allows specific colors to pass through. For example, Tf\\n     * 0 1 0 allows all of the green to pass through and filters out all of the\\n     * red and blue.\\n     *\\n     * Similar to the Ka directive. Simply replace \"Ks\" with \"Tf\" and the rules\\n     * are the same\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Tf(tokens) {\\n        this.currentMaterial.transmissionFilter = this.parseColor(tokens);\\n    }\\n    /**\\n     * Specifies the dissolve for the current material.\\n     *\\n     * Statement: d [-halo] `factor`\\n     *\\n     * Example: \"d 0.5\"\\n     *\\n     * The factor is the amount this material dissolves into the background. A\\n     * factor of 1.0 is fully opaque. This is the default when a new material is\\n     * created. A factor of 0.0 is fully dissolved (completely transparent).\\n     *\\n     * Unlike a real transparent material, the dissolve does not depend upon\\n     * material thickness nor does it have any spectral character. Dissolve works\\n     * on all illumination models.\\n     *\\n     * The dissolve statement allows for an optional \"-halo\" flag which indicates\\n     * that a dissolve is dependent on the surface orientation relative to the\\n     * viewer. For example, a sphere with the following dissolve, \"d -halo 0.0\",\\n     * will be fully dissolved at its center and will appear gradually more opaque\\n     * toward its edge.\\n     *\\n     * \"factor\" is the minimum amount of dissolve applied to the material. The\\n     * amount of dissolve will vary between 1.0 (fully opaque) and the specified\\n     * \"factor\". The formula is:\\n     *\\n     *    dissolve = 1.0 - (N*v)(1.0-factor)\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_d(tokens) {\\n        // this ignores the -halo option as I can\\'t find any documentation on what\\n        // it\\'s supposed to be.\\n        this.currentMaterial.dissolve = parseFloat(tokens.pop() || \"0\");\\n    }\\n    /**\\n     * The \"illum\" statement specifies the illumination model to use in the\\n     * material. Illumination models are mathematical equations that represent\\n     * various material lighting and shading effects.\\n     *\\n     * The illumination number can be a number from 0 to 10. The following are\\n     * the list of illumination enumerations and their summaries:\\n     * 0. Color on and Ambient off\\n     * 1. Color on and Ambient on\\n     * 2. Highlight on\\n     * 3. Reflection on and Ray trace on\\n     * 4. Transparency: Glass on, Reflection: Ray trace on\\n     * 5. Reflection: Fresnel on and Ray trace on\\n     * 6. Transparency: Refraction on, Reflection: Fresnel off and Ray trace on\\n     * 7. Transparency: Refraction on, Reflection: Fresnel on and Ray trace on\\n     * 8. Reflection on and Ray trace off\\n     * 9. Transparency: Glass on, Reflection: Ray trace off\\n     * 10. Casts shadows onto invisible surfaces\\n     *\\n     * Example: \"illum 2\" to specify the \"Highlight on\" model\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_illum(tokens) {\\n        this.currentMaterial.illumination = parseInt(tokens[0]);\\n    }\\n    /**\\n     * Optical Density (AKA Index of Refraction)\\n     *\\n     * Statement: Ni `index`\\n     *\\n     * Example: Ni 1.0\\n     *\\n     * Specifies the optical density for the surface. `index` is the value\\n     * for the optical density. The values can range from 0.001 to 10.  A value of\\n     * 1.0 means that light does not bend as it passes through an object.\\n     * Increasing the optical_density increases the amount of bending. Glass has\\n     * an index of refraction of about 1.5. Values of less than 1.0 produce\\n     * bizarre results and are not recommended\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ni(tokens) {\\n        this.currentMaterial.refractionIndex = parseFloat(tokens[0]);\\n    }\\n    /**\\n     * Specifies the specular exponent for the current material. This defines the\\n     * focus of the specular highlight.\\n     *\\n     * Statement: Ns `exponent`\\n     *\\n     * Example: \"Ns 250\"\\n     *\\n     * `exponent` is the value for the specular exponent. A high exponent results\\n     * in a tight, concentrated highlight. Ns Values normally range from 0 to\\n     * 1000.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ns(tokens) {\\n        this.currentMaterial.specularExponent = parseInt(tokens[0]);\\n    }\\n    /**\\n     * Specifies the sharpness of the reflections from the local reflection map.\\n     *\\n     * Statement: sharpness `value`\\n     *\\n     * Example: \"sharpness 100\"\\n     *\\n     * If a material does not have a local reflection map defined in its material\\n     * defintions, sharpness will apply to the global reflection map defined in\\n     * PreView.\\n     *\\n     * `value` can be a number from 0 to 1000. The default is 60. A high value\\n     * results in a clear reflection of objects in the reflection map.\\n     *\\n     * Tip: sharpness values greater than 100 introduce aliasing effects in\\n     * flat surfaces that are viewed at a sharp angle.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_sharpness(tokens) {\\n        this.currentMaterial.sharpness = parseInt(tokens[0]);\\n    }\\n    /**\\n     * Parses the -cc flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -cc flag\\n     * @param options the Object of all image options\\n     */\\n    parse_cc(values, options) {\\n        options.colorCorrection = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -blendu flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -blendu flag\\n     * @param options the Object of all image options\\n     */\\n    parse_blendu(values, options) {\\n        options.horizontalBlending = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -blendv flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -blendv flag\\n     * @param options the Object of all image options\\n     */\\n    parse_blendv(values, options) {\\n        options.verticalBlending = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -boost flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -boost flag\\n     * @param options the Object of all image options\\n     */\\n    parse_boost(values, options) {\\n        options.boostMipMapSharpness = parseFloat(values[0]);\\n    }\\n    /**\\n     * Parses the -mm flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -mm flag\\n     * @param options the Object of all image options\\n     */\\n    parse_mm(values, options) {\\n        options.modifyTextureMap.brightness = parseFloat(values[0]);\\n        options.modifyTextureMap.contrast = parseFloat(values[1]);\\n    }\\n    /**\\n     * Parses and sets the -o, -s, and -t  u, v, and w values\\n     *\\n     * @param values the values passed to the -o, -s, -t flag\\n     * @param {Object} option the Object of either the -o, -s, -t option\\n     * @param {Integer} defaultValue the Object of all image options\\n     */\\n    parse_ost(values, option, defaultValue) {\\n        while (values.length < 3) {\\n            values.push(defaultValue.toString());\\n        }\\n        option.u = parseFloat(values[0]);\\n        option.v = parseFloat(values[1]);\\n        option.w = parseFloat(values[2]);\\n    }\\n    /**\\n     * Parses the -o flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -o flag\\n     * @param options the Object of all image options\\n     */\\n    parse_o(values, options) {\\n        this.parse_ost(values, options.offset, 0);\\n    }\\n    /**\\n     * Parses the -s flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -s flag\\n     * @param options the Object of all image options\\n     */\\n    parse_s(values, options) {\\n        this.parse_ost(values, options.scale, 1);\\n    }\\n    /**\\n     * Parses the -t flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -t flag\\n     * @param options the Object of all image options\\n     */\\n    parse_t(values, options) {\\n        this.parse_ost(values, options.turbulence, 0);\\n    }\\n    /**\\n     * Parses the -texres flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -texres flag\\n     * @param options the Object of all image options\\n     */\\n    parse_texres(values, options) {\\n        options.textureResolution = parseFloat(values[0]);\\n    }\\n    /**\\n     * Parses the -clamp flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -clamp flag\\n     * @param options the Object of all image options\\n     */\\n    parse_clamp(values, options) {\\n        options.clamp = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -bm flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -bm flag\\n     * @param options the Object of all image options\\n     */\\n    parse_bm(values, options) {\\n        options.bumpMultiplier = parseFloat(values[0]);\\n    }\\n    /**\\n     * Parses the -imfchan flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -imfchan flag\\n     * @param options the Object of all image options\\n     */\\n    parse_imfchan(values, options) {\\n        options.imfChan = values[0];\\n    }\\n    /**\\n     * This only exists for relection maps and denotes the type of reflection.\\n     *\\n     * @param values the values passed to the -type flag\\n     * @param options the Object of all image options\\n     */\\n    parse_type(values, options) {\\n        options.reflectionType = values[0];\\n    }\\n    /**\\n     * Parses the texture\\'s options and returns an options object with the info\\n     *\\n     * @param tokens all of the option tokens to pass to the texture\\n     * @return {Object} a complete object of objects to apply to the texture\\n     */\\n    parseOptions(tokens) {\\n        const options = emptyTextureOptions();\\n        let option;\\n        let values;\\n        const optionsToValues = {};\\n        tokens.reverse();\\n        while (tokens.length) {\\n            // token is guaranteed to exists here, hence the explicit \"as\"\\n            const token = tokens.pop();\\n            if (token.startsWith(\"-\")) {\\n                option = token.substr(1);\\n                optionsToValues[option] = [];\\n            }\\n            else if (option) {\\n                optionsToValues[option].push(token);\\n            }\\n        }\\n        for (option in optionsToValues) {\\n            if (!optionsToValues.hasOwnProperty(option)) {\\n                continue;\\n            }\\n            values = optionsToValues[option];\\n            const optionMethod = this[`parse_${option}`];\\n            if (optionMethod) {\\n                optionMethod.bind(this)(values, options);\\n            }\\n        }\\n        return options;\\n    }\\n    /**\\n     * Parses the given texture map line.\\n     *\\n     * @param tokens all of the tokens representing the texture\\n     * @return a complete object of objects to apply to the texture\\n     */\\n    parseMap(tokens) {\\n        // according to wikipedia:\\n        // (https://en.wikipedia.org/wiki/Wavefront_.obj_file#Vendor_specific_alterations)\\n        // there is at least one vendor that places the filename before the options\\n        // rather than after (which is to spec). All options start with a \\'-\\'\\n        // so if the first token doesn\\'t start with a \\'-\\', we\\'re going to assume\\n        // it\\'s the name of the map file.\\n        let optionsString;\\n        let filename = \"\";\\n        if (!tokens[0].startsWith(\"-\")) {\\n            [filename, ...optionsString] = tokens;\\n        }\\n        else {\\n            filename = tokens.pop();\\n            optionsString = tokens;\\n        }\\n        const options = this.parseOptions(optionsString);\\n        options.filename = filename.replace(/\\\\\\\\/g, \"/\");\\n        return options;\\n    }\\n    /**\\n     * Parses the ambient map.\\n     *\\n     * @param tokens list of tokens for the map_Ka direcive\\n     */\\n    parse_map_Ka(tokens) {\\n        this.currentMaterial.mapAmbient = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the diffuse map.\\n     *\\n     * @param tokens list of tokens for the map_Kd direcive\\n     */\\n    parse_map_Kd(tokens) {\\n        this.currentMaterial.mapDiffuse = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the specular map.\\n     *\\n     * @param tokens list of tokens for the map_Ks direcive\\n     */\\n    parse_map_Ks(tokens) {\\n        this.currentMaterial.mapSpecular = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the emissive map.\\n     *\\n     * @param tokens list of tokens for the map_Ke direcive\\n     */\\n    parse_map_Ke(tokens) {\\n        this.currentMaterial.mapEmissive = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the specular exponent map.\\n     *\\n     * @param tokens list of tokens for the map_Ns direcive\\n     */\\n    parse_map_Ns(tokens) {\\n        this.currentMaterial.mapSpecularExponent = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the dissolve map.\\n     *\\n     * @param tokens list of tokens for the map_d direcive\\n     */\\n    parse_map_d(tokens) {\\n        this.currentMaterial.mapDissolve = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the anti-aliasing option.\\n     *\\n     * @param tokens list of tokens for the map_aat direcive\\n     */\\n    parse_map_aat(tokens) {\\n        this.currentMaterial.antiAliasing = tokens[0] == \"on\";\\n    }\\n    /**\\n     * Parses the bump map.\\n     *\\n     * @param tokens list of tokens for the map_bump direcive\\n     */\\n    parse_map_bump(tokens) {\\n        this.currentMaterial.mapBump = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the bump map.\\n     *\\n     * @param tokens list of tokens for the bump direcive\\n     */\\n    parse_bump(tokens) {\\n        this.parse_map_bump(tokens);\\n    }\\n    /**\\n     * Parses the disp map.\\n     *\\n     * @param tokens list of tokens for the disp direcive\\n     */\\n    parse_disp(tokens) {\\n        this.currentMaterial.mapDisplacement = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the decal map.\\n     *\\n     * @param tokens list of tokens for the map_decal direcive\\n     */\\n    parse_decal(tokens) {\\n        this.currentMaterial.mapDecal = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the refl map.\\n     *\\n     * @param tokens list of tokens for the refl direcive\\n     */\\n    parse_refl(tokens) {\\n        this.currentMaterial.mapReflections.push(this.parseMap(tokens));\\n    }\\n    /**\\n     * Parses the MTL file.\\n     *\\n     * Iterates line by line parsing each MTL directive.\\n     *\\n     * This function expects the first token in the line\\n     * to be a valid MTL directive. That token is then used\\n     * to try and run a method on this class. parse_[directive]\\n     * E.g., the `newmtl` directive would try to call the method\\n     * parse_newmtl. Each parsing function takes in the remaining\\n     * list of tokens and updates the currentMaterial class with\\n     * the attributes provided.\\n     */\\n    parse() {\\n        const lines = this.data.split(/\\\\r?\\\\n/);\\n        for (let line of lines) {\\n            line = line.trim();\\n            if (!line || line.startsWith(\"#\")) {\\n                continue;\\n            }\\n            const [directive, ...tokens] = line.split(/\\\\s/);\\n            const parseMethod = this[`parse_${directive}`];\\n            if (!parseMethod) {\\n                console.warn(`Don\\'t know how to parse the directive: \"${directive}\"`);\\n                continue;\\n            }\\n            // console.log(`Parsing \"${directive}\" with tokens: ${tokens}`);\\n            parseMethod.bind(this)(tokens);\\n        }\\n        // some cleanup. These don\\'t need to be exposed as public data.\\n        delete this.data;\\n        this.currentMaterial = SENTINEL_MATERIAL;\\n    }\\n}\\nfunction emptyTextureOptions() {\\n    return {\\n        colorCorrection: false,\\n        horizontalBlending: true,\\n        verticalBlending: true,\\n        boostMipMapSharpness: 0,\\n        modifyTextureMap: {\\n            brightness: 0,\\n            contrast: 1,\\n        },\\n        offset: { u: 0, v: 0, w: 0 },\\n        scale: { u: 1, v: 1, w: 1 },\\n        turbulence: { u: 0, v: 0, w: 0 },\\n        clamp: false,\\n        textureResolution: null,\\n        bumpMultiplier: 1,\\n        imfChan: null,\\n        filename: \"\",\\n    };\\n}\\n\\n\\n//# sourceURL=webpack:///./src/material.ts?')},\"./src/mesh.ts\":\n/*!*********************!*\\\n  !*** ./src/mesh.ts ***!\n  \\*********************/\n/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Mesh; });\\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ \"./src/layout.ts\");\\n\\n/**\\n * The main Mesh class. The constructor will parse through the OBJ file data\\n * and collect the vertex, vertex normal, texture, and face information. This\\n * information can then be used later on when creating your VBOs. See\\n * OBJ.initMeshBuffers for an example of how to use the newly created Mesh\\n */\\nclass Mesh {\\n    /**\\n     * Create a Mesh\\n     * @param {String} objectData - a string representation of an OBJ file with\\n     *     newlines preserved.\\n     * @param {Object} options - a JS object containing valid options. See class\\n     *     documentation for options.\\n     * @param {bool} options.enableWTextureCoord - Texture coordinates can have\\n     *     an optional \"w\" coordinate after the u and v coordinates. This extra\\n     *     value can be used in order to perform fancy transformations on the\\n     *     textures themselves. Default is to truncate to only the u an v\\n     *     coordinates. Passing true will provide a default value of 0 in the\\n     *     event that any or all texture coordinates don\\'t provide a w value.\\n     *     Always use the textureStride attribute in order to determine the\\n     *     stride length of the texture coordinates when rendering the element\\n     *     array.\\n     * @param {bool} options.calcTangentsAndBitangents - Calculate the tangents\\n     *     and bitangents when loading of the OBJ is completed. This adds two new\\n     *     attributes to the Mesh instance: `tangents` and `bitangents`.\\n     */\\n    constructor(objectData, options) {\\n        this.name = \"\";\\n        this.indicesPerMaterial = [];\\n        this.materialsByIndex = {};\\n        this.tangents = [];\\n        this.bitangents = [];\\n        options = options || {};\\n        options.materials = options.materials || {};\\n        options.enableWTextureCoord = !!options.enableWTextureCoord;\\n        // the list of unique vertex, normal, texture, attributes\\n        this.vertexNormals = [];\\n        this.textures = [];\\n        // the indicies to draw the faces\\n        this.indices = [];\\n        this.textureStride = options.enableWTextureCoord ? 3 : 2;\\n        /*\\n        The OBJ file format does a sort of compression when saving a model in a\\n        program like Blender. There are at least 3 sections (4 including textures)\\n        within the file. Each line in a section begins with the same string:\\n          * \\'v\\': indicates vertex section\\n          * \\'vn\\': indicates vertex normal section\\n          * \\'f\\': indicates the faces section\\n          * \\'vt\\': indicates vertex texture section (if textures were used on the model)\\n        Each of the above sections (except for the faces section) is a list/set of\\n        unique vertices.\\n\\n        Each line of the faces section contains a list of\\n        (vertex, [texture], normal) groups.\\n\\n        **Note:** The following documentation will use a capital \"V\" Vertex to\\n        denote the above (vertex, [texture], normal) groups whereas a lowercase\\n        \"v\" vertex is used to denote an X, Y, Z coordinate.\\n\\n        Some examples:\\n            // the texture index is optional, both formats are possible for models\\n            // without a texture applied\\n            f 1/25 18/46 12/31\\n            f 1//25 18//46 12//31\\n\\n            // A 3 vertex face with texture indices\\n            f 16/92/11 14/101/22 1/69/1\\n\\n            // A 4 vertex face\\n            f 16/92/11 40/109/40 38/114/38 14/101/22\\n\\n        The first two lines are examples of a 3 vertex face without a texture applied.\\n        The second is an example of a 3 vertex face with a texture applied.\\n        The third is an example of a 4 vertex face. Note: a face can contain N\\n        number of vertices.\\n\\n        Each number that appears in one of the groups is a 1-based index\\n        corresponding to an item from the other sections (meaning that indexing\\n        starts at one and *not* zero).\\n\\n        For example:\\n            `f 16/92/11` is saying to\\n              - take the 16th element from the [v] vertex array\\n              - take the 92nd element from the [vt] texture array\\n              - take the 11th element from the [vn] normal array\\n            and together they make a unique vertex.\\n        Using all 3+ unique Vertices from the face line will produce a polygon.\\n\\n        Now, you could just go through the OBJ file and create a new vertex for\\n        each face line and WebGL will draw what appears to be the same model.\\n        However, vertices will be overlapped and duplicated all over the place.\\n\\n        Consider a cube in 3D space centered about the origin and each side is\\n        2 units long. The front face (with the positive Z-axis pointing towards\\n        you) would have a Top Right vertex (looking orthogonal to its normal)\\n        mapped at (1,1,1) The right face would have a Top Left vertex (looking\\n        orthogonal to its normal) at (1,1,1) and the top face would have a Bottom\\n        Right vertex (looking orthogonal to its normal) at (1,1,1). Each face\\n        has a vertex at the same coordinates, however, three distinct vertices\\n        will be drawn at the same spot.\\n\\n        To solve the issue of duplicate Vertices (the `(vertex, [texture], normal)`\\n        groups), while iterating through the face lines, when a group is encountered\\n        the whole group string (\\'16/92/11\\') is checked to see if it exists in the\\n        packed.hashindices object, and if it doesn\\'t, the indices it specifies\\n        are used to look up each attribute in the corresponding attribute arrays\\n        already created. The values are then copied to the corresponding unpacked\\n        array (flattened to play nice with WebGL\\'s ELEMENT_ARRAY_BUFFER indexing),\\n        the group string is added to the hashindices set and the current unpacked\\n        index is used as this hashindices value so that the group of elements can\\n        be reused. The unpacked index is incremented. If the group string already\\n        exists in the hashindices object, its corresponding value is the index of\\n        that group and is appended to the unpacked indices array.\\n       */\\n        const verts = [];\\n        const vertNormals = [];\\n        const textures = [];\\n        const materialNamesByIndex = [];\\n        const materialIndicesByName = {};\\n        // keep track of what material we\\'ve seen last\\n        let currentMaterialIndex = -1;\\n        let currentObjectByMaterialIndex = 0;\\n        // unpacking stuff\\n        const unpacked = {\\n            verts: [],\\n            norms: [],\\n            textures: [],\\n            hashindices: {},\\n            indices: [[]],\\n            materialIndices: [],\\n            index: 0,\\n        };\\n        const VERTEX_RE = /^v\\\\s/;\\n        const NORMAL_RE = /^vn\\\\s/;\\n        const TEXTURE_RE = /^vt\\\\s/;\\n        const FACE_RE = /^f\\\\s/;\\n        const WHITESPACE_RE = /\\\\s+/;\\n        const USE_MATERIAL_RE = /^usemtl/;\\n        // array of lines separated by the newline\\n        const lines = objectData.split(\"\\\\n\");\\n        for (let line of lines) {\\n            line = line.trim();\\n            if (!line || line.startsWith(\"#\")) {\\n                continue;\\n            }\\n            const elements = line.split(WHITESPACE_RE);\\n            elements.shift();\\n            if (VERTEX_RE.test(line)) {\\n                // if this is a vertex\\n                verts.push(...elements);\\n            }\\n            else if (NORMAL_RE.test(line)) {\\n                // if this is a vertex normal\\n                vertNormals.push(...elements);\\n            }\\n            else if (TEXTURE_RE.test(line)) {\\n                let coords = elements;\\n                // by default, the loader will only look at the U and V\\n                // coordinates of the vt declaration. So, this truncates the\\n                // elements to only those 2 values. If W texture coordinate\\n                // support is enabled, then the texture coordinate is\\n                // expected to have three values in it.\\n                if (elements.length > 2 && !options.enableWTextureCoord) {\\n                    coords = elements.slice(0, 2);\\n                }\\n                else if (elements.length === 2 && options.enableWTextureCoord) {\\n                    // If for some reason W texture coordinate support is enabled\\n                    // and only the U and V coordinates are given, then we supply\\n                    // the default value of 0 so that the stride length is correct\\n                    // when the textures are unpacked below.\\n                    coords.push(\"0\");\\n                }\\n                textures.push(...coords);\\n            }\\n            else if (USE_MATERIAL_RE.test(line)) {\\n                const materialName = elements[0];\\n                // check to see if we\\'ve ever seen it before\\n                if (!(materialName in materialIndicesByName)) {\\n                    // new material we\\'ve never seen\\n                    materialNamesByIndex.push(materialName);\\n                    materialIndicesByName[materialName] = materialNamesByIndex.length - 1;\\n                    // push new array into indices\\n                    // already contains an array at index zero, don\\'t add\\n                    if (materialIndicesByName[materialName] > 0) {\\n                        unpacked.indices.push([]);\\n                    }\\n                }\\n                // keep track of the current material index\\n                currentMaterialIndex = materialIndicesByName[materialName];\\n                // update current index array\\n                currentObjectByMaterialIndex = currentMaterialIndex;\\n            }\\n            else if (FACE_RE.test(line)) {\\n                // if this is a face\\n                /*\\n                split this face into an array of Vertex groups\\n                for example:\\n                   f 16/92/11 14/101/22 1/69/1\\n                becomes:\\n                  [\\'16/92/11\\', \\'14/101/22\\', \\'1/69/1\\'];\\n                */\\n                const triangles = triangulate(elements);\\n                for (const triangle of triangles) {\\n                    for (let j = 0, eleLen = triangle.length; j < eleLen; j++) {\\n                        const hash = triangle[j] + \",\" + currentMaterialIndex;\\n                        if (hash in unpacked.hashindices) {\\n                            unpacked.indices[currentObjectByMaterialIndex].push(unpacked.hashindices[hash]);\\n                        }\\n                        else {\\n                            /*\\n                        Each element of the face line array is a Vertex which has its\\n                        attributes delimited by a forward slash. This will separate\\n                        each attribute into another array:\\n                            \\'19/92/11\\'\\n                        becomes:\\n                            Vertex = [\\'19\\', \\'92\\', \\'11\\'];\\n                        where\\n                            Vertex[0] is the vertex index\\n                            Vertex[1] is the texture index\\n                            Vertex[2] is the normal index\\n                         Think of faces having Vertices which are comprised of the\\n                         attributes location (v), texture (vt), and normal (vn).\\n                         */\\n                            const vertex = triangle[j].split(\"/\");\\n                            // it\\'s possible for faces to only specify the vertex\\n                            // and the normal. In this case, vertex will only have\\n                            // a length of 2 and not 3 and the normal will be the\\n                            // second item in the list with an index of 1.\\n                            const normalIndex = vertex.length - 1;\\n                            /*\\n                         The verts, textures, and vertNormals arrays each contain a\\n                         flattend array of coordinates.\\n\\n                         Because it gets confusing by referring to Vertex and then\\n                         vertex (both are different in my descriptions) I will explain\\n                         what\\'s going on using the vertexNormals array:\\n\\n                         vertex[2] will contain the one-based index of the vertexNormals\\n                         section (vn). One is subtracted from this index number to play\\n                         nice with javascript\\'s zero-based array indexing.\\n\\n                         Because vertexNormal is a flattened array of x, y, z values,\\n                         simple pointer arithmetic is used to skip to the start of the\\n                         vertexNormal, then the offset is added to get the correct\\n                         component: +0 is x, +1 is y, +2 is z.\\n\\n                         This same process is repeated for verts and textures.\\n                         */\\n                            // Vertex position\\n                            unpacked.verts.push(+verts[(+vertex[0] - 1) * 3 + 0]);\\n                            unpacked.verts.push(+verts[(+vertex[0] - 1) * 3 + 1]);\\n                            unpacked.verts.push(+verts[(+vertex[0] - 1) * 3 + 2]);\\n                            // Vertex textures\\n                            if (textures.length) {\\n                                const stride = options.enableWTextureCoord ? 3 : 2;\\n                                unpacked.textures.push(+textures[(+vertex[1] - 1) * stride + 0]);\\n                                unpacked.textures.push(+textures[(+vertex[1] - 1) * stride + 1]);\\n                                if (options.enableWTextureCoord) {\\n                                    unpacked.textures.push(+textures[(+vertex[1] - 1) * stride + 2]);\\n                                }\\n                            }\\n                            // Vertex normals\\n                            unpacked.norms.push(+vertNormals[(+vertex[normalIndex] - 1) * 3 + 0]);\\n                            unpacked.norms.push(+vertNormals[(+vertex[normalIndex] - 1) * 3 + 1]);\\n                            unpacked.norms.push(+vertNormals[(+vertex[normalIndex] - 1) * 3 + 2]);\\n                            // Vertex material indices\\n                            unpacked.materialIndices.push(currentMaterialIndex);\\n                            // add the newly created Vertex to the list of indices\\n                            unpacked.hashindices[hash] = unpacked.index;\\n                            unpacked.indices[currentObjectByMaterialIndex].push(unpacked.hashindices[hash]);\\n                            // increment the counter\\n                            unpacked.index += 1;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        this.vertices = unpacked.verts;\\n        this.vertexNormals = unpacked.norms;\\n        this.textures = unpacked.textures;\\n        this.vertexMaterialIndices = unpacked.materialIndices;\\n        this.indices = unpacked.indices[currentObjectByMaterialIndex];\\n        this.indicesPerMaterial = unpacked.indices;\\n        this.materialNames = materialNamesByIndex;\\n        this.materialIndices = materialIndicesByName;\\n        this.materialsByIndex = {};\\n        if (options.calcTangentsAndBitangents) {\\n            this.calculateTangentsAndBitangents();\\n        }\\n    }\\n    /**\\n     * Calculates the tangents and bitangents of the mesh that forms an orthogonal basis together with the\\n     * normal in the direction of the texture coordinates. These are useful for setting up the TBN matrix\\n     * when distorting the normals through normal maps.\\n     * Method derived from: http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/\\n     *\\n     * This method requires the normals and texture coordinates to be parsed and set up correctly.\\n     * Adds the tangents and bitangents as members of the class instance.\\n     */\\n    calculateTangentsAndBitangents() {\\n        console.assert(!!(this.vertices &&\\n            this.vertices.length &&\\n            this.vertexNormals &&\\n            this.vertexNormals.length &&\\n            this.textures &&\\n            this.textures.length), \"Missing attributes for calculating tangents and bitangents\");\\n        const unpacked = {\\n            tangents: [...new Array(this.vertices.length)].map(_ => 0),\\n            bitangents: [...new Array(this.vertices.length)].map(_ => 0),\\n        };\\n        // Loop through all faces in the whole mesh\\n        const indices = this.indices;\\n        const vertices = this.vertices;\\n        const normals = this.vertexNormals;\\n        const uvs = this.textures;\\n        for (let i = 0; i < indices.length; i += 3) {\\n            const i0 = indices[i + 0];\\n            const i1 = indices[i + 1];\\n            const i2 = indices[i + 2];\\n            const x_v0 = vertices[i0 * 3 + 0];\\n            const y_v0 = vertices[i0 * 3 + 1];\\n            const z_v0 = vertices[i0 * 3 + 2];\\n            const x_uv0 = uvs[i0 * 2 + 0];\\n            const y_uv0 = uvs[i0 * 2 + 1];\\n            const x_v1 = vertices[i1 * 3 + 0];\\n            const y_v1 = vertices[i1 * 3 + 1];\\n            const z_v1 = vertices[i1 * 3 + 2];\\n            const x_uv1 = uvs[i1 * 2 + 0];\\n            const y_uv1 = uvs[i1 * 2 + 1];\\n            const x_v2 = vertices[i2 * 3 + 0];\\n            const y_v2 = vertices[i2 * 3 + 1];\\n            const z_v2 = vertices[i2 * 3 + 2];\\n            const x_uv2 = uvs[i2 * 2 + 0];\\n            const y_uv2 = uvs[i2 * 2 + 1];\\n            const x_deltaPos1 = x_v1 - x_v0;\\n            const y_deltaPos1 = y_v1 - y_v0;\\n            const z_deltaPos1 = z_v1 - z_v0;\\n            const x_deltaPos2 = x_v2 - x_v0;\\n            const y_deltaPos2 = y_v2 - y_v0;\\n            const z_deltaPos2 = z_v2 - z_v0;\\n            const x_uvDeltaPos1 = x_uv1 - x_uv0;\\n            const y_uvDeltaPos1 = y_uv1 - y_uv0;\\n            const x_uvDeltaPos2 = x_uv2 - x_uv0;\\n            const y_uvDeltaPos2 = y_uv2 - y_uv0;\\n            const rInv = x_uvDeltaPos1 * y_uvDeltaPos2 - y_uvDeltaPos1 * x_uvDeltaPos2;\\n            const r = 1.0 / Math.abs(rInv < 0.0001 ? 1.0 : rInv);\\n            // Tangent\\n            const x_tangent = (x_deltaPos1 * y_uvDeltaPos2 - x_deltaPos2 * y_uvDeltaPos1) * r;\\n            const y_tangent = (y_deltaPos1 * y_uvDeltaPos2 - y_deltaPos2 * y_uvDeltaPos1) * r;\\n            const z_tangent = (z_deltaPos1 * y_uvDeltaPos2 - z_deltaPos2 * y_uvDeltaPos1) * r;\\n            // Bitangent\\n            const x_bitangent = (x_deltaPos2 * x_uvDeltaPos1 - x_deltaPos1 * x_uvDeltaPos2) * r;\\n            const y_bitangent = (y_deltaPos2 * x_uvDeltaPos1 - y_deltaPos1 * x_uvDeltaPos2) * r;\\n            const z_bitangent = (z_deltaPos2 * x_uvDeltaPos1 - z_deltaPos1 * x_uvDeltaPos2) * r;\\n            // Gram-Schmidt orthogonalize\\n            //t = glm::normalize(t - n * glm:: dot(n, t));\\n            const x_n0 = normals[i0 * 3 + 0];\\n            const y_n0 = normals[i0 * 3 + 1];\\n            const z_n0 = normals[i0 * 3 + 2];\\n            const x_n1 = normals[i1 * 3 + 0];\\n            const y_n1 = normals[i1 * 3 + 1];\\n            const z_n1 = normals[i1 * 3 + 2];\\n            const x_n2 = normals[i2 * 3 + 0];\\n            const y_n2 = normals[i2 * 3 + 1];\\n            const z_n2 = normals[i2 * 3 + 2];\\n            // Tangent\\n            const n0_dot_t = x_tangent * x_n0 + y_tangent * y_n0 + z_tangent * z_n0;\\n            const n1_dot_t = x_tangent * x_n1 + y_tangent * y_n1 + z_tangent * z_n1;\\n            const n2_dot_t = x_tangent * x_n2 + y_tangent * y_n2 + z_tangent * z_n2;\\n            const x_resTangent0 = x_tangent - x_n0 * n0_dot_t;\\n            const y_resTangent0 = y_tangent - y_n0 * n0_dot_t;\\n            const z_resTangent0 = z_tangent - z_n0 * n0_dot_t;\\n            const x_resTangent1 = x_tangent - x_n1 * n1_dot_t;\\n            const y_resTangent1 = y_tangent - y_n1 * n1_dot_t;\\n            const z_resTangent1 = z_tangent - z_n1 * n1_dot_t;\\n            const x_resTangent2 = x_tangent - x_n2 * n2_dot_t;\\n            const y_resTangent2 = y_tangent - y_n2 * n2_dot_t;\\n            const z_resTangent2 = z_tangent - z_n2 * n2_dot_t;\\n            const magTangent0 = Math.sqrt(x_resTangent0 * x_resTangent0 + y_resTangent0 * y_resTangent0 + z_resTangent0 * z_resTangent0);\\n            const magTangent1 = Math.sqrt(x_resTangent1 * x_resTangent1 + y_resTangent1 * y_resTangent1 + z_resTangent1 * z_resTangent1);\\n            const magTangent2 = Math.sqrt(x_resTangent2 * x_resTangent2 + y_resTangent2 * y_resTangent2 + z_resTangent2 * z_resTangent2);\\n            // Bitangent\\n            const n0_dot_bt = x_bitangent * x_n0 + y_bitangent * y_n0 + z_bitangent * z_n0;\\n            const n1_dot_bt = x_bitangent * x_n1 + y_bitangent * y_n1 + z_bitangent * z_n1;\\n            const n2_dot_bt = x_bitangent * x_n2 + y_bitangent * y_n2 + z_bitangent * z_n2;\\n            const x_resBitangent0 = x_bitangent - x_n0 * n0_dot_bt;\\n            const y_resBitangent0 = y_bitangent - y_n0 * n0_dot_bt;\\n            const z_resBitangent0 = z_bitangent - z_n0 * n0_dot_bt;\\n            const x_resBitangent1 = x_bitangent - x_n1 * n1_dot_bt;\\n            const y_resBitangent1 = y_bitangent - y_n1 * n1_dot_bt;\\n            const z_resBitangent1 = z_bitangent - z_n1 * n1_dot_bt;\\n            const x_resBitangent2 = x_bitangent - x_n2 * n2_dot_bt;\\n            const y_resBitangent2 = y_bitangent - y_n2 * n2_dot_bt;\\n            const z_resBitangent2 = z_bitangent - z_n2 * n2_dot_bt;\\n            const magBitangent0 = Math.sqrt(x_resBitangent0 * x_resBitangent0 +\\n                y_resBitangent0 * y_resBitangent0 +\\n                z_resBitangent0 * z_resBitangent0);\\n            const magBitangent1 = Math.sqrt(x_resBitangent1 * x_resBitangent1 +\\n                y_resBitangent1 * y_resBitangent1 +\\n                z_resBitangent1 * z_resBitangent1);\\n            const magBitangent2 = Math.sqrt(x_resBitangent2 * x_resBitangent2 +\\n                y_resBitangent2 * y_resBitangent2 +\\n                z_resBitangent2 * z_resBitangent2);\\n            unpacked.tangents[i0 * 3 + 0] += x_resTangent0 / magTangent0;\\n            unpacked.tangents[i0 * 3 + 1] += y_resTangent0 / magTangent0;\\n            unpacked.tangents[i0 * 3 + 2] += z_resTangent0 / magTangent0;\\n            unpacked.tangents[i1 * 3 + 0] += x_resTangent1 / magTangent1;\\n            unpacked.tangents[i1 * 3 + 1] += y_resTangent1 / magTangent1;\\n            unpacked.tangents[i1 * 3 + 2] += z_resTangent1 / magTangent1;\\n            unpacked.tangents[i2 * 3 + 0] += x_resTangent2 / magTangent2;\\n            unpacked.tangents[i2 * 3 + 1] += y_resTangent2 / magTangent2;\\n            unpacked.tangents[i2 * 3 + 2] += z_resTangent2 / magTangent2;\\n            unpacked.bitangents[i0 * 3 + 0] += x_resBitangent0 / magBitangent0;\\n            unpacked.bitangents[i0 * 3 + 1] += y_resBitangent0 / magBitangent0;\\n            unpacked.bitangents[i0 * 3 + 2] += z_resBitangent0 / magBitangent0;\\n            unpacked.bitangents[i1 * 3 + 0] += x_resBitangent1 / magBitangent1;\\n            unpacked.bitangents[i1 * 3 + 1] += y_resBitangent1 / magBitangent1;\\n            unpacked.bitangents[i1 * 3 + 2] += z_resBitangent1 / magBitangent1;\\n            unpacked.bitangents[i2 * 3 + 0] += x_resBitangent2 / magBitangent2;\\n            unpacked.bitangents[i2 * 3 + 1] += y_resBitangent2 / magBitangent2;\\n            unpacked.bitangents[i2 * 3 + 2] += z_resBitangent2 / magBitangent2;\\n            // TODO: check handedness\\n        }\\n        this.tangents = unpacked.tangents;\\n        this.bitangents = unpacked.bitangents;\\n    }\\n    /**\\n     * @param layout - A {@link Layout} object that describes the\\n     * desired memory layout of the generated buffer\\n     * @return The packed array in the ... TODO\\n     */\\n    makeBufferData(layout) {\\n        const numItems = this.vertices.length / 3;\\n        const buffer = new ArrayBuffer(layout.stride * numItems);\\n        buffer.numItems = numItems;\\n        const dataView = new DataView(buffer);\\n        for (let i = 0, vertexOffset = 0; i < numItems; i++) {\\n            vertexOffset = i * layout.stride;\\n            // copy in the vertex data in the order and format given by the\\n            // layout param\\n            for (const attribute of layout.attributes) {\\n                const offset = vertexOffset + layout.attributeMap[attribute.key].offset;\\n                switch (attribute.key) {\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].POSITION.key:\\n                        dataView.setFloat32(offset, this.vertices[i * 3], true);\\n                        dataView.setFloat32(offset + 4, this.vertices[i * 3 + 1], true);\\n                        dataView.setFloat32(offset + 8, this.vertices[i * 3 + 2], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].UV.key:\\n                        dataView.setFloat32(offset, this.textures[i * 2], true);\\n                        dataView.setFloat32(offset + 4, this.textures[i * 2 + 1], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].NORMAL.key:\\n                        dataView.setFloat32(offset, this.vertexNormals[i * 3], true);\\n                        dataView.setFloat32(offset + 4, this.vertexNormals[i * 3 + 1], true);\\n                        dataView.setFloat32(offset + 8, this.vertexNormals[i * 3 + 2], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].MATERIAL_INDEX.key:\\n                        dataView.setInt16(offset, this.vertexMaterialIndices[i], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].AMBIENT.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.ambient[0], true);\\n                        dataView.setFloat32(offset + 4, material.ambient[1], true);\\n                        dataView.setFloat32(offset + 8, material.ambient[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].DIFFUSE.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.diffuse[0], true);\\n                        dataView.setFloat32(offset + 4, material.diffuse[1], true);\\n                        dataView.setFloat32(offset + 8, material.diffuse[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].SPECULAR.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.specular[0], true);\\n                        dataView.setFloat32(offset + 4, material.specular[1], true);\\n                        dataView.setFloat32(offset + 8, material.specular[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].SPECULAR_EXPONENT.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.specularExponent, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].EMISSIVE.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.emissive[0], true);\\n                        dataView.setFloat32(offset + 4, material.emissive[1], true);\\n                        dataView.setFloat32(offset + 8, material.emissive[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].TRANSMISSION_FILTER.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.transmissionFilter[0], true);\\n                        dataView.setFloat32(offset + 4, material.transmissionFilter[1], true);\\n                        dataView.setFloat32(offset + 8, material.transmissionFilter[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].DISSOLVE.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.dissolve, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].ILLUMINATION.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setInt16(offset, material.illumination, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].REFRACTION_INDEX.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.refractionIndex, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].SHARPNESS.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.sharpness, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].ANTI_ALIASING.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setInt16(offset, material.antiAliasing ? 1 : 0, true);\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        return buffer;\\n    }\\n    makeIndexBufferData() {\\n        const buffer = new Uint16Array(this.indices);\\n        buffer.numItems = this.indices.length;\\n        return buffer;\\n    }\\n    makeIndexBufferDataForMaterials(...materialIndices) {\\n        const indices = new Array().concat(...materialIndices.map(mtlIdx => this.indicesPerMaterial[mtlIdx]));\\n        const buffer = new Uint16Array(indices);\\n        buffer.numItems = indices.length;\\n        return buffer;\\n    }\\n    addMaterialLibrary(mtl) {\\n        for (const name in mtl.materials) {\\n            if (!(name in this.materialIndices)) {\\n                // This material is not referenced by the mesh\\n                continue;\\n            }\\n            const material = mtl.materials[name];\\n            // Find the material index for this material\\n            const materialIndex = this.materialIndices[material.name];\\n            // Put the material into the materialsByIndex object at the right\\n            // spot as determined when the obj file was parsed\\n            this.materialsByIndex[materialIndex] = material;\\n        }\\n    }\\n}\\nfunction* triangulate(elements) {\\n    if (elements.length <= 3) {\\n        yield elements;\\n    }\\n    else if (elements.length === 4) {\\n        yield [elements[0], elements[1], elements[2]];\\n        yield [elements[2], elements[3], elements[0]];\\n    }\\n    else {\\n        for (let i = 1; i < elements.length - 1; i++) {\\n            yield [elements[0], elements[i], elements[i + 1]];\\n        }\\n    }\\n}\\n\\n\\n//# sourceURL=webpack:///./src/mesh.ts?')},\"./src/utils.ts\":\n/*!**********************!*\\\n  !*** ./src/utils.ts ***!\n  \\**********************/\n/*! exports provided: downloadModels, downloadMeshes, initMeshBuffers, deleteMeshBuffers */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadModels\", function() { return downloadModels; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadMeshes\", function() { return downloadMeshes; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initMeshBuffers\", function() { return initMeshBuffers; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteMeshBuffers\", function() { return deleteMeshBuffers; });\\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mesh */ \"./src/mesh.ts\");\\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./material */ \"./src/material.ts\");\\n\\n\\nfunction downloadMtlTextures(mtl, root) {\\n    const mapAttributes = [\\n        \"mapDiffuse\",\\n        \"mapAmbient\",\\n        \"mapSpecular\",\\n        \"mapDissolve\",\\n        \"mapBump\",\\n        \"mapDisplacement\",\\n        \"mapDecal\",\\n        \"mapEmissive\",\\n    ];\\n    if (!root.endsWith(\"/\")) {\\n        root += \"/\";\\n    }\\n    const textures = [];\\n    for (const materialName in mtl.materials) {\\n        if (!mtl.materials.hasOwnProperty(materialName)) {\\n            continue;\\n        }\\n        const material = mtl.materials[materialName];\\n        for (const attr of mapAttributes) {\\n            const mapData = material[attr];\\n            if (!mapData || !mapData.filename) {\\n                continue;\\n            }\\n            const url = root + mapData.filename;\\n            textures.push(fetch(url)\\n                .then(response => {\\n                if (!response.ok) {\\n                    throw new Error();\\n                }\\n                return response.blob();\\n            })\\n                .then(function (data) {\\n                const image = new Image();\\n                image.src = URL.createObjectURL(data);\\n                mapData.texture = image;\\n                return new Promise(resolve => (image.onload = resolve));\\n            })\\n                .catch(() => {\\n                console.error(`Unable to download texture: ${url}`);\\n            }));\\n        }\\n    }\\n    return Promise.all(textures);\\n}\\nfunction getMtl(modelOptions) {\\n    if (!(typeof modelOptions.mtl === \"string\")) {\\n        return modelOptions.obj.replace(/\\\\.obj$/, \".mtl\");\\n    }\\n    return modelOptions.mtl;\\n}\\n/**\\n * Accepts a list of model request objects and returns a Promise that\\n * resolves when all models have been downloaded and parsed.\\n *\\n * The list of model objects follow this interface:\\n * {\\n *  obj: \\'path/to/model.obj\\',\\n *  mtl: true | \\'path/to/model.mtl\\',\\n *  downloadMtlTextures: true | false\\n *  mtlTextureRoot: \\'/models/suzanne/maps\\'\\n *  name: \\'suzanne\\'\\n * }\\n *\\n * The `obj` attribute is required and should be the path to the\\n * model\\'s .obj file relative to the current repo (absolute URLs are\\n * suggested).\\n *\\n * The `mtl` attribute is optional and can either be a boolean or\\n * a path to the model\\'s .mtl file relative to the current URL. If\\n * the value is `true`, then the path and basename given for the `obj`\\n * attribute is used replacing the .obj suffix for .mtl\\n * E.g.: {obj: \\'models/foo.obj\\', mtl: true} would search for \\'models/foo.mtl\\'\\n *\\n * The `name` attribute is optional and is a human friendly name to be\\n * included with the parsed OBJ and MTL files. If not given, the base .obj\\n * filename will be used.\\n *\\n * The `downloadMtlTextures` attribute is a flag for automatically downloading\\n * any images found in the MTL file and attaching them to each Material\\n * created from that file. For example, if material.mapDiffuse is set (there\\n * was data in the MTL file), then material.mapDiffuse.texture will contain\\n * the downloaded image. This option defaults to `true`. By default, the MTL\\'s\\n * URL will be used to determine the location of the images.\\n *\\n * The `mtlTextureRoot` attribute is optional and should point to the location\\n * on the server that this MTL\\'s texture files are located. The default is to\\n * use the MTL file\\'s location.\\n *\\n * @returns {Promise} the result of downloading the given list of models. The\\n * promise will resolve with an object whose keys are the names of the models\\n * and the value is its Mesh object. Each Mesh object will automatically\\n * have its addMaterialLibrary() method called to set the given MTL data (if given).\\n */\\nfunction downloadModels(models) {\\n    const finished = [];\\n    for (const model of models) {\\n        if (!model.obj) {\\n            throw new Error(\\'\"obj\" attribute of model object not set. The .obj file is required to be set \\' +\\n                \"in order to use downloadModels()\");\\n        }\\n        const options = {\\n            indicesPerMaterial: !!model.indicesPerMaterial,\\n            calcTangentsAndBitangents: !!model.calcTangentsAndBitangents,\\n        };\\n        // if the name is not provided, dervive it from the given OBJ\\n        let name = model.name;\\n        if (!name) {\\n            const parts = model.obj.split(\"/\");\\n            name = parts[parts.length - 1].replace(\".obj\", \"\");\\n        }\\n        const namePromise = Promise.resolve(name);\\n        const meshPromise = fetch(model.obj)\\n            .then(response => response.text())\\n            .then(data => {\\n            return new _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data, options);\\n        });\\n        let mtlPromise;\\n        // Download MaterialLibrary file?\\n        if (model.mtl) {\\n            const mtl = getMtl(model);\\n            mtlPromise = fetch(mtl)\\n                .then(response => response.text())\\n                .then((data) => {\\n                const material = new _material__WEBPACK_IMPORTED_MODULE_1__[\"MaterialLibrary\"](data);\\n                if (model.downloadMtlTextures !== false) {\\n                    let root = model.mtlTextureRoot;\\n                    if (!root) {\\n                        // get the directory of the MTL file as default\\n                        root = mtl.substr(0, mtl.lastIndexOf(\"/\"));\\n                    }\\n                    // downloadMtlTextures returns a Promise that\\n                    // is resolved once all of the images it\\n                    // contains are downloaded. These are then\\n                    // attached to the map data objects\\n                    return Promise.all([Promise.resolve(material), downloadMtlTextures(material, root)]);\\n                }\\n                return Promise.all([Promise.resolve(material), undefined]);\\n            })\\n                .then((value) => {\\n                return value[0];\\n            });\\n        }\\n        const parsed = [namePromise, meshPromise, mtlPromise];\\n        finished.push(Promise.all(parsed));\\n    }\\n    return Promise.all(finished).then(ms => {\\n        // the \"finished\" promise is a list of name, Mesh instance,\\n        // and MaterialLibary instance. This unpacks and returns an\\n        // object mapping name to Mesh (Mesh points to MTL).\\n        const models = {};\\n        for (const model of ms) {\\n            const [name, mesh, mtl] = model;\\n            mesh.name = name;\\n            if (mtl) {\\n                mesh.addMaterialLibrary(mtl);\\n            }\\n            models[name] = mesh;\\n        }\\n        return models;\\n    });\\n}\\n/**\\n * Takes in an object of `mesh_name`, `\\'/url/to/OBJ/file\\'` pairs and a callback\\n * function. Each OBJ file will be ajaxed in and automatically converted to\\n * an OBJ.Mesh. When all files have successfully downloaded the callback\\n * function provided will be called and passed in an object containing\\n * the newly created meshes.\\n *\\n * **Note:** In order to use this function as a way to download meshes, a\\n * webserver of some sort must be used.\\n *\\n * @param {Object} nameAndAttrs an object where the key is the name of the mesh and the value is the url to that mesh\\'s OBJ file\\n *\\n * @param {Function} completionCallback should contain a function that will take one parameter: an object array where the keys will be the unique object name and the value will be a Mesh object\\n *\\n * @param {Object} meshes In case other meshes are loaded separately or if a previously declared variable is desired to be used, pass in a (possibly empty) json object of the pattern: { \\'<mesh_name>\\': OBJ.Mesh }\\n *\\n */\\nfunction downloadMeshes(nameAndURLs, completionCallback, meshes) {\\n    if (meshes === undefined) {\\n        meshes = {};\\n    }\\n    const completed = [];\\n    for (const mesh_name in nameAndURLs) {\\n        if (!nameAndURLs.hasOwnProperty(mesh_name)) {\\n            continue;\\n        }\\n        const url = nameAndURLs[mesh_name];\\n        completed.push(fetch(url)\\n            .then(response => response.text())\\n            .then(data => {\\n            return [mesh_name, new _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data)];\\n        }));\\n    }\\n    Promise.all(completed).then(ms => {\\n        for (const [name, mesh] of ms) {\\n            meshes[name] = mesh;\\n        }\\n        return completionCallback(meshes);\\n    });\\n}\\nfunction _buildBuffer(gl, type, data, itemSize) {\\n    const buffer = gl.createBuffer();\\n    const arrayView = type === gl.ARRAY_BUFFER ? Float32Array : Uint16Array;\\n    gl.bindBuffer(type, buffer);\\n    gl.bufferData(type, new arrayView(data), gl.STATIC_DRAW);\\n    buffer.itemSize = itemSize;\\n    buffer.numItems = data.length / itemSize;\\n    return buffer;\\n}\\n/**\\n * Takes in the WebGL context and a Mesh, then creates and appends the buffers\\n * to the mesh object as attributes.\\n *\\n * @param {WebGLRenderingContext} gl the `canvas.getContext(\\'webgl\\')` context instance\\n * @param {Mesh} mesh a single `OBJ.Mesh` instance\\n *\\n * The newly created mesh attributes are:\\n *\\n * Attrbute | Description\\n * :--- | ---\\n * **normalBuffer**       |contains the model&#39;s Vertex Normals\\n * normalBuffer.itemSize  |set to 3 items\\n * normalBuffer.numItems  |the total number of vertex normals\\n * |\\n * **textureBuffer**      |contains the model&#39;s Texture Coordinates\\n * textureBuffer.itemSize |set to 2 items\\n * textureBuffer.numItems |the number of texture coordinates\\n * |\\n * **vertexBuffer**       |contains the model&#39;s Vertex Position Coordinates (does not include w)\\n * vertexBuffer.itemSize  |set to 3 items\\n * vertexBuffer.numItems  |the total number of vertices\\n * |\\n * **indexBuffer**        |contains the indices of the faces\\n * indexBuffer.itemSize   |is set to 1\\n * indexBuffer.numItems   |the total number of indices\\n *\\n * A simple example (a lot of steps are missing, so don\\'t copy and paste):\\n *\\n *     const gl   = canvas.getContext(\\'webgl\\'),\\n *         mesh = OBJ.Mesh(obj_file_data);\\n *     // compile the shaders and create a shader program\\n *     const shaderProgram = gl.createProgram();\\n *     // compilation stuff here\\n *     ...\\n *     // make sure you have vertex, vertex normal, and texture coordinate\\n *     // attributes located in your shaders and attach them to the shader program\\n *     shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\\n *     gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\\n *\\n *     shaderProgram.vertexNormalAttribute = gl.getAttribLocation(shaderProgram, \"aVertexNormal\");\\n *     gl.enableVertexAttribArray(shaderProgram.vertexNormalAttribute);\\n *\\n *     shaderProgram.textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\\n *     gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\\n *\\n *     // create and initialize the vertex, vertex normal, and texture coordinate buffers\\n *     // and save on to the mesh object\\n *     OBJ.initMeshBuffers(gl, mesh);\\n *\\n *     // now to render the mesh\\n *     gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vertexBuffer);\\n *     gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, mesh.vertexBuffer.itemSize, gl.FLOAT, false, 0, 0);\\n *     // it\\'s possible that the mesh doesn\\'t contain\\n *     // any texture coordinates (e.g. suzanne.obj in the development branch).\\n *     // in this case, the texture vertexAttribArray will need to be disabled\\n *     // before the call to drawElements\\n *     if(!mesh.textures.length){\\n *       gl.disableVertexAttribArray(shaderProgram.textureCoordAttribute);\\n *     }\\n *     else{\\n *       // if the texture vertexAttribArray has been previously\\n *       // disabled, then it needs to be re-enabled\\n *       gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\\n *       gl.bindBuffer(gl.ARRAY_BUFFER, mesh.textureBuffer);\\n *       gl.vertexAttribPointer(shaderProgram.textureCoordAttribute, mesh.textureBuffer.itemSize, gl.FLOAT, false, 0, 0);\\n *     }\\n *\\n *     gl.bindBuffer(gl.ARRAY_BUFFER, mesh.normalBuffer);\\n *     gl.vertexAttribPointer(shaderProgram.vertexNormalAttribute, mesh.normalBuffer.itemSize, gl.FLOAT, false, 0, 0);\\n *\\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.mesh.indexBuffer);\\n *     gl.drawElements(gl.TRIANGLES, model.mesh.indexBuffer.numItems, gl.UNSIGNED_SHORT, 0);\\n */\\nfunction initMeshBuffers(gl, mesh) {\\n    mesh.normalBuffer = _buildBuffer(gl, gl.ARRAY_BUFFER, mesh.vertexNormals, 3);\\n    mesh.textureBuffer = _buildBuffer(gl, gl.ARRAY_BUFFER, mesh.textures, mesh.textureStride);\\n    mesh.vertexBuffer = _buildBuffer(gl, gl.ARRAY_BUFFER, mesh.vertices, 3);\\n    mesh.indexBuffer = _buildBuffer(gl, gl.ELEMENT_ARRAY_BUFFER, mesh.indices, 1);\\n    return mesh;\\n}\\nfunction deleteMeshBuffers(gl, mesh) {\\n    gl.deleteBuffer(mesh.normalBuffer);\\n    gl.deleteBuffer(mesh.textureBuffer);\\n    gl.deleteBuffer(mesh.vertexBuffer);\\n    gl.deleteBuffer(mesh.indexBuffer);\\n}\\n\\n\\n//# sourceURL=webpack:///./src/utils.ts?')},0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! /home/aaron/google_drive/projects/webgl-obj-loader/src/index.ts */\"./src/index.ts\");\\n\\n\\n//# sourceURL=webpack:///multi_./src/index.ts?')}})}));","// https://www.npmjs.com/package/webgl-obj-loader\r\n\r\nimport * as OBJ from 'webgl-obj-loader';\r\n\r\nimport { ExtendedGLBuffer, MaterialLibrary, Mesh } from 'webgl-obj-loader';\r\n\r\nexport var mesh: OBJ.Mesh;\r\n\r\nexport var meshMinMax: {\r\n  minx: number;\r\n  maxx: number;\r\n  miny: number;\r\n  maxy: number;\r\n  minz: number;\r\n  maxz: number;\r\n}\r\n\r\nexport var meshWithBuffers: OBJ.MeshWithBuffers;\r\n\r\nexport function CreateMeshWithBuffers(gl: WebGL2RenderingContext)\r\n{\r\n  meshWithBuffers = OBJ.initMeshBuffers(gl, mesh);\r\n  console.log(\"meshWithBuffers.vertexBuffer.numItems=\"+meshWithBuffers.vertexBuffer.numItems);\r\n  console.log(\"meshWithBuffers.vertexBuffer.vertices.length=\"+meshWithBuffers.vertices.values.length);\r\n  console.log(\"meshWithBuffers.vertexBuffer.vertices.values.length=\"+meshWithBuffers.vertices.values.length);\r\n  console.log(\"meshWithBuffers.normalBuffer.numItems=\"+meshWithBuffers.normalBuffer.numItems);\r\n  console.log(\"meshWithBuffers.indices.length=\"+meshWithBuffers.indices.length);\r\n  console.log(\"meshWithBuffers.indexBuffer.numItems=\"+meshWithBuffers.indexBuffer.numItems);\r\n  console.log(\"meshWithBuffers.textureBuffer.numItems=\"+meshWithBuffers.textureBuffer.numItems);\r\n}\r\n\r\nexport function NumElements()\r\n{ return meshWithBuffers?.indexBuffer.numItems; }\r\n\r\nfunction buildBuffer(gl: WebGLRenderingContext, type: GLenum, data: number[], itemSize: number): ExtendedGLBuffer {\r\n  const buffer = gl.createBuffer() as ExtendedGLBuffer;\r\n  const arrayView = type === gl.ARRAY_BUFFER ? Float32Array : Uint16Array;\r\n  gl.bindBuffer(type, buffer);\r\n  gl.bufferData(type, new arrayView(data), gl.STATIC_DRAW);\r\n  buffer.itemSize = itemSize;\r\n  buffer.numItems = data.length / itemSize;\r\n  return buffer;\r\n}\r\n\r\nexport function render(gl: WebGLRenderingContext, vertexPositionAttribute: number, normalAttribute: number, texCoordAttribute: number, offset: number )\r\n{\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, meshWithBuffers.vertexBuffer);\r\n    gl.vertexAttribPointer(vertexPositionAttribute, meshWithBuffers.vertexBuffer.itemSize, gl.FLOAT, false, 0, 0);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, meshWithBuffers.normalBuffer);\r\n    gl.vertexAttribPointer(normalAttribute, meshWithBuffers.normalBuffer.itemSize, gl.FLOAT, false, 0, 0);  \r\n    var cindexBuffer = buildBuffer(gl, gl.ELEMENT_ARRAY_BUFFER, mesh.indicesPerMaterial[offset], 1);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cindexBuffer);\r\n    if(!mesh.textures.length){\r\n            gl.disableVertexAttribArray(texCoordAttribute);\r\n           }\r\n           else{\r\n             gl.enableVertexAttribArray(texCoordAttribute);\r\n             gl.bindBuffer(gl.ARRAY_BUFFER, meshWithBuffers.textureBuffer);\r\n             gl.vertexAttribPointer(texCoordAttribute, meshWithBuffers.textureBuffer.itemSize, gl.FLOAT, false, 0, 0);\r\n           }\r\n   gl.drawElements(gl.TRIANGLES,mesh.indicesPerMaterial[offset].length, gl.UNSIGNED_SHORT, 0);\r\n}\r\n\r\n//===============================================================================================================================================================\r\n\r\nvar matlib: OBJ.MaterialLibrary;\r\nvar indexBuffers: ExtendedGLBuffer[] = [];\r\n\r\nexport function renderIndexBuffer(gl: WebGLRenderingContext, vertexPositionAttribute: number, normalAttribute: number, texCoordAttribute: number, offset: number, \r\n                                  texItemSize:number, tex: WebGLTexture )\r\n{\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, meshWithBuffers.vertexBuffer);\r\n    gl.vertexAttribPointer(vertexPositionAttribute, meshWithBuffers.vertexBuffer.itemSize, gl.FLOAT, false, 0, 0);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, meshWithBuffers.normalBuffer);\r\n    gl.vertexAttribPointer(normalAttribute, meshWithBuffers.normalBuffer.itemSize, gl.FLOAT, false, 0, 0);  \r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffers[offset]);\r\n    gl.bindTexture(gl.TEXTURE_2D,  tex);\r\n    gl.enableVertexAttribArray(texCoordAttribute);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, meshWithBuffers.textureBuffer);\r\n    gl.vertexAttribPointer(texCoordAttribute, texItemSize, gl.FLOAT, false, 0, 0);\r\n    gl.drawElements(gl.TRIANGLES,mesh.indicesPerMaterial[offset].length, gl.UNSIGNED_SHORT, 0);\r\n}\r\n\r\nexport function PrepareIndexBuffers(gl: WebGLRenderingContext )\r\n{\r\n  for (var i=0; i<mesh.materialNames.length; i++)\r\n  {\r\n    indexBuffers.push( buildBuffer(gl, gl.ELEMENT_ARRAY_BUFFER, mesh.indicesPerMaterial[i], 1));\r\n  }\r\n}\r\n\r\nfunction MeshMinMax(): {minx: number, maxx: number, miny: number, maxy: number, minz: number, maxz: number}\r\n{\r\n  var minx: number = 1e8;\r\n  var maxx: number = -1e8;\r\n  var miny: number = 1e8;\r\n  var maxy: number = -1e8;\r\n  var minz: number = 1e8;\r\n  var maxz: number = -1e8;\r\n  var i: number;\r\n  for (i=0; i<mesh.vertices.length; i+=3)\r\n  { \r\n    if (mesh.vertices[i+0]<minx) minx=mesh.vertices[i+0]; \r\n    if (mesh.vertices[i+1]<miny) miny=mesh.vertices[i+1]; \r\n    if (mesh.vertices[i+2]<minz) minz=mesh.vertices[i+2]; \r\n    if (mesh.vertices[i+0]>maxx) maxx=mesh.vertices[i+0]; \r\n    if (mesh.vertices[i+1]>maxy) maxy=mesh.vertices[i+1]; \r\n    if (mesh.vertices[i+2]>maxz) maxz=mesh.vertices[i+2]; \r\n  }  \r\n  return {minx,maxx, miny,maxy, minz, maxz};\r\n}\r\n\r\nfunction meshReport(): { smatreport: string; smeshreport: string}\r\n{\r\n  var rv = { smatreport: \"\", smeshreport: \"\" }\r\n  rv.smeshreport+=(\"mesh.indices.length=\"+mesh.indices.length+\" mesh.vertices.length=\"+mesh.vertices.length+\" mesh.vertexNormals.length=\"+mesh.vertexNormals.length+\"<br />\");\r\n  rv.smeshreport+=(\"mesh.vertexMaterialIndices.length=\"+mesh.vertexMaterialIndices.length); //+\" vertices.length=\"+mesh.vertices.length+\" vertexNormals.length=\"+mesh.vertexNormals.length);\r\n\r\n  var mats = matlib.materials;    \r\n  for (let key in mats) {\r\n    var value = mats[key];\r\n    rv.smatreport+=value.name+ \" dif=\"+value.diffuse+\" amb=\"+value.ambient+\" emis=\"+value.emissive+\" spec=\"+value.specular+\" mapamb=\" +value.mapDiffuse.filename+\" ill=\"+value.illumination+\"<br/>\";\r\n  }\r\n  meshMinMax = MeshMinMax();\r\n  rv.smeshreport+=\"<br/>\";\r\n  rv.smeshreport+=\"minx=\"+meshMinMax.minx+\", maxx=\"+meshMinMax.maxx+\"<br />\";\r\n  rv.smeshreport+=\"miny=\"+meshMinMax.miny+\", maxy=\"+meshMinMax.maxy+\"<br />\";\r\n  rv.smeshreport+=\"minz=\"+meshMinMax.minz+\", maxz=\"+meshMinMax.maxz+\"<br />\";\r\n  return rv;\r\n}\r\n\r\n//--- FETCH OBJ+MTL --------------------------------------------------------------------------------------\r\n\r\nasync function FetchText(cparcelname: string){\r\n  const res = await fetch(cparcelname);\r\n  var b= await res.arrayBuffer();\r\n  var enc = new TextDecoder(\"utf-8\");\r\n  return enc.decode(b);\r\n}\r\n\r\nexport async function FetchImage(cparcelname: string): Promise<ArrayBuffer> {\r\n  const res = await fetch(cparcelname);\r\n  return res.arrayBuffer();\r\n}\r\n\r\nexport async function asyncFetchObjMtl(cobjname: string, cmatname: string)\r\n{  \r\n  var abobj = await FetchText(cobjname);\r\n  var abmtl = await FetchText(cmatname);\r\n    \r\n  matlib = new MaterialLibrary(abmtl);     \r\n  if (matlib)\r\n    {\r\n      var l = matlib.materials[\"Material\"];\r\n      if (l!=undefined) console.log(\"ambient=\"+l.ambient+\" diffuse=\"+l.diffuse+\" specular=\"+l.specular);     \r\n      var cMeshOptions =  {           \r\n          enableWTextureCoord: false,\r\n          calcTangentsAndBitangents: false,\r\n          materials:  matlib.materials\r\n        };       \r\n      mesh = new Mesh(abobj, cMeshOptions);\r\n      if (mesh) {\r\n          mesh.addMaterialLibrary(matlib);\r\n          var rv = meshReport();\r\n          const mydiv: HTMLDivElement = document.querySelector(\"#cdiv\")!;\r\n          var cstyle = \"<style> thead {color: green;} tbody {color: blue;}tfoot {color: red;}table, th, td { border: 1px solid black;}</style>\";\r\n          if (mydiv) mydiv.innerHTML = cstyle+\"<table><thead><tr><th style='horizontal-align:left'>MTL Material</th><th>OBJ Mesh</th></tr></thead><tbody><tr><td style='vertical-align:top;width:600px'>\"+rv.smatreport +\"</td><td style='vertical-align:top'>\"+rv.smeshreport+\"</td></tr></tbody></table>\";     \r\n       } else  console.log(\"object file  \"+cobjname+\" could not be read.\");\r\n     } else console.log(\"materials file \"+cmatname+\" could not be read\"); \r\n}\r\n\r\n//===========================================================================================================================================\r\n//===========================================================================================================================================\r\n\r\nexport function GetDeclaredObjMtl()\r\n{  \r\n   console.log(\"strings fetched\");\r\n   var abobj= cubegeo;\r\n   var abmtl= cubemat;\r\n   //const arr = abobj.toString().replace(/\\r\\n/g,'\\n').split('\\n');\r\n   if (OBJ)\r\n  {    \r\n      matlib = new MaterialLibrary(abmtl);\r\n      if (matlib)\r\n      {    \r\n        var l = matlib.materials[\"Material\"];\r\n        console.log(\"Found material: \"+l );\r\n        if (l!=undefined) console.log(\"ambient=\"+l.ambient+\" diffuse=\"+l.diffuse+\" specular=\"+l.specular+\" l.illum=\"+l.illumination);\r\n        var cMeshOptions =  {\r\n               enableWTextureCoord: false,\r\n               calcTangentsAndBitangents: false,\r\n               materials: matlib.materials\r\n        };\r\n        mesh = new Mesh(abobj, cMeshOptions);\r\n        if (mesh) {\r\n          mesh.addMaterialLibrary(matlib);\r\n          var rv = meshReport();     \r\n          const mydiv: HTMLDivElement = document.querySelector(\"#cdiv\")!;\r\n          var cstyle = \"<style> thead {color: green;} tbody {color: blue;}tfoot {color: red;}table, th, td { border: 1px solid black;}</style>\";\r\n          if (mydiv) mydiv.innerHTML = cstyle+\"<table><thead><tr><th style='horizontal-align:left'>MTL Material</th><th>OBJ Mesh</th></tr></thead><tbody><tr><td style='vertical-align:top;width:auto'>\"+rv.smatreport +\"</td><td style='width:600px;vertical-align:top'>\"+rv.smeshreport+\"</td></tr></tbody></table>\";    \r\n        } else  console.log(\"Cube obj in memory could not be read.\");\r\n     } else console.log(\"Cube obj materials could not be read\"); \r\n   } else console.log(\"OBJ import library not accessible\");  \r\n    \r\n}\r\n\r\n//========================================================================================================================================================\r\n\r\n/*\r\n  function* triangulate(elements: string[]) {\r\n    if (elements.length <= 3) {\r\n        yield elements;\r\n    } else if (elements.length === 4) {\r\n        yield [elements[0], elements[1], elements[2]];\r\n        yield [elements[2], elements[3], elements[0]];\r\n    } else {\r\n        for (let i = 1; i < elements.length - 1; i++) {\r\n            yield [elements[0], elements[i], elements[i + 1]];\r\n        }\r\n    }\r\n}\r\n   //--- my own converter for  the obj\r\n   const currentMaterialIndex = 0;\r\n   const currentObjectByMaterialIndex = 0;\r\n   const enableWTextureCoord=false;\r\n   const verts = [];\r\n   const vertNormals = [];\r\n   const textures = [];\r\n   const faces = [];\r\n   const unpackedverts = [];\r\n   const unpackedtextures = [];\r\n   const unpackednorms = [];\r\n   const unpackedhashindices: { [k: string]: number } = {}\r\n   const unpackedindices: number[][] = [];\r\n   var unpackedindex = 0;\r\n   unpackedindices.push([]);\r\n   for(let s of arr) {\r\n    const elements = s.split(' ');\r\n    elements.shift();\r\n    if (s.startsWith('v '))\r\n         verts.push(...elements);\r\n       else\r\n       if (s.startsWith('vt '))\r\n         textures.push(...elements);\r\n       else\r\n       if (s.startsWith('vn '))\r\n         vertNormals.push(...elements);\r\n       else \r\n       if (s.startsWith('f '))\r\n       {\r\n        const triangles = triangulate(elements);\r\n        for (let e of elements) console.log(\"[\"+e+\"] \");\r\n        var ntr=0;\r\n        for (const triangle of triangles) {\r\n            var srep = \"\";            \r\n            for (const trianglepoint of triangle)\r\n            {\r\n              const hash = trianglepoint + \",\" + currentMaterialIndex;\r\n              if (hash in unpackedhashindices) {\r\n                unpackedindices[currentObjectByMaterialIndex].push(unpackedhashindices[hash]);\r\n                srep+=\"{ Ref: \"+hash+\" },\";\r\n               } else \r\n                  {\r\n                   const vertex = trianglepoint.split(\"/\");\r\n                   var v1 = +verts[(+vertex[0] - 1) * 3 + 0];\r\n                   var v2 = +verts[(+vertex[0] - 1) * 3 + 1];\r\n                   var v3 = +verts[(+vertex[0] - 1) * 3 + 2];\r\n                   unpackedverts.push(v1);\r\n                   unpackedverts.push(v2);\r\n                   unpackedverts.push(v3);      \r\n                   srep+=\"{ V[\"+v1+\",\"+v2+\",\"+v3+\"], \";     \r\n                   if (textures.length) {\r\n                     const stride = enableWTextureCoord ? 3 : 2;\r\n                     var t1=+textures[(+vertex[1] - 1) * stride + 0];\r\n                     var t2=+textures[(+vertex[1] - 1) * stride + 1];\r\n                     unpackedtextures.push(t1);\r\n                     unpackedtextures.push(t2);\r\n                     srep+=\"T[\"+t1+\",\"+t2+\"], \";\r\n                     if (enableWTextureCoord) {\r\n                       unpackedtextures.push(+textures[(+vertex[1] - 1) * stride + 2]);\r\n                      }\r\n                   } \r\n                   const normalIndex = vertex.length - 1;\r\n                   var n1 = +vertNormals[(+vertex[normalIndex] - 1) * 3 + 0];\r\n                   var n2 = +vertNormals[(+vertex[normalIndex] - 1) * 3 + 1];\r\n                   var n3 = +vertNormals[(+vertex[normalIndex] - 1) * 3 + 2];\r\n                   unpackednorms.push(n1);\r\n                   unpackednorms.push(n2);\r\n                   unpackednorms.push(n3);           \r\n                   srep+=\"N[\"+n1+\",\"+n2+\",\"+n3+\"] }, \";\r\n                   unpackedhashindices[hash] = unpackedindex;\r\n                   unpackedindices[currentObjectByMaterialIndex].push(unpackedhashindices[hash]);\r\n                   unpackedindex += 1;     \r\n                  }                         \r\n            }\r\n            console.log(\"Tr: { \"+srep + \"}\") ;\r\n            ntr+=triangle.length;\r\n          }\r\n        console.log(\"ntr=\"+ntr);\r\n        faces.push(...elements);   \r\n       }   \r\n    \r\n  }\r\n*/  \r\n/*\r\n  console.log(\"Indices found:\");\r\n  unpackedindices[currentObjectByMaterialIndex].forEach((num)=>{console.log(num+\" \"); });\r\n  console.log(\"Norms found:\");\r\n  unpackednorms.forEach((num)=>{console.log(num+\" \"); });\r\n  console.log(\"Vertices found:\");\r\n  unpackedverts.forEach((num)=>{console.log(num+\" \"); });\r\n*/\r\n\r\n//========================================================================================================================================================\r\n\r\nconst cubemat = `# Blender MTL File: 'None'\r\n# Material Count: 11\r\n\r\nnewmtl Material\r\nNs 323.999994\r\nKa 1.000000 1.000000 0.000000\r\nKd 0.500000 0.500000 1.000000\r\nKs 0.500000 0.500000 1.000000\r\nKe 0.0 1.0 0.0\r\nNi 1.000000\r\nd 1.000000\r\nillum 6\r\n\r\nnewmtl Material2\r\nNs 323.999994\r\nKa 0.000000 1.000000 0.000000\r\nKd 1.000000 0.500000 1.000000\r\nKs 1.000000 1.000000 0.000000\r\nKe 0.0 1.0 0.0\r\nNi 1.000000\r\nd 1.000000\r\nillum 6\r\n`;\r\n\r\nconst cubegeo = `# Blender v2.80 (sub 75) OBJ File: ''\r\n# www.blender.org\r\nmtllib cube2.mtl\r\no Cube\r\nv 1.000000 1.000000 -1.000000\r\nv 1.000000 -1.000000 -1.000000\r\nv 1.000000 1.000000 1.000000\r\nv 1.000000 -1.000000 1.000000\r\nv -1.000000 1.000000 -1.000000\r\nv -1.000000 -1.000000 -1.000000\r\nv -1.000000 1.000000 1.000000\r\nv -1.000000 -1.000000 1.000000\r\nv 4.000000 1.000000 -1.000000\r\nv 4.000000 -1.000000 -1.000000\r\nv 4.000000 1.000000 1.000000\r\nv 4.000000 -1.000000 1.000000\r\nv 3.000000 1.000000 -1.000000\r\nv 3.000000 -1.000000 -1.000000\r\nv 3.000000 1.000000 1.000000\r\nv 3.000000 -1.000000 1.000000\r\nvt 0.375000 0.000000\r\nvt 0.625000 0.000000\r\nvt 0.625000 0.250000\r\nvt 0.375000 0.250000\r\nvt 0.375000 0.250000\r\nvt 0.625000 0.250000\r\nvt 0.625000 0.500000\r\nvt 0.375000 0.500000\r\nvt 0.625000 0.750000\r\nvt 0.375000 0.750000\r\nvt 0.625000 0.750000\r\nvt 0.625000 1.000000\r\nvt 0.375000 1.000000\r\nvt 0.125000 0.500000\r\nvt 0.375000 0.500000\r\nvt 0.375000 0.750000\r\nvt 0.125000 0.750000\r\nvt 0.625000 0.500000\r\nvt 0.875000 0.500000\r\nvt 0.875000 0.750000\r\nvn 0.0000 1.0000 0.0000\r\nvn 0.0000 0.0000 1.0000\r\nvn -1.0000 0.0000 0.0000\r\nvn 0.0000 -1.0000 0.0000\r\nvn 1.0000 0.0000 0.0000\r\nvn 0.0000 0.0000 -1.0000\r\nusemtl Material\r\ns off\r\nf 1/1/1 5/2/1 7/3/1 3/4/1\r\nf 4/5/2 3/6/2 7/7/2 8/8/2\r\nf 8/8/3 7/7/3 5/9/3 6/10/3\r\nf 6/10/4 2/11/4 4/12/4 8/13/4\r\nf 2/14/5 1/15/5 3/16/5 4/17/5\r\nf 6/18/6 5/19/6 1/20/6 2/11/6\r\nusemtl Material2\r\nf 9/1/1 13/2/1 15/3/1 11/4/1\r\nf 12/5/2 11/6/2 15/7/2 16/8/2\r\nf 16/8/3 15/7/3 13/9/3 14/10/3\r\nf 14/10/4 10/11/4 12/12/4 16/13/4\r\nf 10/14/5 9/15/5 11/16/5 12/17/5\r\nf 14/18/6 13/19/6 9/20/6 10/11/6\r\n`;\r\n","\r\nexport function getFileNamesKoenigsEgg(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[]  }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/koenigsegg/koenigsegg.obj\");\r\n  var cobjname = require('./resources/models/koenigsegg/koenigsegg.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/koenigsegg/koenigsegg.mtl\"); \r\n  var cmatname = require('./resources/models/koenigsegg/koenigsegg.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\nexport function getFileNamesStone(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[]  }\r\n{\r\n // var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n // cfiles.push({fName:'stone12021_01.png',fNameResolved:require('./resources/models/stone/stone12021_01.png')});\r\n // cfiles.push({fName:'Material.001_diffuse.png',fNameResolved:require('./resources/models/stone/Material.001_diffuse.png')});\r\n var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n cfiles.push({fName:'stone12021_01.jpg',fNameResolved:require('./resources/models/stone/stone12021_01.jpg')});\r\n\r\n  console.log(\"Resolve: ./resources/models/stone/stone12021_01.obj\");\r\n  var cobjname = require('./resources/models/stone/stone12021_01.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/stone/stone12021_01.mtl\"); \r\n  var cmatname = require('./resources/models/stone/stone12021_01.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\nexport function getFileNamesBuilding(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  cfiles.push({fName:'stone12021_01.png',fNameResolved:require('./resources/models/stone/stone12021_01.png')});\r\n  \r\n  console.log(\"Resolve: ./resources/models/building/building_04a.obj\");\r\n  var cobjname = require('./resources/models/building/building_04a.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/building/building_04.mtl\"); \r\n  var cmatname = require('./resources/models/building/building_04.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\nexport function getFileNamesGreenhouse(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  cfiles.push({fName:'greenhouse_flooring.png',fNameResolved:require('./resources/models/greenhouse/greenhouse_flooring.png')});\r\n  \r\n  console.log(\"Resolve: ./resources/models/greenhouse/greenhouse.obj\");\r\n  var cobjname = require('./resources/models/greenhouse/greenhouse.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/greenhouse/greenhouse.mtl\"); \r\n  var cmatname = require('./resources/models/greenhouse/greenhouse.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\nexport function getFileNamesCat(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/cat/12221_Cat_v1_l3.obj\");\r\n  var cobjname = require('./resources/models/cat/12221_Cat_v1_l3.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/cat/12221_Cat_v1_l3.mtl\"); \r\n  var cmatname = require('./resources/models/cat/12221_Cat_v1_l3.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\nexport function getFileNamesRubik(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/rubik/xrubik.obj\");\r\n  var cobjname = require('./resources/models/rubik/xrubik.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/rubik/xrubik.mtl\"); \r\n  var cmatname = require('./resources/models/rubik/xrubik.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles  };\r\n}\r\n\r\nexport function getFileNamesCube(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  cfiles.push({fName:'clover.jpg',fNameResolved:require('./resources/models/stone/clover.jpg')});\r\n  cfiles.push({fName:'Di-3d.png',fNameResolved:require('./resources/models/stone/Di-3d.png')});\r\n  cfiles.push({fName:'stone12021_01.png',fNameResolved:require('./resources/models/stone/stone12021_01.png')});\r\n  cfiles.push({fName:'zelenskyycube.jpg',fNameResolved:require('./resources/models/stone/zelenskyycube.jpg')});\r\n  \r\n  console.log(\"Resolve: ./resources/models/cube/cube2.obj\");\r\n  var cobjname = require('./resources/models/cube/cube2.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/cube/cube2.mtl\"); \r\n  var cmatname = require('./resources/models/cube/cube2.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\n/*\r\nexport function getFileNamesBike(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/bike/bike.obj\");\r\n  var cobjname = require('./resources/models/bike/bike.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/bike/bike.mtl\"); \r\n  var cmatname = require('./resources/models/bike/bike.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n*/\r\n\r\nexport function getFileNamesPlane(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/plane/plane.obj\");\r\n  var cobjname = require('./resources/models/plane/plane.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/plane/plane.mtl\"); \r\n  var cmatname = require('./resources/models/plane/plane.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\n/*\r\nexport function getFileNamesMario(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/mario/mario-sculpture.obj\");\r\n  var cobjname = require('./resources/models/mario/mario-sculpture.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/mario/mario-sculpture.mtl\"); \r\n  var cmatname = require('./resources/models/mario/mario-sculpture.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n*/\r\n\r\nexport function getFileNamesChair2(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/chair/willisau_riale.obj\");\r\n  var cobjname = require('./resources/models/chair/willisau_riale.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/chair/willisau_riale.mtl\"); \r\n  var cmatname = require('./resources/models/chair/willisau_riale.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\nexport function getFileNamesChair(): { cobjname: string, cmatname: string, cfiles:{fName:string, fNameResolved:string}[] }\r\n{\r\n  var cfiles: {fName:string, fNameResolved:string}[] = [];\r\n  console.log(\"Resolve: ./resources/models/chair/chair.obj\");\r\n  var cobjname = require('./resources/models/chair/chair.obj');\r\n  console.log(\"Resolved: cparcelname=\"+cobjname);\r\n \r\n  console.log(\"Resolve: ./resources/models/chair/chair.mtl\"); \r\n  var cmatname = require('./resources/models/chair/chair.mtl');\r\n  console.log(\"Resolved: cparcelname=\"+cmatname);\r\n\r\n  return { cobjname, cmatname, cfiles };\r\n}\r\n\r\n","import * as twgl from \"./../node_modules/twgl.js\";           // Greg's work (lib)\r\nimport { m4 } from \"./../node_modules/twgl.js\";              // Greg's work (lib)\r\nimport * as OBJ from './../node_modules/webgl-obj-loader';   // read geometry from .obj / .mtl files (lib)\r\n\r\nimport * as mobj from \"./matobjreader\"       // read geometry from .obj / .mtl files (interface)\r\nimport * as mobjfiles from \"./matobjfiles\"   // read geometry from .obj / .mtl files (resources)\r\n\r\nimport * as mtls from \"./baseapp/mouselistener\";     // connect events for buttons and wheel\r\nimport * as camhandler from \"./baseapp/camhandler\"   // camera projection\r\n\r\nimport  * as datgui from \"dat.gui\";\r\n\r\n\r\ntype Tuniforms = {\r\n    u_lightWorldPos: number[]\r\n    u_ambient: number[],\r\n    u_specular: number[],\r\n    u_emissive: number[],\r\n    u_shininess: number,\r\n    u_specularFactor: number,\r\n    u_diffuse: WebGLTexture,\r\n    u_difflightintensity:  number,\r\n    u_speclightintensity:  number,\r\n  };\r\n\r\nexport class ObjMtlImport\r\n{ \r\n  \r\n  objMtlImportParameters = {\r\n    move: false,\r\n    speed: 0.4,\r\n    texture: 'geotriangle2',\r\n    color0: \"#00A000\",\r\n  };\r\n  \r\n    static instance: ObjMtlImport|undefined;\r\n\r\n    time: number = 0;\r\n    dtime: number = 0.01;\r\n       \r\n    private gl: WebGL2RenderingContext;           // connect to WebGL2 and Html5Canvas\r\n    private app: mtls.MouseListener | undefined;  // connect mouse and keyboard to camera and light\r\n    private cam: camhandler.Camera | undefined;               // create a camera in the constructor of this object\r\n        \r\n    private  vertexPositionAttribute: number=0;  // address of positions buffer in shader\r\n    private  normalAttribute: number=0;          // address of normals buffer in shader\r\n    private  texCoordAttribute : number=0;       // address of texture coords in shader\r\n    private programInfo:twgl.ProgramInfo | undefined;\r\n    private texs:WebGLTexture[] = []; \r\n    private mats:OBJ.IndexToMaterial|undefined|null;\r\n           \r\n    private uniforms: Tuniforms = \r\n        {\r\n          u_lightWorldPos: [0, 0, 0],\r\n          u_ambient: [0, 0, 0, 1],\r\n          u_specular: [0, 0, 0, 1],\r\n          u_emissive: [0, 0, 0, 1],\r\n          u_shininess: 0,\r\n          u_specularFactor: 0.0,\r\n          u_diffuse: this.texs[0],\r\n          u_difflightintensity:  0,\r\n          u_speclightintensity:  0\r\n        };\r\n\r\n    private resolvedfilenames: Map<string, string>= new Map<string, string>(); \r\n    private resolvedtextures: Map<string, WebGLTexture>= new Map<string, WebGLTexture>(); \r\n\r\n    private imgs: HTMLImageElement[] = [];\r\n    private imgsa: ArrayBuffer[] = [];\r\n    \r\n  constructor( cgl: WebGL2RenderingContext, capp: mtls.MouseListener | undefined , UrlPars:Map<string,string>)\r\n  {\r\n    ObjMtlImport.instance = this;\r\n    this.app = capp;\r\n    this.gl = cgl;     \r\n    twgl.setAttributePrefix(\"a_\");\r\n  }\r\n\r\n  main(gl:WebGL2RenderingContext,UrlPars:Map<string,string>)\r\n  {\r\n    \r\n    this.getFiles(UrlPars).then(() =>  // Fetch obj/mtl content\r\n    { \r\n      var cc = (gl.canvas as HTMLCanvasElement).parentNode;\r\n      var ccd= (cc as HTMLDivElement);\r\n      ccd.style.backgroundColor =  this.objMtlImportParameters.color0;\r\n   \r\n      if (mobj.mesh)\r\n      {\r\n        console.log(\"=> Constructor - create programInfo\");\r\n        this.programInfo = twgl.createProgramInfo(this.gl, [this.vs, this.fs]);\r\n    \r\n        console.log(\"=> Constructor - register attributes\");\r\n        this.vertexPositionAttribute = this.gl.getAttribLocation(this.programInfo.program,  \"position\");\r\n        this.gl.enableVertexAttribArray(this.vertexPositionAttribute);\r\n        this.normalAttribute = this.gl.getAttribLocation(this.programInfo.program, \"normal\");\r\n        this.gl.enableVertexAttribArray(this.normalAttribute);\r\n        this.texCoordAttribute = this.gl.getAttribLocation(this.programInfo.program, \"texcoord\");\r\n        this.gl.enableVertexAttribArray(this.texCoordAttribute);\r\n\r\n        // Create a camera\r\n        var szx=mobj.meshMinMax.maxx-mobj.meshMinMax.minx;\r\n        var szy=mobj.meshMinMax.maxy-mobj.meshMinMax.miny;\r\n        var szz=mobj.meshMinMax.maxz-mobj.meshMinMax.minz;\r\n        var szobj = Math.sqrt(szx*szx+szy*szy+szz*szz);\r\n        this.cam = camhandler.Camera.createCamera(this.gl,UrlPars!,camhandler.Camera.CamYUp, szobj*2, this.app!);\r\n        this.cam.translateTarget( [(mobj.meshMinMax.maxx+mobj.meshMinMax.minx)/2,\r\n        (mobj.meshMinMax.maxy+mobj.meshMinMax.miny)/2, \r\n        (mobj.meshMinMax.maxz+mobj.meshMinMax.minz)/2]);\r\n        this.cam.zoominVelocity = szobj/40.0;\r\n      \r\n        // Prepare obj mesh for display\r\n        console.log(\"obj/mtl mesh read ok\");\r\n        mobj.CreateMeshWithBuffers(this.gl); // unpack index and positions\r\n        mobj.PrepareIndexBuffers(this.gl );  // for each material, set up an index buffer\r\n        console.log(\"<= Prepare obj/mtl mesh <= buffers ok\");\r\n       \r\n        // Fetch file texture content, start rendering when all textures read\r\n        this.Prepare();   \r\n\r\n       \r\n      }\r\n      else console.log(\"ERROR: obj/mtl no mesh could be created.\");  \r\n    }); // getfiles then({})\r\n  }\r\n\r\n      \r\n\r\n  gui: datgui.GUI|null=null;\r\n\r\n  onChangeTextureCombo(value? : any)\r\n  {\r\n    var thisinstance = ObjMtlImport.instance!;\r\n    //console.log(\"we are in texture=[\"+value+\"] obj.speed=\"+ thisinstance.imagespaceParameters.speed);\r\n  //  thisinstance.currentTexture = value;\r\n  //  console.log(\"set currentTexture to [\"+value+\"]\");\r\n  //  if (value==\"clover\") thisinstance.ny=8.0; else \r\n  //  if (value==\"geotriangle2\") thisinstance.ny=2.0; else thisinstance.ny=4.0;\r\n    thisinstance.app!.mouse.totaldelta = 0;\r\n  }\r\n\r\n  onChangeColorValue(value? : any)\r\n  {\r\n    //console.log(\"we are in color=[\"+value+\"]\");\r\n    var thisinstance = ObjMtlImport.instance!;\r\n    if (thisinstance.gl!=null)\r\n    {\r\n      var cc = (thisinstance.gl!.canvas as HTMLCanvasElement).parentNode;\r\n      var ccd= (cc as HTMLDivElement);\r\n      ccd.style.backgroundColor =  value;\r\n    }\r\n  }\r\n\r\n  public initGUI(parameters: {move:boolean, speed:number, texture:string, color0:string})\r\n  {\r\n    this.objMtlImportParameters=parameters;\r\n    var cc = (this.gl.canvas as HTMLCanvasElement).parentNode;\r\n    var ccd= (cc as HTMLDivElement);\r\n    ccd.style.backgroundColor =  this.objMtlImportParameters.color0;\r\n\r\n      // park the dat.gui box in the linksdiv below the links, in closed state\r\n      var gui = new datgui.GUI( { autoPlace: false } );\r\n      gui.domElement.id = 'gui_drawimagespace';\r\n      document.getElementById(\"linksdiv\")!.append( gui.domElement);\r\n      gui.close();\r\n\r\n      // connect viewmodel\r\n      gui.remember(this.objMtlImportParameters);\r\n    \r\n      // Checkbox for animation on/off\r\n  //    gui.add(this.objMtlImportParameters, 'move');\r\n     \r\n      // Slider for animation speed\r\n   //   gui.add(this.objMtlImportParameters, 'speed').min(0.2).max(1).step(0.005);\r\n   \r\n      // Color dialog sets background color\r\n      var cel3 = gui.addColor(this.objMtlImportParameters, 'color0');\r\n      cel3.onChange( this.onChangeColorValue);\r\n     \r\n      // Combobox texture from accepted values\r\n   //   var cel2 = gui.add(this.objMtlImportParameters, 'texture', [ 'geotriangle2','zelenskyy', 'clover', 'checker' ] );\r\n   //   cel2.onChange( this.onChangeTextureCombo);\r\n         \r\n      gui.updateDisplay();\r\n      return gui;\r\n    }\r\n\r\n//------------------------------------------------------------------------\r\n\r\n  async getFiles(UrlPars:Map<string,string>)\r\n  {\r\n    const useInMemoryObj = false;\r\n    if (useInMemoryObj) mobj.GetDeclaredObjMtl();\r\n    else {\r\n      var cresolvedfilepair = mobjfiles.getFileNamesCube();\r\n      if (UrlPars?.get(\"koenigsegg\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesKoenigsEgg();\r\n      if (UrlPars?.get(\"building\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesBuilding();\r\n      if (UrlPars?.get(\"chair\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesChair();\r\n      if (UrlPars?.get(\"chair2\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesChair2();\r\n      if (UrlPars?.get(\"cat\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesCat();\r\n      if (UrlPars?.get(\"plane\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesPlane();\r\n      if (UrlPars?.get(\"rubik\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesRubik();\r\n      if (UrlPars?.get(\"stone\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesStone();\r\n      if (UrlPars?.get(\"greenhouse\")!=undefined) cresolvedfilepair = mobjfiles.getFileNamesGreenhouse();\r\n      console.log(\"=> await \"+cresolvedfilepair.cobjname+\" \" +cresolvedfilepair.cmatname)\r\n      await mobj.asyncFetchObjMtl(cresolvedfilepair.cobjname, cresolvedfilepair.cmatname);\r\n      if (cresolvedfilepair.cfiles != undefined && cresolvedfilepair.cfiles.length>0)\r\n      {\r\n        console.log(\"<= await result\");\r\n        console.log(\"see resolved files: \"+cresolvedfilepair.cfiles.length);\r\n        cresolvedfilepair.cfiles.forEach(({fName, fNameResolved})=>\r\n        {\r\n          this.resolvedfilenames.set(fName,fNameResolved);\r\n          console.log(\"reg: \"+fName +\" => \"+fNameResolved)\r\n        });\r\n      } else\r\n        console.log(\"<= await no result\");  \r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------\r\n\r\n  LoadImage(gl: WebGL2RenderingContext, url: string, onload: (gl: WebGL2RenderingContext, img:any)=>void) {\r\n    var img = new Image();\r\n    img.src = url;\r\n    img.onload = function() {\r\n        onload(gl, img);\r\n    };\r\n    return img;\r\n  };\r\n  \r\n   LoadImages(gl: WebGL2RenderingContext, istr:number, urls: string[], onload: (gl: WebGL2RenderingContext,istr: number)=>void) {\r\n    var img = new Image();\r\n    img.src = urls[istr];\r\n    img.onload = () => {\r\n        console.log(\"load image: [\"+urls[istr]);\r\n        istr = this.imgs.push( img);\r\n        if (istr<urls.length)\r\n          this.LoadImages(gl, istr, urls, onload);\r\n         else onload(gl,istr  );\r\n    };\r\n    return img;\r\n  };\r\n  \r\n  //--------------------------------------------------------------------\r\n\r\n  Prepare()\r\n  {  \r\n      console.log(\"=> Prepare - get materials\");\r\n      this.mats = mobj.mesh.materialsByIndex;\r\n      if (this.mats == null || this.mats == undefined) return;\r\n      console.log(\"=> Prepare - found \"+mobj.mesh.materialNames.length+\" materials in mtl\");\r\n      for (var i=0; i<mobj.mesh.materialNames.length; i++)\r\n      {     \r\n        var s1 = this.mats[i]; \r\n        if (s1!=undefined)\r\n        { \r\n          console.log(\"found  material i=\"+i+\" name=\"+mobj.mesh.materialNames[i]);\r\n          var nn:number[] = [];\r\n          for(var j=0; j<4; j++)\r\n          {\r\n            nn.push(255*this.mats[i].diffuse[0]); // create mini texture for diffuse color\r\n            nn.push(255*this.mats[i].diffuse[1]);\r\n            nn.push(255*this.mats[i].diffuse[2]);\r\n            nn.push(255);\r\n          }       \r\n          this.texs.push(twgl.createTexture(this.gl, {\r\n          min: this.gl.NEAREST,\r\n          mag: this.gl.NEAREST,\r\n          src: nn \r\n        }));\r\n        var sfile = this.mats[i].mapDiffuse;\r\n        if (sfile.filename!=undefined && sfile.filename!=\"\")      \r\n          console.log(\"Prepare - found material texture file reference: [\"+sfile.filename+\"]\");             \r\n       }  \r\n      }\r\n    var imageUrls: string[] = [];\r\n    var imageUrlKeys: string[] = [];\r\n    if (this.resolvedfilenames.keys!=undefined)\r\n    this.resolvedfilenames.forEach((value: string, key: string) => {\r\n      console.log(\"Prepare \"+key + \" set texture file load: \"+value);\r\n      imageUrls.push(value);\r\n      imageUrlKeys.push(key);\r\n    });\r\n    if (imageUrls.length>0) // there are file textures\r\n    {\r\n      // ok await FetchImage(imageUrls[0]).then((value:ArrayBuffer)=>imgsa.push(value));\r\n      // ok console.log(\"fetched image 0, byteLength=\"+imgsa[0].byteLength);\r\n\r\n      this.LoadImages(this.gl, 0, imageUrls,  (gl: WebGL2RenderingContext, istr:number) => {\r\n        console.log(\"Found \"+istr+\" file textures, expect \"+imageUrls.length);\r\n        for (var i=0; i<istr; i++)\r\n        {\r\n          var texture = gl.createTexture()!;\r\n          gl.bindTexture(gl.TEXTURE_2D,  texture);\r\n          gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n          //  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n          //  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n          gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB8, this.imgs[i].width, this.imgs[i].height);\r\n          gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGB, gl.UNSIGNED_BYTE, this.imgs[i]);\r\n          this.resolvedtextures.set(imageUrlKeys[i], texture);\r\n          console.log(\"Prepare - register resolved texture \"+i+\" \"+imageUrlKeys[i]+\" width=\"+this.imgs[i].width+\" height=\"+this.imgs[i].height);\r\n        }\r\n        console.log(\"Prepare - texture itemSize=\"+mobj.meshWithBuffers.textureBuffer.itemSize);\r\n        console.log(\"Prepare - finish, there are \"+istr+\" file textures\");   \r\n            \r\n         this.time = 0; \r\n        twgl.resizeCanvasToDisplaySize(this.gl.canvas as HTMLCanvasElement);   \r\n        requestAnimationFrame(() => this.render(0));  \r\n  \r\n    });  // return from LoadImages()       \r\n  } else // no textures\r\n  {\r\n      console.log(\"Prepare - no textures, > requestAnimationFrame()\");\r\n      this.time = 0; \r\n      twgl.resizeCanvasToDisplaySize(this.gl.canvas as HTMLCanvasElement);   \r\n      requestAnimationFrame(() => this.render(0));      \r\n  }\r\n  console.log(\"Prepare - return\");\r\n}\r\n\r\n//--- render function ------------------------------------------------------------\r\n\r\n  prepareMaterial(i: number)\r\n  {\r\n      var ctexture: WebGLTexture = this.texs[i];  // for each material there is one preset diffuse texture\r\n      var cmaterial = this.mats![i];\r\n      var srep = \"\";\r\n      if (cmaterial.mapDiffuse == undefined) {  \r\n          srep = \"UNDEFINED TEXTURE\";\r\n          console.log(srep);\r\n      //    this.uniforms.u_diffuse = ctexture; \r\n      }\r\n      else\r\n      if (  cmaterial.mapDiffuse.filename.length>0)\r\n      {\r\n        var tx = this.resolvedtextures.get(cmaterial.mapDiffuse.filename);\r\n        if (tx==undefined || tx==null)\r\n          {\r\n              this.uniforms.u_diffuse = ctexture ;\r\n        //    srep = \"No resolve, use color texture i=\"+i;\r\n          } else\r\n          {     \r\n              this.uniforms.u_diffuse = ctexture = tx; // file texture\r\n           //   srep = \"Resolve, use file texture i=\"+i+\" \"+cmaterial.mapDiffuse!.filename;       \r\n          }\r\n      }\r\n       else\r\n       {  \r\n          this.uniforms.u_diffuse = ctexture = this.texs[i]; // diffuse color texture\r\n      //    srep=\"No filename, use color texture i=\"+i;\r\n       }\r\n      this.uniforms.u_emissive= [cmaterial.emissive[0],cmaterial.emissive[1],cmaterial.emissive[2],1]; \r\n      this.uniforms.u_ambient= [cmaterial.ambient[0],cmaterial.ambient[1],cmaterial.ambient[2],1]; \r\n      this.uniforms.u_specular= [cmaterial.specular[0],cmaterial.specular[1],cmaterial.specular[2],1]; \r\n      this.uniforms.u_shininess = cmaterial.illumination;\r\n      this.uniforms.u_difflightintensity = 1.0;\r\n      //  console.log(srep+\", ambient=\"+uniforms.u_ambient.toString()+\" specular=\"+uniforms.u_specular.toString()+\" emissive=\"+uniforms.u_emissive.toString()+\" shininess=\"+uniforms.u_shininess);\r\n      return ctexture;\r\n  }\r\n\r\n  render(dtime: number)\r\n  {\r\n    this.time+=dtime;\r\n    if (this.cam==undefined ||this.programInfo==undefined) return;    \r\n    this.uniforms.u_lightWorldPos= this.cam!.lightpos;\r\n    this.uniforms.u_difflightintensity=  this.cam!.difflightintensity;\r\n    this.uniforms.u_speclightintensity=  this.cam!.speclightintensity; \r\n    var world = m4.identity();\r\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\r\n    this.gl.enable(this.gl.DEPTH_TEST);\r\n    this.gl.enable(this.gl.CULL_FACE);\r\n\r\n   // this.gl.clearColor(this.objMtlImportParameters.color0. 0.0, 0.0, 0.0, 1.0);      \r\n   // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    this.cam.CamHandlingYUp(this.gl, this.app!, 1.0, 1.0);   \r\n    this.gl.useProgram(this.programInfo.program);\r\n    for (var i=0; i<this.texs.length; i++)\r\n    {     \r\n      if (this.mats![i]!=undefined)\r\n      {\r\n        var ctexture = this.prepareMaterial(i);\r\n       // this.gl.bindTexture(this.gl.TEXTURE_2D, ctexture);\r\n        twgl.setUniforms(this.programInfo, this.uniforms);\r\n        twgl.setUniforms(this.programInfo, {\r\n          u_viewInverse: this.cam.lookAt,\r\n          u_world: world,\r\n          u_worldInverseTranspose: m4.transpose(m4.inverse(world)),\r\n          u_worldViewProjection: m4.multiply(this.cam.viewProjection, world)\r\n        });\r\n        mobj.renderIndexBuffer(this.gl,  this.vertexPositionAttribute, this.normalAttribute, this.texCoordAttribute, i, 2, ctexture );\r\n      }\r\n    } // for\r\n    requestAnimationFrame(() => this.render(this.dtime)); \r\n  }\r\n\r\n//--- SHADERS ------------------------------------------------------------------------------------------------------\r\n\r\nvs = `#version 300 es\r\nuniform mat4 u_worldViewProjection;\r\nuniform vec3 u_lightWorldPos;\r\nuniform mat4 u_world;\r\nuniform mat4 u_viewInverse;\r\nuniform mat4 u_worldInverseTranspose;\r\n\r\n// ES3 convention\r\n//layout(location=0) in vec4 position;\r\n//layout(location=1) in vec3 normal;\r\n//layout(location=2) in vec2 texcoord;\r\n\r\nin vec4 position;\r\nin vec3 normal;\r\nin vec2 texcoord;\r\n\r\n// out, not varying\r\nout vec4 v_position;\r\nout  vec2 v_texCoord;\r\nout  vec3 v_normal;\r\nout  vec3 v_surfaceToLight;\r\nout  vec3 v_surfaceToView;\r\n\r\nvoid main() {\r\n  v_texCoord = texcoord;\r\n  v_position = u_worldViewProjection * position;\r\n  v_normal = (u_worldInverseTranspose * vec4(normal, 0)).xyz;\r\n  v_surfaceToLight = u_lightWorldPos - (u_world * position).xyz;\r\n  v_surfaceToView = (u_viewInverse[3] - (u_world * position)).xyz;\r\n  gl_Position = v_position;\r\n}\r\n`;\r\n\r\nfs = `#version 300 es\r\n precision mediump float;\r\n\r\n in vec4 v_position;\r\n in vec2 v_texCoord;\r\n in vec3 v_normal;\r\n in vec3 v_surfaceToLight;\r\n in vec3 v_surfaceToView;\r\n\r\n uniform vec3 u_lightDirection;\r\n uniform vec4 u_ambient;\r\n uniform sampler2D u_diffuse;\r\n uniform vec4 u_specular;\r\n uniform vec4 u_emissive;\r\n uniform float u_shininess;\r\n uniform float u_specularFactor;\r\n uniform float u_difflightintensity;\r\n uniform float u_speclightintensity;\r\n\r\n\r\n vec4 lit(float l ,float h, float m) {\r\n   return vec4(1.0,\r\n               max(l, 0.0),\r\n               (l > 0.0) ? pow(max(0.0, h), m) : 0.0,\r\n               1.0);\r\n }\r\n\r\n out vec4 glFragColor;\r\n\r\n void main() {\r\n  \r\n    vec3 normal = normalize(v_normal);\r\n    vec3 surfaceToViewDirection = normalize(v_surfaceToView);\r\n    vec3 halfVector = normalize(u_lightDirection + surfaceToViewDirection);\r\n\r\n    float fakeLight = dot(u_lightDirection, normal) * .5 + .5;\r\n    float specularLight = clamp(dot(normal, halfVector), 0.0, 1.0);\r\n\r\n\r\n  vec4 diffuseColor = texture(u_diffuse, v_texCoord);\r\n  float lightIntensity = dot(normalize(v_normal), normalize(v_surfaceToLight)); \r\n  lightIntensity = clamp( lightIntensity,0.0,u_difflightintensity);\r\n  vec4 ambientColor = u_ambient * 0.25;\r\n  diffuseColor = diffuseColor * lightIntensity;\r\n  float shininess = clamp(u_shininess / 10.0, 0.,u_speclightintensity);\r\n  vec4 emissiveColor = normalize(u_emissive) * shininess;\r\n  vec4 specColor = specularLight * u_specular;\r\n  vec4 outColor = diffuseColor + emissiveColor + specColor + ambientColor;\r\n  outColor[3] = 1.0;\r\n  glFragColor = outColor;\r\n }`;\r\n}","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as datgui from \"dat.gui\";\r\n\r\nimport * as camhandler from \"./../baseapp/camhandler\"   // camera projection\r\nimport * as scene from \"./scene\"\r\n\r\nimport { TAnimation1Parameters }  from \"./scene\"\r\n\r\nexport class MixedTextureScene implements scene.SceneInterface\r\n{\r\n    animationParameters: TAnimation1Parameters | undefined;\r\n    twglprograminfo: twgl.ProgramInfo[]|null=null;  // (not used in this animation)\r\n\r\n    sceneenv:number = 2;\r\n    positionLocation: number | undefined; // WebGLUniformLocation | undefined;\r\n    cameraPosition: [number,number,number] | undefined\r\n\r\n    matrixLocation:WebGLUniformLocation =0;\r\n    textureLocation1:WebGLUniformLocation =0;\r\n    textureLocation2:WebGLUniformLocation =0;\r\n    vao: WebGLVertexArrayObject | undefined;\r\n    modelXRotationRadians: number=0;\r\n    modelYRotationRadians: number=0;\r\n    texture1: WebGLTexture | undefined;\r\n    texture2: WebGLTexture | undefined;\r\n\r\n   // image: HTMLImageElement| undefined;\r\n    readimage: HTMLImageElement | undefined;\r\n \r\n    ctime: number = 0;\r\n\r\n    scenesize: number = 40;\r\n\r\n    vertexShaderSource = `#version 300 es\r\n    \r\n    // an attribute is an input (in) to a vertex shader.\r\n    // It will receive data from a buffer\r\n    in vec4 a_position;\r\n    in vec2 a_texcoord;\r\n\r\n    // A matrix to transform the positions by\r\n    uniform mat4 u_matrix;\r\n\r\n    // a varying to pass the texture coordinates to the fragment shader\r\n    out vec2 v_texcoord;\r\n\r\n    // all shaders have a main function\r\n    void main() {\r\n      // Multiply the position by the matrix.\r\n      gl_Position = u_matrix * a_position;\r\n\r\n      // Pass the texcoord to the fragment shader.\r\n      v_texcoord = a_texcoord;\r\n    }\r\n    `;\r\n\r\n    fragmentShaderSource = `#version 300 es\r\n\r\n    precision highp float;\r\n\r\n    // Passed in from the vertex shader.\r\n    in vec2 v_texcoord;\r\n\r\n    // The texture.\r\n    uniform sampler2D u_texture1;\r\n    uniform sampler2D u_texture2;\r\n\r\n    // we need to declare an output for the fragment shader\r\n    out vec4 outColor;\r\n\r\n    void main() {\r\n      outColor = texture(u_texture1, v_texcoord)/2. + texture(u_texture2, v_texcoord)/2.;\r\n      //outColor = texture(u_texture2, v_texcoord);\r\n    }\r\n    `;\r\n\r\n    constructor(gl: WebGL2RenderingContext)\r\n    {\r\n      this.twglprograminfo=new Array(2);\r\n      this.twglprograminfo![1] = twgl.createProgramInfo(gl, [this.vertexShaderSource, this.fragmentShaderSource]);\r\n    }\r\n\r\n    public extendGUI(gui: datgui.GUI)\r\n    {\r\n    // Slider for sling speed\r\n    gui.add(this.animationParameters!, 'movetail');\r\n\r\n     gui.add(this.animationParameters!, 'sling').min(9).max(120).step(1);\r\n     gui.add(this.animationParameters!, 'fov', 5.0,85.0,1.0 );\r\n \r\n     // Slider for shininess\r\n     //gui.add(this.animationParameters!, 'shininess').min(0).max(20.0).step(0.1);\r\n     gui.updateDisplay();\r\n    }\r\n\r\n\r\n    static degToRad(d: number) \r\n    {\r\n        return d * Math.PI / 180;\r\n    }\r\n\r\n    public resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n    \r\n    positionBuffer: WebGLBuffer|undefined;\r\n    positionAttributeLocation: number|undefined;\r\n \r\n    public restorePositionAttributeContext(gl: WebGL2RenderingContext, posBuffer: WebGLBuffer, posAttributeLocation: number, size: number)\r\n    {\r\n      // ==> 2023-03-01 restore this part to solve the clear error\r\n        // 1. Bind the buffer\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\n        // 2. Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        //var size = 2;          // 2 components per iteration\r\n        var type = gl.FLOAT;   // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        var offset = 0;        // start at the beginning of the buffer\r\n        gl.vertexAttribPointer(posAttributeLocation, size, type, normalize, stride, offset);\r\n        // 3. Enable this\r\n        gl.enableVertexAttribArray(posAttributeLocation);\r\n        // <==\r\n    }\r\n \r\n    public initScene(gl: WebGL2RenderingContext, cap:TAnimation1Parameters,dictpar:Map<string,string>,  p: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined)\r\n    {\r\n      this.animationParameters = cap;\r\n      // Define shader syntax for attributes\r\n      twgl.setAttributePrefix(\"a_\");\r\n      \r\n      // Camera: prepare vs-fs transformation\r\n      this.matrixLocation = gl.getUniformLocation(p.program, \"u_matrix\")!;\r\n      \r\n      // Create the position buffer and decide where the current vertex data needs to go ------------------------------------ \r\n      this.positionBuffer = gl.createBuffer()!;\r\n      this.positionAttributeLocation = gl.getAttribLocation(p.program, \"a_position\");    \r\n      this.vao = gl.createVertexArray()!\r\n      gl.bindVertexArray(this.vao);\r\n\r\n      this.restorePositionAttributeContext(gl,  this.positionBuffer,this.positionAttributeLocation!, 3);\r\n    /*  gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);      \r\n      gl.enableVertexAttribArray(this.positionAttributeLocation);  // turn on\r\n      // => Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n      var size = 3;          // 3 components per iteration\r\n      var type = gl.FLOAT;   // the data is 32bit floats\r\n      var normalize = false; // don't normalize the data\r\n      var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n      var offset = 0;        // start at the beginning of the buffer\r\n      gl.vertexAttribPointer(this.positionAttributeLocation, size, type, normalize, stride, offset);\r\n*/\r\n      // => Put setGeometry() result into position buffer \r\n      gl.bufferData(gl.ARRAY_BUFFER, this.setGeometry(gl), gl.STATIC_DRAW);\r\n    \r\n      // Create the texcoord buffer, make it the current ARRAY_BUFFER and copy in the texcoord values ---------------\r\n      var texcoordBuffer1 = gl.createBuffer();\r\n      var texcoordAttributeLocation = gl.getAttribLocation(p.program, \"a_texcoord\");\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer1);\r\n      gl.enableVertexAttribArray(texcoordAttributeLocation); // turn on\r\n      // => Tell the attribute how to get data out of texcoordBuffer (ARRAY_BUFFER)\r\n      var size = 2;          // 2 components per iteration\r\n      var type = gl.FLOAT;   // the data is 32bit floating point values\r\n      var normalize = true;  // convert from 0-255 to 0.0-1.0\r\n      var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next color\r\n      var offset = 0;        // start at the beginning of the buffer\r\n      gl.vertexAttribPointer(texcoordAttributeLocation, size, type, normalize, stride, offset);\r\n      // => Put setTexCoords() result into texcoord  buffer \r\n      gl.bufferData( gl.ARRAY_BUFFER, this.setTexcoords(gl), gl.STATIC_DRAW);\r\n\r\n      // Create textures ----------------------------------------------------------------------------------------------------\r\n    \r\n      // => fill texture1 with 3x2 pixels red checkerboard\r\n      this.texture1 = gl.createTexture()!;\r\n      this.textureLocation1 = gl.getUniformLocation(p.program, \"u_texture1\")!;\r\n      gl.bindTexture(gl.TEXTURE_2D, this.texture1);  \r\n      const level = 0;\r\n      const internalFormat = gl.R8;\r\n      const width = 3;\r\n      const height = 2;\r\n      const border = 0;\r\n      const format = gl.RED;\r\n      const ttype = gl.UNSIGNED_BYTE;\r\n      const data = new Uint8Array([128,  64, 128,0, 192,   0 ]);\r\n      gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, format, ttype, data);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  \r\n      // => fill texture2 with clover jpg\r\n      this.texture2 = gl.createTexture()!;\r\n      this.textureLocation2 = gl.getUniformLocation(p.program, \"u_texture2\")!;\r\n      gl.bindTexture(gl.TEXTURE_2D, this.texture2);  \r\n      console.log(\"=> Load texture bitmap\");\r\n      var fNameParcel = require('./../resources/models/stone/clover.jpg');\r\n      //this.image = undefined;\r\n      this.readimage = new Image();\r\n      this.readimage.src = fNameParcel;\r\n      this.readimage.onload = () => {\r\n      //  this.image = this.readimage!;\r\n      //  console.log(\"finished loading clover texture \"+this.image.width+\",\"+ this.image.height);\r\n        var mipLevel = 0;               // the largest mip\r\n        var internalFormat = gl.RGBA;   // format we want in the texture\r\n        var srcFormat = gl.RGBA;        // format of data we are supplying\r\n        var srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\r\n        gl.texImage2D(gl.TEXTURE_2D,\r\n                  mipLevel,\r\n                  internalFormat,\r\n                  srcFormat,\r\n                  srcType,\r\n                  this.readimage!);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);    \r\n        sceneReadyCallback(0);\r\n      }; \r\n    }\r\n\r\n    public drawScene(gl: WebGL2RenderingContext, cam: camhandler.Camera, time: number) \r\n    {\r\n      gl.bindVertexArray(this.vao!); //this always comes first !\r\n\r\n      // 2023-01-03 prevent clear issues\r\n      this.restorePositionAttributeContext(gl,  this.positionBuffer!,this.positionAttributeLocation!, 3);\r\n\r\n      gl.activeTexture(gl.TEXTURE0 + 0);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.texture1!);  \r\n      gl.uniform1i(this.textureLocation1, 0); // GPU will address unit 0 to find texture1\r\n\r\n      gl.activeTexture(gl.TEXTURE0 + 1);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.texture2!);  \r\n      gl.uniform1i(this.textureLocation2, 1); // GPU will address unit 1 to find texture2\r\n  \r\n      // Time elapsed\r\n      var deltaTime = time - this.ctime;\r\n      this.ctime = time;\r\n\r\n      // Animate the rotation\r\n      if (this.animationParameters!.movetail)\r\n      {\r\n        this.modelYRotationRadians += 0.1* this.animationParameters!.b.speed * deltaTime;\r\n        this.modelXRotationRadians += 0.005* this.animationParameters!.b.speed * this.animationParameters!.sling * deltaTime;   \r\n      }  \r\n      var matrix = m4.rotateX(cam.viewProjection, this.modelXRotationRadians);\r\n      matrix = m4.rotateY(matrix, this.modelYRotationRadians);     \r\n      \r\n      // Set projection matrix\r\n      gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\r\n      \r\n      // Bind the attribute/buffer set we want.\r\n      //gl.bindVertexArray(this.vao!);              \r\n     \r\n      // Draw the geometry.\r\n      var primitiveType = gl.TRIANGLES;\r\n      var offset = 0;\r\n      var count = 6 * 6;\r\n      gl.drawArrays(primitiveType, offset, count);\r\n    }\r\n\r\n    //================================================================================\r\n\r\n    setGeometry(gl: WebGL2RenderingContext) : Float32Array\r\n    {\r\n        var positions = new Float32Array(\r\n          [\r\n            -10.0, -10.0,  -10.0,\r\n            -10.0,  10.0,  -10.0,\r\n             10.0, -10.0,  -10.0,\r\n            -10.0,  10.0,  -10.0,\r\n             10.0,  10.0,  -10.0,\r\n             10.0, -10.0,  -10.0,\r\n        \r\n            -10.0, -10.0,   10.0,\r\n             10.0, -10.0,   10.0,\r\n            -10.0,  10.0,   10.0,\r\n            -10.0,  10.0,   10.0,\r\n             10.0, -10.0,   10.0,\r\n             10.0,  10.0,   10.0,\r\n        \r\n            -10.0,   10.0, -10.0,\r\n            -10.0,   10.0,  10.0,\r\n             10.0,   10.0, -10.0,\r\n            -10.0,   10.0,  10.0,\r\n             10.0,   10.0,  10.0,\r\n             10.0,   10.0, -10.0,\r\n        \r\n            -10.0,  -10.0, -10.0,\r\n             10.0,  -10.0, -10.0,\r\n            -10.0,  -10.0,  10.0,\r\n            -10.0,  -10.0,  10.0,\r\n             10.0,  -10.0, -10.0,\r\n             10.0,  -10.0,  10.0,\r\n        \r\n            -10.0,  -10.0, -10.0,\r\n            -10.0,  -10.0,  10.0,\r\n            -10.0,   10.0, -10.0,\r\n            -10.0,  -10.0,  10.0,\r\n            -10.0,   10.0,  10.0,\r\n            -10.0,   10.0, -10.0,\r\n        \r\n             10.0,  -10.0, -10.0,\r\n             10.0,   10.0, -10.0,\r\n             10.0,  -10.0,  10.0,\r\n             10.0,  -10.0,  10.0,\r\n             10.0,   10.0, -10.0,\r\n             10.0,   10.0,  10.0,\r\n        \r\n          ]);\r\n        return positions;\r\n        \r\n      }\r\n   \r\n\r\n      // Fill the buffer with texture coordinates the cube.\r\n    setTexcoords(gl: WebGL2RenderingContext): Float32Array {\r\n         return    new Float32Array(\r\n              [\r\n                0, 0,\r\n                0, 1,\r\n                1, 0,\r\n                0, 1,\r\n                1, 1,\r\n                1, 0,\r\n      \r\n                0, 0,\r\n                0, 1,\r\n                1, 0,\r\n                1, 0,\r\n                0, 1,\r\n                1, 1,\r\n      \r\n                0, 0,\r\n                0, 1,\r\n                1, 0,\r\n                0, 1,\r\n                1, 1,\r\n                1, 0,\r\n      \r\n                0, 0,\r\n                0, 1,\r\n                1, 0,\r\n                1, 0,\r\n                0, 1,\r\n                1, 1,\r\n      \r\n                0, 0,\r\n                0, 1,\r\n                1, 0,\r\n                0, 1,\r\n                1, 1,\r\n                1, 0,\r\n      \r\n                0, 0,\r\n                0, 1,\r\n                1, 0,\r\n                1, 0,\r\n                0, 1,\r\n                1, 1,\r\n      \r\n            ]);\r\n      }\r\n      \r\n}\r\n","import { m4 } from \"twgl.js\";\r\nimport * as camhandler from \"./../baseapp/camhandler\"\r\nimport {TAnimation1Parameters} from \"./scene\"\r\n\r\nexport class basescene\r\n{\r\n animationParameters: TAnimation1Parameters | undefined;\r\n\r\n worldViewProjectionLocation: WebGLUniformLocation | undefined ;   // u_worldViewProjection\r\n worldInverseTransposeLocation: WebGLUniformLocation | undefined ; // u_worldInverseTranspose\r\n worldLocation: WebGLUniformLocation | undefined ;                 // u_world\r\n\r\n modelXRotationRadians: number = 0.0;\r\n modelYRotationRadians: number = 0.0;\r\n\r\n vaoSingleObject: WebGLVertexArrayObject | undefined;\r\n positionBuffer: WebGLBuffer|undefined;\r\n positionAttributeLocation: number|undefined;\r\n  \r\n public initMatrixUniforms(gl: WebGL2RenderingContext, program: WebGLProgram)\r\n {\r\n  // lookup uniforms\r\n  this.worldViewProjectionLocation = gl.getUniformLocation(program, \"u_worldViewProjection\")!;\r\n  this.worldInverseTransposeLocation = gl.getUniformLocation(program, \"u_worldInverseTranspose\")!;\r\n  this.worldLocation = gl.getUniformLocation(program, \"u_world\")!;\r\n }\r\n\r\n \r\n public initSingleObject(gl: WebGL2RenderingContext, \r\n                         program: WebGLProgram, \r\n                         setGeometry: (gl: WebGL2RenderingContext)=>void, \r\n                         setNormals: (gl: WebGL2RenderingContext)=>void, \r\n                         sceneReadyCallback: (a:any)=>void | undefined)\r\n {\r\n      // Create a vertex array object (attribute state)\r\n      this.vaoSingleObject = gl.createVertexArray()!;\r\n\r\n      // and make it the one we're currently working with\r\n      gl.bindVertexArray(this.vaoSingleObject);\r\n\r\n      // look up where the vertex data needs to go.\r\n      this.positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\r\n      var normalAttributeLocation = gl.getAttribLocation(program, \"a_normal\");\r\n      // Turn on the attribute\r\n      gl.enableVertexAttribArray(this.positionAttributeLocation);\r\n\r\n      // Create a buffer\r\n      this.positionBuffer = gl.createBuffer()!;\r\n\r\n      // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer!);\r\n      // Set Geometry.\r\n      setGeometry(gl);\r\n\r\n      // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n      var size = 3;          // 3 components per iteration\r\n      var type = gl.FLOAT;   // the data is 32bit floats\r\n      var normalize = false; // don't normalize the data\r\n      var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n      var offset = 0;        // start at the beginning of the buffer\r\n      gl.vertexAttribPointer(   this.positionAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n      // create the normalr buffer, make it the current ARRAY_BUFFER\r\n      // and copy in the normal values\r\n      var normalBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n      setNormals(gl);\r\n\r\n      // Turn on the attribute\r\n      gl.enableVertexAttribArray(normalAttributeLocation);\r\n\r\n      // Tell the attribute how to get data out of colorBuffer (ARRAY_BUFFER)\r\n      var size = 3;          // 3 components per iteration\r\n      var type = gl.FLOAT;   // the data is 32bit floats\r\n      var normalize = false; // don't normalize the data\r\n      var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next color\r\n      var offset = 0;        // start at the beginning of the buffer\r\n      gl.vertexAttribPointer(normalAttributeLocation, size, type, normalize, stride, offset);\r\n      sceneReadyCallback(0);\r\n\r\n }\r\n\r\n renderCameraSingleRotatingObjectPrologue(gl: WebGL2RenderingContext,cam: camhandler.Camera, deltaTime: number)\r\n {\r\n   var viewProjectionMatrix = cam.viewProjection; // m4.multiply(projectionMatrix, viewMatrix);\r\n  this.renderMatrixSingleRotatingObjectPrologue(gl, viewProjectionMatrix, deltaTime);\r\n  gl.bindVertexArray(this.vaoSingleObject!);\r\n}\r\n\r\nprivate renderMatrixSingleRotatingObjectPrologue(gl: WebGL2RenderingContext,viewProjectionMatrix: m4.Mat4, deltaTime: number)\r\n{\r\n  if (this.animationParameters!.b.move)\r\n  {\r\n    this.modelYRotationRadians += 0.05* this.animationParameters!.b.speed * deltaTime;\r\n    this.modelXRotationRadians += 0.05* this.animationParameters!.b.speed * deltaTime;   \r\n  }  \r\n  var matrixXRot = m4.axisRotation([1,0,0], this.modelXRotationRadians);\r\n  var matrixYRot = m4.axisRotation([0,1,0], this.modelYRotationRadians);           \r\n  var worldMatrix = m4.multiply(matrixXRot,matrixYRot); // m4.axisRotation([0,1,0],this.fRotationRadians) ;\r\n  var worldViewProjectionMatrix = m4.multiply(viewProjectionMatrix, worldMatrix);\r\n \r\n  // Set the matrices\r\n  gl.uniformMatrix4fv(this.worldLocation!, false,worldMatrix);\r\n  gl.uniformMatrix4fv(this.worldViewProjectionLocation!, false, worldViewProjectionMatrix);\r\n \r\n  var worldInverseMatrix = m4.inverse(worldMatrix);\r\n  var worldInverseTransposeMatrix = m4.transpose(worldInverseMatrix);\r\n gl.uniformMatrix4fv(this.worldInverseTransposeLocation!, false, worldInverseTransposeMatrix);\r\n}\r\n}\r\n\r\n","// local, invalid shading\r\nimport * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as datgui from \"dat.gui\";\r\n\r\nimport * as camhandler from \"./../baseapp/camhandler\"   // camera projection\r\nimport * as scene from \"./scene\"\r\n\r\nimport { TAnimation1Parameters }  from \"./scene\"\r\nimport { basescene } from \"./basescene\";\r\n\r\nexport class LightScene extends basescene implements scene.SceneInterface\r\n{\r\n    vertexShaderSource: string;   // =vertexShaderSourceSpotLight\r\n    fragmentShaderSource: string; // =fragmentShaderSourceSpotLight\r\n\r\n    // shaders to merge (here: none)\r\n    twglprograminfo: twgl.ProgramInfo[]|null=null;  // shaders are provided in interface string fields, in this scene twglprograminfo[] remains null\r\n\r\n    // interface\r\n    sceneenv:number = 1;\r\n    positionLocation: number | undefined;\r\n    cameraPosition: [number,number,number] | undefined\r\n    ctime: number = 0;\r\n    scenesize: number = 60;\r\n\r\n    typelightLocation: WebGLUniformLocation | undefined ;           // directional light (0)  point light (1) or spot light (2)\r\n    viewWorldPositionLocation: WebGLUniformLocation | undefined ;   // camera position passed to shader for point light and spot light\r\n    lightWorldPositionLocation: WebGLUniformLocation | undefined ;  // light position passed to shader\r\n    colorLocation: WebGLUniformLocation | undefined ;               // color light\r\n    shininessLocation: WebGLUniformLocation | undefined ;           // for directional light, intensity. for point light ans spot light, focus\r\n    lightDirectionLocation: WebGLUniformLocation | undefined ;\r\n    innerLimitLocation: WebGLUniformLocation | undefined ;\r\n    outerLimitLocation: WebGLUniformLocation | undefined ;\r\n    reverseLightDirectionLocation: WebGLUniformLocation | undefined;\r\n\r\n    // rendering parameters \r\n    fieldOfViewRadians : number;\r\n    fRotationRadians : number;\r\n   \r\n    typelight: number;    // lights shader\r\n    lightRotationX: number;\r\n    lightRotationY : number;\r\n    lightDirection : [number,number,number];  // this is computed in updateScene\r\n    innerLimit : number;\r\n    outerLimit : number;\r\n  \r\n    animationParameters: TAnimation1Parameters | undefined;\r\n\r\n    public resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n\r\n    public static instance : LightScene;\r\n\r\n    public constructor(gl: WebGL2RenderingContext)\r\n    {\r\n      super();\r\n      LightScene.instance=this;\r\n      this.typelight = 1;\r\n      this.vertexShaderSource = this.vertexShaderSourceSpotLight;\r\n      this.fragmentShaderSource = this.fragmentShaderSourceSpotLight;\r\n    //  constructor(gl: WebGL2RenderingContext)\r\n\r\n      this.twglprograminfo=new Array(3);   \r\n      this.twglprograminfo![1] = twgl.createProgramInfo(gl, [this.vertexShaderSourceSpotLight, this.fragmentShaderSourceSpotLight]);\r\n\r\n      this.fieldOfViewRadians = 60* Math.PI / 180;\r\n      this.fRotationRadians = 0;\r\n      this.lightRotationX = 0;\r\n      this.lightRotationY = 0;\r\n      this.lightDirection = [0, 0, 1];  // this is computed in updateScene\r\n      this.innerLimit = 10* Math.PI / 180;\r\n      this.outerLimit = 20* Math.PI / 180;\r\n    }\r\n\r\n    public extendGUI(gui: datgui.GUI)\r\n    {\r\n      // Slider for shininess\r\n     gui.add(this.animationParameters!, 'shininess').min(0).max(20.0).step(0.1);\r\n     gui.updateDisplay();\r\n     var cel2 = gui.add(this.animationParameters!, 'typelight', [ 'directed light','point light', 'spot light' ] );\r\n     cel2.onChange( this.onChangeTypeLightCombo);\r\n     gui.add(this.animationParameters!, 'fov', 5.0,85.0,1.0 );\r\n    }\r\n\r\n    onChangeTypeLightCombo(value? : any)\r\n    {  \r\n      var s = value! as string;\r\n      if (s==\"directed light\") LightScene.instance.typelight=0; // gl.uniform1i(this.typelightLocation!,0);\r\n      else if (s==\"point light\") LightScene.instance.typelight=1; // gl.uniform1i(this.typelightLocation!,1);\r\n      else if (s==\"spot light\") LightScene.instance.typelight=2; //gl.uniform1i(this.typelightLocation!,2);\r\n    }\r\n\r\n\r\n    public initScene(gl: WebGL2RenderingContext, cap:TAnimation1Parameters,dictpar:Map<string,string>,  p: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined)\r\n    {\r\n        var program = p.program;\r\n        this.animationParameters = cap;\r\n \r\n        this.viewWorldPositionLocation = gl.getUniformLocation(program, \"u_viewWorldPosition\")!;\r\n      \r\n        this.typelightLocation = gl.getUniformLocation(program, \"u_typelight\")!;\r\n        this.colorLocation = gl.getUniformLocation(program, \"u_color\")!;\r\n        this.shininessLocation = gl.getUniformLocation(program, \"u_shininess\")!; \r\n        this.lightDirectionLocation = gl.getUniformLocation(program, \"u_lightDirection\")!;\r\n        this.innerLimitLocation = gl.getUniformLocation(program, \"u_innerLimit\")!;\r\n        this.outerLimitLocation = gl.getUniformLocation(program, \"u_outerLimit\")!;\r\n        this.lightWorldPositionLocation = gl.getUniformLocation(program, \"u_lightWorldPosition\")!;\r\n        this.reverseLightDirectionLocation =  gl.getUniformLocation(program, \"u_reverseLightDirection\")!; // directional\r\n\r\n        this.initMatrixUniforms(gl,program);\r\n        this.initSingleObject(gl, program, this.setGeometry, this.setNormals, sceneReadyCallback); // this will invoke the callback when done\r\n    }\r\n\r\n    public restorePositionAttributeContext(gl: WebGL2RenderingContext, posBuffer: WebGLBuffer, posAttributeLocation: number, size: number)\r\n    {\r\n      // ==> 2023-03-01 restore this part to solve the clear error\r\n        // 1. Bind the buffer\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\n        // 2. Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        //var size = 2;          // 2 components per iteration\r\n        var type = gl.FLOAT;   // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        var offset = 0;        // start at the beginning of the buffer\r\n        gl.vertexAttribPointer(posAttributeLocation, size, type, normalize, stride, offset);\r\n        // 3. Enable this\r\n        gl.enableVertexAttribArray(posAttributeLocation);\r\n        // <==\r\n    }\r\n \r\n\r\n    public drawScene(gl: WebGL2RenderingContext, cam: camhandler.Camera, time: number) \r\n    {\r\n        var deltaTime = time - this.ctime;\r\n        this.ctime = time;\r\n\r\n        // Bind the vao, set world matrix and worldview matrix in GPU\r\n        this.renderCameraSingleRotatingObjectPrologue(gl, cam, deltaTime);\r\n\r\n        // Restore position attribute context for this program (2023-01-03 solve clear issue)\r\n        this.restorePositionAttributeContext(gl, this.positionBuffer!, this.positionAttributeLocation!, 3); \r\n \r\n        // Set the color to use for light\r\n        gl.uniform4fv(this.colorLocation!, [1.0, 0, 0.2, 1]); // red\r\n    \r\n        // Set the shininess for any light. \r\n        // directional light shininess=intensity\r\n        // for point light and spot light shininess=concentration of light in the center\r\n        gl.uniform1f(this.shininessLocation!, this.animationParameters!.shininess);\r\n        gl.uniform1i(this.typelightLocation!,this.typelight);\r\n    \r\n        // Set the light direction (directed light)\r\n        gl.uniform3fv(this.reverseLightDirectionLocation!, twgl.v3.normalize([1.0, 0.0, 0.0]));\r\n\r\n        // Set the light position used in point light and spot light\r\n        const lightPosition = [0, 0, 120];\r\n        gl.uniform3fv(this.lightWorldPositionLocation!, lightPosition);\r\n      \r\n        // Set the camera/view position used in point light and spot light\r\n        gl.uniform3fv(this.viewWorldPositionLocation!, cam.Position());\r\n    \r\n        // Set spotlight uniforms\r\n        // since we don't have a plane like most spotlight examples\r\n        // let's point the spot light at the F\r\n        var target = [0, 0, 0];\r\n        var up = [0, 0, 1];  // Z-up !\r\n        \r\n        // Set directional light unifos\r\n        var lmat = m4.lookAt(lightPosition, target, up);\r\n        lmat = m4.multiply(m4.axisRotation([1,0,0],this.lightRotationX), lmat);\r\n        lmat = m4.multiply(m4.axisRotation([0,1,0],this.lightRotationY), lmat);\r\n        // get the zAxis from the matrix\r\n        // negate it because lookAt looks down the -Z axis\r\n        this.lightDirection = [-lmat[8], -lmat[9], -lmat[10]];    \r\n        gl.uniform3fv(this.lightDirectionLocation!, this.lightDirection); // spot light\r\n        gl.uniform1f(this.innerLimitLocation!, Math.cos(this.innerLimit));\r\n        gl.uniform1f(this.outerLimitLocation!, Math.cos(this.outerLimit));\r\n\r\n        // --- Draw the geometry.\r\n        var primitiveType = gl.TRIANGLES;\r\n        var offset = 0;\r\n        var count = 16 * 6;\r\n        gl.drawArrays(primitiveType, offset, count);\r\n      }  \r\n  \r\n  //=========================================================================================================================================\r\n\r\n    // Fill the buffer with the values that define a letter 'F'.\r\n    setGeometry(gl: WebGL2RenderingContext):void {\r\n    var positions = new Float32Array([\r\n            // left column front\r\n            0,   0,  0,\r\n            0, 150,  0,\r\n            30,   0,  0,\r\n            0, 150,  0,\r\n            30, 150,  0,\r\n            30,   0,  0,\r\n  \r\n            // top rung front\r\n            30,   0,  0,\r\n            30,  30,  0,\r\n            100,   0,  0,\r\n            30,  30,  0,\r\n            100,  30,  0,\r\n            100,   0,  0,\r\n  \r\n            // middle rung front\r\n            30,  60,  0,\r\n            30,  90,  0,\r\n            67,  60,  0,\r\n            30,  90,  0,\r\n            67,  90,  0,\r\n            67,  60,  0,\r\n  \r\n            // left column back\r\n              0,   0,  30,\r\n             30,   0,  30,\r\n              0, 150,  30,\r\n              0, 150,  30,\r\n             30,   0,  30,\r\n             30, 150,  30,\r\n  \r\n            // top rung back\r\n            30,   0,  30, \r\n            100,   0,  30,\r\n            30,  30,  30,\r\n             30,  30,  30,\r\n            100,   0,  30,\r\n            100,  30,  30,\r\n  \r\n            // middle rung back\r\n             30,  60,  30,\r\n             67,  60,  30,\r\n             30,  90,  30,\r\n             30,  90,  30,\r\n             67,  60,  30,\r\n             67,  90,  30,\r\n  \r\n            // top\r\n              0,   0,   0,\r\n            100,   0,   0,\r\n            100,   0,  30,\r\n              0,   0,   0,\r\n            100,   0,  30,\r\n              0,   0,  30,\r\n  \r\n            // top rung right\r\n            100,   0,   0,\r\n            100,  30,   0,\r\n            100,  30,  30,\r\n            100,   0,   0,\r\n            100,  30,  30,\r\n            100,   0,  30,\r\n  \r\n            // under top rung\r\n            30,   30,   0,\r\n            30,   30,  30,\r\n            100,  30,  30,\r\n            30,   30,   0,\r\n            100,  30,  30,\r\n            100,  30,   0,\r\n  \r\n            // between top rung and middle\r\n            30,   30,   0,\r\n            30,   60,  30,\r\n            30,   30,  30,\r\n            30,   30,   0,\r\n            30,   60,   0,\r\n            30,   60,  30,\r\n  \r\n            // top of middle rung\r\n            30,   60,   0,\r\n            67,   60,  30,\r\n            30,   60,  30,\r\n            30,   60,   0,\r\n            67,   60,   0,\r\n            67,   60,  30,\r\n  \r\n            // right of middle rung\r\n            67,   60,   0,\r\n            67,   90,  30,\r\n            67,   60,  30,\r\n            67,   60,   0,\r\n            67,   90,   0,\r\n            67,   90,  30,\r\n  \r\n            // bottom of middle rung.\r\n            30,   90,   0,\r\n            30,   90,  30,\r\n            67,   90,  30,\r\n            30,   90,   0,\r\n            67,   90,  30,\r\n            67,   90,   0,\r\n  \r\n            // right of bottom\r\n            30,   90,   0,\r\n            30,  150,  30,\r\n            30,   90,  30,\r\n            30,   90,   0,\r\n            30,  150,   0,\r\n            30,  150,  30,\r\n  \r\n            // bottom\r\n            0,   150,   0,\r\n            0,   150,  30,\r\n            30,  150,  30,\r\n            0,   150,   0,\r\n            30,  150,  30,\r\n            30,  150,   0,\r\n  \r\n            // left side\r\n            0,   0,   0,\r\n            0,   0,  30,\r\n            0, 150,  30,\r\n            0,   0,   0,\r\n            0, 150,  30,\r\n            0, 150,   0,\r\n        ]);\r\n  \r\n    // Center the F around the origin and Flip it around. We do this because\r\n    // we're in 3D now with and +Y is up where as before when we started with 2D\r\n    // we had +Y as down.\r\n  \r\n    // We could do by changing all the values above but I'm lazy.\r\n    // We could also do it with a matrix at draw time but you should\r\n    // never do stuff at draw time if you can do it at init time.\r\n    var matrix = m4.axisRotation([1,0,0],Math.PI);\r\n    matrix = m4.translate(matrix, [-50, -75, -15]);\r\n  \r\n    for (var ii = 0; ii < positions.length; ii += 3) {\r\n      var vector = m4.transformPoint(matrix, [positions[ii + 0], positions[ii + 1], positions[ii + 2], 1]);\r\n      positions[ii + 0] = vector[0];\r\n      positions[ii + 1] = vector[1];\r\n      positions[ii + 2] = vector[2];\r\n    }\r\n  \r\n    gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n  }\r\n\r\n  //=========================================================================================================================================\r\n\r\n  setNormals(gl: WebGL2RenderingContext): void {\r\n    var normals = new Float32Array([\r\n            // left column front\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n  \r\n            // top rung front\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n  \r\n            // middle rung front\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n            0, 0, 1,\r\n  \r\n            // left column back\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n  \r\n            // top rung back\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n  \r\n            // middle rung back\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n            0, 0, -1,\r\n  \r\n            // top\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n  \r\n            // top rung right\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n  \r\n            // under top rung\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n  \r\n            // between top rung and middle\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n  \r\n            // top of middle rung\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 0,\r\n  \r\n            // right of middle rung\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n  \r\n            // bottom of middle rung.\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n  \r\n            // right of bottom\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n            1, 0, 0,\r\n  \r\n            // bottom\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n            0, -1, 0,\r\n  \r\n            // left side\r\n            -1, 0, 0,\r\n            -1, 0, 0,\r\n            -1, 0, 0,\r\n            -1, 0, 0,\r\n            -1, 0, 0,\r\n            -1, 0, 0,\r\n        ]);\r\n    gl.bufferData(gl.ARRAY_BUFFER, normals, gl.STATIC_DRAW);\r\n  }\r\n  \r\n  vertexShaderSourceSpotLight = `#version 300 es\r\n\r\n  // an attribute is an input (in) to a vertex shader.\r\n  // It will receive data from a buffer\r\n  in vec4 a_position;\r\n  in vec3 a_normal;\r\n  \r\n  uniform vec3 u_lightWorldPosition;\r\n  uniform vec3 u_viewWorldPosition;\r\n  \r\n  uniform mat4 u_world;\r\n  uniform mat4 u_worldViewProjection;\r\n  uniform mat4 u_worldInverseTranspose;\r\n  \r\n  // varyings to pass values to the fragment shader\r\n  out vec3 v_normal;\r\n  out vec3 v_surfaceToLight;\r\n  out vec3 v_surfaceToView;\r\n  \r\n  // all shaders have a main function\r\n  void main() {\r\n    // Multiply the position by the matrix.\r\n    gl_Position = u_worldViewProjection * a_position;\r\n  \r\n    // orient the normals and pass to the fragment shader\r\n    v_normal = mat3(u_worldInverseTranspose) * a_normal;\r\n  \r\n    // compute the world position of the surface\r\n    vec3 surfaceWorldPosition = (u_world * a_position).xyz;\r\n  \r\n    // compute the vector of the surface to the light\r\n    // and pass it to the fragment shader\r\n    v_surfaceToLight = u_lightWorldPosition - surfaceWorldPosition;\r\n  \r\n    // compute the vector of the surface to the view/camera\r\n    // and pass it to the fragment shader\r\n    v_surfaceToView = u_viewWorldPosition - surfaceWorldPosition;\r\n  }\r\n  `;\r\n\r\n  fragmentShaderSourceSpotLight = `#version 300 es\r\n\r\n  precision highp float;\r\n  \r\n  // Passed in and varied from the vertex shader.\r\n  in vec3 v_normal;\r\n  in vec3 v_surfaceToLight;\r\n  in vec3 v_surfaceToView;\r\n  \r\n  uniform vec4 u_color;\r\n  uniform float u_shininess;\r\n  \r\n  uniform float u_innerLimit;          // in dot space\r\n  uniform float u_outerLimit;          // in dot space\r\n\r\n  uniform vec3 u_lightDirection;\r\n\r\n  uniform int u_typelight;\r\n\r\n  uniform vec3 u_reverseLightDirection; // directional light\r\n   \r\n  // we need to declare an output for the fragment shader\r\n  out vec4 outColor;\r\n\r\n  void maingreen() {\r\n    outColor = vec4(0.0,1.0,0.0,1.0);\r\n  }\r\n\r\n  void main() {\r\n    // because v_normal is a varying it's interpolated\r\n    // so it will not be a uint vector. Normalizing it\r\n    // will make it a unit vector again\r\n    vec3 normal = normalize(v_normal);\r\n  \r\n    vec3 surfaceToLightDirection = normalize(v_surfaceToLight);\r\n    vec3 surfaceToViewDirection = normalize(v_surfaceToView);\r\n    vec3 halfVector = normalize(surfaceToLightDirection + surfaceToViewDirection);\r\n  \r\n    if (u_typelight==2)\r\n    {\r\n      // spot light\r\n      float dotFromDirection = dot(surfaceToLightDirection, -u_lightDirection);\r\n      float inLight = smoothstep(u_outerLimit, u_innerLimit, dotFromDirection);\r\n      float light = inLight * dot(normal, surfaceToLightDirection);\r\n      float specular = inLight * pow(dot(normal, halfVector), u_shininess);\r\n    \r\n      outColor = u_color;\r\n    \r\n      // Lets multiply just the color portion (not the alpha)\r\n      // by the light\r\n      outColor.rgb *= light;\r\n    \r\n      // Just add in the specular\r\n      outColor.rgb += specular;\r\n    } else  if (u_typelight==1)\r\n    {\r\n       \r\n      // compute the light by taking the dot product\r\n      // of the normal to the light's reverse direction\r\n      float light = dot(normal, surfaceToLightDirection);\r\n      float specular = 0.0;\r\n      if (light > 0.0) {\r\n        specular = pow(dot(normal, halfVector), u_shininess);\r\n      }\r\n\r\n      vec3 outcol =   u_color.rgb;\r\n    \r\n      // Lets multiply just the color portion (not the alpha)\r\n      // by the light\r\n      outcol *= light;\r\n    \r\n      // Just add in the specular (white)\r\n      outcol += specular;\r\n\r\n      outColor = vec4(outcol,1.0);\r\n\r\n    } else\r\n    {\r\n      // compute the light by taking the dot product\r\n      // of the normal to the light's reverse direction\r\n      float dirlight = dot(normal, u_reverseLightDirection);\r\n\r\n     \r\n    \r\n      outColor = u_color;\r\n\r\n      outColor.rgb *=   dirlight * u_shininess/10.0 ;\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n}","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\n\r\nexport interface NodeJson {\r\n    draw: boolean;\r\n    name: string;\r\n    scaling: number[];\r\n    translation: number[];\r\n    children: NodeJson[];\r\n  }\r\n\r\nexport class NodeTransforms     // Gregg's TRS\r\n{\r\n    translation: number[] = [0, 0, 0];\r\n    rotation: number[] = [0, 0, 0];\r\n    scale: number[] = [1, 1, 1];\r\n\r\n    getMatrix  (dst: m4.Mat4)  {\r\n        dst = dst || m4.identity();\r\n        var t = this.translation;\r\n        var r = this.rotation;\r\n        var s = this.scale;\r\n        //console.log(\"t=\"+t+\" r=\"+r+\" s=\"+s);\r\n        // compute a matrix from translation, rotation, and scale\r\n        m4.translation(t, dst);\r\n        m4.axisRotate(dst,[1,0,0], r[0], dst);\r\n        //console.log(\"r[0]=\"+r[0]+\" dst=\"+dst);\r\n        m4.axisRotate(dst,[0,1,0], r[1], dst);\r\n        m4.axisRotate(dst,[0,0,1], r[2], dst);\r\n        m4.scale(dst, s, dst);\r\n        return dst;\r\n    };\r\n};\r\n  \r\nexport type NodeInfoByName =\r\n{\r\n    trs: NodeTransforms;\r\n    node: Node;\r\n};\r\n\r\nexport type NodeDescription = \r\n{\r\n    draw: boolean,\r\n    name: string;\r\n    scaling: number[];\r\n    translation: number[];\r\n    children: NodeDescription[];\r\n}\r\n\r\n\r\nexport class Node\r\n{\r\n    source: NodeTransforms;\r\n    children: Node[] = [];\r\n    localMatrix: m4.Mat4 = m4.identity();\r\n    worldMatrix: m4.Mat4 = m4.identity();\r\n    parent: Node|null = null;\r\n    //  drawInfo: NodeDrawInfo|null = null;\r\n    drawInfo: twgl.DrawObject | null = null;\r\n\r\n    constructor (source:NodeTransforms) {\r\n        this.source = source;\r\n    };\r\n\r\n    setParent (parent: Node) {\r\n        // Disconnect from existing parent\r\n        if (this.parent) \r\n        {\r\n            var ndx = this.parent.children.indexOf(this);\r\n            if (ndx >= 0)  this.parent.children.splice(ndx, 1);           \r\n        }    \r\n        // Add to new parent, assign\r\n        if (parent) parent.children.push(this);\r\n        this.parent = parent;\r\n    };\r\n\r\n    updateWorldMatrix(matrix:m4.Mat4|undefined) {\r\n        var source = this.source;\r\n        if (source) source.getMatrix(this.localMatrix);\r\n        if (matrix) \r\n        // a matrix was passed in so do the math\r\n        m4.multiply(matrix, this.localMatrix, this.worldMatrix);\r\n        else \r\n        // no matrix was passed in so just copy.\r\n        m4.copy(this.localMatrix, this.worldMatrix);      \r\n        // now process all the children\r\n        var worldMatrix = this.worldMatrix;\r\n        this.children.forEach(function(child) {\r\n        child.updateWorldMatrix(worldMatrix);\r\n        });\r\n    };\r\n}\r\n\r\nexport class NodesProducer\r\n{\r\n    constructor (public programInfo: twgl.ProgramInfo | undefined,\r\n                 public cubeBufferInfo: twgl.BufferInfo | undefined)\r\n    { }\r\n\r\n    // result\r\n    nodeInfosByName : {[key:string]:NodeInfoByName} = {};\r\n    objectsToDraw: twgl.DrawObject[] = [];\r\n    objects : Node[] = [];\r\n\r\n    makeNode = (nodeDescription: NodeDescription):Node => {\r\n        var trs  = new NodeTransforms();\r\n        var cnode = new Node(trs);\r\n        this.nodeInfosByName[nodeDescription.name] = {\r\n            trs: trs,\r\n            node: cnode,\r\n        };\r\n        trs.rotation = [0,0,0];\r\n       // if (orientationAnglexz!=undefined) trs.rotation = [0,orientationAnglexz,0]; // Lx initial rotation of the model\r\n        trs.scale = nodeDescription.scaling || trs.scale;\r\n        trs.translation = nodeDescription.translation || trs.translation;\r\n        if (nodeDescription.draw !== false) {\r\n            cnode.drawInfo = {\r\n                \r\n                uniforms: {\r\n                    u_colorOffset: [0, 0, 0.6, 0],\r\n                    u_colorMult: [0.4, 0.4, 0.4, 1],\r\n                    u_matrix: undefined\r\n                },\r\n                programInfo: this.programInfo!,\r\n                bufferInfo: this.cubeBufferInfo!,\r\n            };\r\n            this.objectsToDraw.push(cnode.drawInfo!);\r\n            this.objects.push(cnode);\r\n        }\r\n        var makeNodes = (nodeDescriptions: NodeDescription[])  => {\r\n            return nodeDescriptions ? nodeDescriptions.map(this.makeNode) : [];\r\n         }\r\n        makeNodes(nodeDescription.children).forEach(function(child: Node) {\r\n           child.setParent(cnode);\r\n         });   \r\n        return cnode;\r\n    }\r\n}\r\n","module.exports = {\r\n  \"draw\": false,\r\n  \"name\": \"point between feet\",\r\n  \"translation\":[0,0,0],\r\n  \"children\": [\r\n    {\r\n       \"draw\": true,\r\n       \"name\": \"waist\",\r\n       \"translation\": [0, 0, 0],\r\n       \"children\": [\r\n         {\r\n           \"draw\": true,\r\n           \"name\": \"torso\",\r\n           \"translation\": [0, 1, 0],\r\n           \"children\": [\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"neck\",\r\n               \"translation\": [0, 1, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"head\",\r\n                   \"translation\": [0, 1, 0],\r\n                   \"children\": []\r\n                 }\r\n               ]\r\n             },\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"left-arm\",\r\n               \"translation\": [-1, 0, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"left-forearm\",\r\n                   \"translation\": [-1, 0, 0],\r\n                   \"children\": [\r\n                     {\r\n                       \"draw\": true,\r\n                       \"name\": \"left-hand\",\r\n                       \"translation\": [-1, 0, 0],\r\n                       \"children\":[]\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             },\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"right-arm\",\r\n               \"translation\": [1, 0, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"right-forearm\",\r\n                   \"translation\": [1, 0, 0],\r\n                   \"children\": [\r\n                     {\r\n                       \"draw\": true,\r\n                       \"name\": \"right-hand\",\r\n                       \"translation\": [1, 0, 0],\r\n                       \"children\":[]\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             }\r\n           ]\r\n         },\r\n         {\r\n           \"draw\": true,\r\n           \"name\": \"left-leg\",\r\n           \"translation\": [-1, -0.5, 0],\r\n           \"children\": [\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"left-calf\",\r\n               \"translation\": [0, -1, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"left-foot\",\r\n                   \"translation\": [0, -1, 0],\r\n                   \"children\": []\r\n                 }\r\n               ]\r\n             }\r\n           ]\r\n         },\r\n         {\r\n           \"draw\": true,\r\n           \"name\": \"right-leg\",\r\n           \"translation\": [1, -1, 0],\r\n           \"children\": [\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"right-calf\",\r\n               \"translation\": [0, -1, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"right-foot\",\r\n                   \"translation\": [0, -1, 0],\r\n                   \"children\": []\r\n                 }\r\n               ]\r\n             }\r\n           ]\r\n         }\r\n       ]\r\n    }\r\n  ]\r\n};","import * as twgl from \"./../node_modules/twgl.js\";    // Greg's work\r\nimport { m4 } from \"./../node_modules/twgl.js\";\r\n\r\nimport * as objectnode from \"./scene/objectnode\";\r\n\r\nexport interface NodeJson {\r\n  draw: boolean;\r\n  name: string;\r\n  scaling: number[];\r\n  translation: number[];\r\n  children: NodeJson[];\r\n}\r\n\r\nexport class ObjectList //extends twglbaseapp.twglbaseapp\r\n{\r\n  scene:objectnode.Node |undefined;\r\n  gl: WebGL2RenderingContext | undefined;\r\n  fieldOfViewRadians: number  | undefined;\r\n  \r\n  vs = `#version 300 es\r\n\r\n  in vec4 a_position;\r\n  in vec4 a_color;\r\n  \r\n  uniform mat4 u_matrix;\r\n  \r\n  out vec4 v_color;\r\n  \r\n  void main() {\r\n    // Multiply the position by the matrix.\r\n    gl_Position = u_matrix * a_position;\r\n  \r\n    // Pass the color to the fragment shader.\r\n    v_color = a_color;\r\n  }\r\n  `;\r\n  \r\n    fs = `#version 300 es\r\n  precision highp float;\r\n  \r\n  // Passed in from the vertex shader.\r\n  in vec4 v_color;\r\n  \r\n  uniform vec4 u_colorMult;\r\n  uniform vec4 u_colorOffset;\r\n  \r\n  out vec4 outColor;\r\n  \r\n  void main() {\r\n      outColor = v_color * u_colorMult + u_colorOffset;\r\n  }\r\n  `;\r\n\r\n  // initialized in main() used in drawScene()\r\n  nodeInfosByName : {[key:string]:objectnode.NodeInfoByName} | undefined;\r\n  objectsToDraw: twgl.DrawObject[] = [];\r\n  objects : objectnode.Node[] = [];\r\n\r\n  programInfo: twgl.ProgramInfo | undefined;\r\n\r\n  // state\r\n  cx: number=0;\r\n  cy: number=0;\r\n  cz: number=-20;\r\n  vx: number=0;\r\n  vy: number=0;\r\n  vz: number=0.05;\r\n\r\n  async FetchText(cparcelname: string){\r\n    const res = await fetch(cparcelname);\r\n    var b= await res.arrayBuffer();\r\n    var enc = new TextDecoder(\"utf-8\");\r\n    return enc.decode(b);\r\n  }\r\n\r\n  main(gl: WebGL2RenderingContext) \r\n  {  \r\n    // setup GLSL program\r\n    twgl.setAttributePrefix(\"a_\");\r\n    this.gl = gl;\r\n    this.programInfo = twgl.createProgramInfo(gl, [this.vs, this.fs]);\r\n    // setup Camera\r\n    this.fieldOfViewRadians = (60.0* Math.PI / 180);\r\n    // setup geometry\r\n    // avoid Gregg's flattenedPrimitives for now - cant get it to compile in TS\r\n    // var arrays: { [key:string]:twgl.primitives.TypedArray }= twgl.primitives.createCubeVertices(1); \r\n    // var cubeBufferInfo: twgl.BufferInfo = this.createFlattenedVertices(gl, arrays, 6)!;\r\n    // cubes\r\n    var cubeBufferInfo = twgl.primitives.createCubeBufferInfo(gl, 1.0);  // create the cube\r\n    // spheres\r\n    // var cubeBufferInfo = twgl.primitives.createSphereBufferInfo(gl, 0.5, 12,12);      \r\n    // VAO (not needed)\r\n    // var cubeBufferInfo: twgl.BufferInfo = twgl.primitives.createCubeVertices(1); // this.flattenedPrimitives.createCubeBufferInfo(gl, 1)!; // lx leave out , 1);\r\n    // var cubeVAO = twgl.createVAOFromBufferInfo(gl, programInfo, cubeBufferInfo);\r\n    this.nodeInfosByName = undefined;\r\n    var nodefact = new objectnode.NodesProducer(this.programInfo,cubeBufferInfo);\r\n    var parcls=require('./resources/blockguy.json');\r\n    var mydata= this.FetchText(parcls).then ((s: string)=> {\r\n          console.log(\"mydata=\"+mydata +  \" s=\"+s);\r\n          var nodedescriptions: NodeJson = JSON.parse(s);\r\n          this.scene = nodefact.makeNode(nodedescriptions);\r\n          this.objects = nodefact.objects;\r\n          this.objectsToDraw = nodefact.objectsToDraw;\r\n          this.nodeInfosByName= nodefact.nodeInfosByName;\r\n        });\r\n     // First frame\r\n    requestAnimationFrame((time)=>this.drawScene(time));\r\n  }\r\n\r\n  drawScene( time: number) \r\n  {\r\n    time *= 0.001;\r\n\r\n    // check if JSon read and converted\r\n    if (!this.nodeInfosByName) \r\n    { \r\n      requestAnimationFrame((time)=>this.drawScene(time));\r\n      return; \r\n    }\r\n    var nodeInfosByName= this.nodeInfosByName!;\r\n    \r\n    var gl = this.gl!;\r\n    twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n    var aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.useProgram(this.programInfo!.program)\r\n\r\n    // setup the camera's projection matrix\r\n    var projectionMatrix =\r\n        m4.perspective(this.fieldOfViewRadians!, aspect, 1, 200);\r\n    // setup the camera's matrix using look at.\r\n    var cameraPosition = [14, 3.5, 10];\r\n    var target = [0, 0.0, 0];\r\n    var up = [0, 1, 0];\r\n    var cameraMatrix = m4.lookAt(cameraPosition, target, up);\r\n    // setup view matrix from the camera matrix.\r\n    var viewMatrix = m4.inverse(cameraMatrix);\r\n    var viewProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix);\r\n\r\n    // Animation\r\n    var adjust;\r\n    var speed = 3;\r\n    var c = time * speed;\r\n    adjust = Math.abs(Math.sin(c));\r\n\r\n    nodeInfosByName[\"point between feet\"].trs.translation[1] = adjust;\r\n    adjust = Math.sin(c);\r\n    nodeInfosByName[\"left-leg\" ].trs.rotation[0] =  adjust;\r\n    nodeInfosByName[\"right-leg\"].trs.rotation[0] = -adjust;\r\n    adjust = Math.sin(c + 0.1) * 0.4;\r\n    nodeInfosByName[\"left-calf\" ].trs.rotation[0] = -adjust;\r\n    nodeInfosByName[\"right-calf\"].trs.rotation[0] =  adjust;\r\n    adjust = Math.sin(c + 0.1) * 0.4;\r\n    nodeInfosByName[\"left-foot\" ].trs.rotation[0] = -adjust;\r\n    nodeInfosByName[\"right-foot\"].trs.rotation[0] =  adjust;\r\n\r\n    adjust = Math.sin(c) * 0.4;\r\n    nodeInfosByName[\"left-arm\" ].trs.rotation[0] =  adjust;\r\n    nodeInfosByName[\"left-arm\" ].trs.rotation[1] =  adjust;\r\n    nodeInfosByName[\"right-arm\"].trs.rotation[2] =  adjust;\r\n    adjust = Math.sin(c + 0.1) * 0.4;\r\n    nodeInfosByName[\"left-forearm\" ].trs.rotation[0] =  adjust;\r\n    nodeInfosByName[\"left-forearm\" ].trs.rotation[1] =  adjust;\r\n    nodeInfosByName[\"right-forearm\"].trs.rotation[2] =  adjust;\r\n    adjust = Math.sin(c - 0.1) * 0.4;\r\n    nodeInfosByName[\"left-hand\" ].trs.rotation[2] =  adjust;\r\n    nodeInfosByName[\"right-hand\"].trs.rotation[2] =  adjust;\r\n    nodeInfosByName[\"left-hand\" ].trs.rotation[1] =  adjust;\r\n    nodeInfosByName[\"right-hand\"].trs.rotation[1] =  adjust;\r\n\r\n    adjust = Math.sin(c) * 0.4;\r\n    nodeInfosByName[\"waist\"].trs.rotation[1] =  adjust;\r\n    adjust = Math.sin(c) * 0.4;\r\n    nodeInfosByName[\"torso\"].trs.rotation[1] =  adjust;\r\n    adjust = Math.sin(c + 0.25) * 0.4;\r\n    nodeInfosByName[\"neck\"].trs.rotation[1] =  adjust;\r\n    adjust = Math.sin(c + 0.5) * 0.4;\r\n    nodeInfosByName[\"head\"].trs.rotation[1] =  adjust;\r\n    adjust = Math.cos(c * 2) * 0.4;\r\n    nodeInfosByName[\"head\"].trs.rotation[0] =  adjust;\r\n\r\n    // Update all world matrices in the scene graph\r\n    var currentTranslation: m4.Mat4 = m4.translation([-this.cx,this.cy,this.cz]);\r\n    this.scene!.updateWorldMatrix(currentTranslation);\r\n    this.cx+=this.vx*speed/4.0;\r\n    this.cy+=this.vy*speed/4.0;\r\n    this.cz+=this.vz*speed/4.0;\r\n\r\n    // Compute all the matrices for rendering\r\n    this.objects.forEach((object) => {\r\n        object.drawInfo!.uniforms.u_matrix = m4.multiply(viewProjectionMatrix, object.worldMatrix);\r\n    });\r\n\r\n    // Draw the objects\r\n    twgl.drawObjectList(gl, this.objectsToDraw);\r\n    // Next framw\r\n    requestAnimationFrame((time)=>this.drawScene(time));\r\n  }\r\n}","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as objectnode from \"./objectnode\"; \r\nimport * as scene from \"./scene\"\r\nimport * as datgui from \"dat.gui\";\r\nimport * as camhandler from \"./../baseapp/camhandler\"   // camera projection\r\n\r\nimport { TAnimation1Parameters }  from \"./scene\"\r\n\r\ninterface NodeJson {\r\n  draw: boolean;\r\n  name: string;\r\n  scaling:number[];\r\n  translation: number[];\r\n  children: NodeJson[];\r\n}\r\n\r\nexport class ObjectListScene  implements scene.SceneInterface\r\n{\r\n  twglprograminfo: twgl.ProgramInfo[]|null=null;  // shaders are provided in interface string fields, in this scene twglprograminfo[] remains null\r\n  scenesize=60;\r\n  sceneenv=2;\r\n  positionLocation: number | undefined; // WebGLUniformLocation | undefined;\r\n  cameraPosition: [number,number,number] | undefined\r\n  animationParameters: TAnimation1Parameters | undefined;\r\n  public resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n  public extendGUI(gui: datgui.GUI) {}\r\n\r\n  scenetree:objectnode.Node |undefined;\r\n  gl: WebGL2RenderingContext | undefined;\r\n  fieldOfViewRadians: number  | undefined;\r\n  \r\n  vertexShaderSource = `#version 300 es\r\n\r\n    in vec4 a_position;\r\n    in vec4 a_color;\r\n    \r\n    uniform mat4 u_matrix;\r\n    \r\n    out vec4 v_color;\r\n    \r\n    void main() {\r\n      // Multiply the position by the matrix.\r\n      gl_Position = u_matrix * a_position;\r\n    \r\n      // Pass the color to the fragment shader.\r\n      v_color = a_color;\r\n    }\r\n  `;\r\n  \r\n  fragmentShaderSource = `#version 300 es\r\n    precision highp float;\r\n    \r\n    // Passed in from the vertex shader.\r\n    in vec4 v_color;\r\n    \r\n    uniform vec4 u_colorMult;\r\n    uniform vec4 u_colorOffset;\r\n    \r\n    out vec4 outColor;\r\n    \r\n    void main() {\r\n        outColor = v_color * u_colorMult + u_colorOffset;\r\n    }\r\n  `;\r\n\r\n  // initialized in main() used in drawScene()\r\n  nodeInfosByName : {[key:string]:objectnode.NodeInfoByName} | undefined;\r\n  objectsToDraw: twgl.DrawObject[] = [];\r\n  objects : objectnode.Node[] = [];\r\n\r\n  speedpreset: number=0.02;\r\n\r\n  // state\r\n  cx: number=0;\r\n  cy: number=0;\r\n  cz: number=10;\r\n  vx: number=0.0;\r\n  vy: number=0;\r\n  vz: number=0.0;\r\n\r\n  public constructor(gl: WebGL2RenderingContext)\r\n  {\r\n    this.twglprograminfo=new Array(2);   \r\n    this.twglprograminfo[1] = twgl.createProgramInfo(gl, [this.vertexShaderSource, this.fragmentShaderSource]);\r\n   }\r\n\r\n  async FetchText(cparcelname: string){\r\n    const res = await fetch(cparcelname);\r\n    var b= await res.arrayBuffer();\r\n    var enc = new TextDecoder(\"utf-8\");\r\n    return enc.decode(b);\r\n  }\r\n\r\n  initScene(gl: WebGL2RenderingContext, cap: scene.TAnimation1Parameters, dictpar:Map<string,string>, p: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined) \r\n  {  \r\n    this.gl = gl;\r\n\r\n    this.animationParameters=(this.animationParameters==undefined)?cap:this.animationParameters;\r\n    if (dictpar?.has(\"speed\"))\r\n    {\r\n      this.animationParameters!.b.speed = +dictpar?.get(\"speed\")!;\r\n        console.log(\"specified: speedpreset=\"+ this.animationParameters!.b.speed) ;\r\n    } else\r\n    console.log(\"not specified: speedpreset\") ;\r\n   \r\n\r\n   // if (this.speedpreset) this.animationParameters!.b.speed = this.speedpreset!;\r\n   \r\n    this.fieldOfViewRadians = (60.0* Math.PI / 180);\r\n    var cBufferInfo = twgl.primitives.createCubeBufferInfo(gl, 1.0);  // create the cube\r\n    // spheres\r\n    // var cBufferInfo = twgl.primitives.createSphereBufferInfo(gl, 0.5, 12,12);      \r\n    this.nodeInfosByName = undefined;\r\n    var nodefact = new objectnode.NodesProducer(p,cBufferInfo);\r\n    var parcls=require('./../resources/blockguy.json');\r\n\r\n    var nodedescriptions: objectnode.NodeJson = JSON.parse(this.sjson);\r\n    this.scenetree = nodefact.makeNode(nodedescriptions);// -Math.PI/4.0);\r\n    this.objects = nodefact.objects;\r\n    this.objectsToDraw = nodefact.objectsToDraw;\r\n    this.nodeInfosByName= nodefact.nodeInfosByName;\r\n    sceneReadyCallback(0);\r\n   \r\n    /*\r\n    this.FetchText(parcls).then ((s: string)=> {\r\n         var nodedescriptions: NodeJson = JSON.parse(s);\r\n          this.scenetree = nodefact.makeNode(nodedescriptions);\r\n          this.objects = nodefact.objects;\r\n          this.objectsToDraw = nodefact.objectsToDraw;\r\n          this.nodeInfosByName= nodefact.nodeInfosByName;\r\n          sceneReadyCallback(0);\r\n        });\r\n      */  \r\n  }\r\n\r\n  public setRotationAdjust(ni: {[key: string]: objectnode.NodeInfoByName},name: string, axis: number, adjust: number)\r\n  {\r\n    if (ni[name]!=undefined) ni[name].trs.rotation[axis] =  adjust;\r\n  }\r\n\r\n  public drawScene(gl: WebGL2RenderingContext,cam: camhandler.Camera, time: number) \r\n  {\r\n   var speed = 1;\r\n   var viewProjectionMatrix = cam.viewProjection;// m4.multiply(projectionMatrix, viewMatrix);\r\n\r\n    // Animation\r\n    var adjust;\r\n    var c = time * 0.003 * speed;\r\n    adjust = Math.abs(Math.sin(c));\r\n\r\n    var nodeInfosByName= this.nodeInfosByName!;\r\n    nodeInfosByName[\"point between feet\"].trs.translation[1] = adjust;\r\n\r\n    this.setRotationAdjust(nodeInfosByName,\"point between feet\",1,0.0); //Math.atan2(this.vx, this.vz));\r\n    adjust = Math.sin(c);\r\n    this.setRotationAdjust(nodeInfosByName,\"left-leg\",0,adjust);\r\n    this.setRotationAdjust(nodeInfosByName,\"right-leg\",0,-adjust);\r\n    adjust = Math.sin(c + 0.1) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"left-calf\",0,-adjust);\r\n    this.setRotationAdjust(nodeInfosByName,\"right-calf\",0,adjust);\r\n    adjust = Math.sin(c + 0.1) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"left-foot\",0,-adjust);\r\n    this.setRotationAdjust(nodeInfosByName,\"right-foot\",0,adjust);\r\n\r\n    adjust = Math.sin(c) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"left-arm\",2,adjust);\r\n    this.setRotationAdjust(nodeInfosByName,\"right-arm\",2,adjust);\r\n    adjust = Math.sin(c + 0.1) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"left-forearm\",2,adjust);\r\n    this.setRotationAdjust(nodeInfosByName,\"right-forearm\",2,adjust);\r\n    adjust = Math.sin(c - 0.1) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"left-hand\",2,adjust);\r\n    this.setRotationAdjust(nodeInfosByName,\"right-hand\",2,adjust);\r\n   \r\n    adjust = Math.sin(c) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"waist\",1,adjust);\r\n    adjust = Math.sin(c) * 0.2;\r\n    this.setRotationAdjust(nodeInfosByName,\"torso\",1,adjust);\r\n    adjust = Math.sin(c + 0.25) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"neck\",1,adjust);\r\n    adjust = Math.sin(c + 0.5) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"head\",1,adjust);\r\n    adjust = Math.cos(c * 2) * 0.4;\r\n    this.setRotationAdjust(nodeInfosByName,\"head\",0,adjust);\r\n\r\n    // Update all world matrices in the scene graph\r\n    var currentTranslation: m4.Mat4 = m4.translation([this.cx,this.cy,this.cz]);\r\n    this.scenetree!.updateWorldMatrix(currentTranslation);\r\n    this.cx+=this.vx*speed/4.0;\r\n    this.cy+=this.vy*speed/4.0;\r\n    this.cz+=this.vz*speed/4.0;\r\n\r\n    // Compute all the matrices for rendering\r\n    this.objects.forEach((object) => {\r\n        object.drawInfo!.uniforms.u_matrix = m4.multiply(viewProjectionMatrix, object.worldMatrix);\r\n    });\r\n\r\n     // Draw the objects using Gregg's drawObjectList (this will clear the background)\r\n    twgl.drawObjectList(gl, this.objectsToDraw);\r\n\r\n    //\r\n    // below code to spell out drawObjectList to find the cause of the clear issue\r\n    //\r\n    return;\r\n\r\n    var init=false;\r\n    // ->drawObjectList replacement..\r\n    // draw each object using drawBufferInfo()\r\n    //  this.objectsToDraw.forEach(d => {  \r\n    //    .. best construct, but I need a break, so..\r\n    for (var i:number=0; i<this.objectsToDraw.length; i++) {\r\n        var d = this.objectsToDraw[i];\r\n        // gl.useProgram(d.programInfo.program); // no effect\r\n        twgl.setUniforms(d.programInfo,d.uniforms); // ok\r\n\r\n        // needed, but inserting this one will clear the background!\r\n        twgl.setBuffersAndAttributes(gl, d.programInfo, d.bufferInfo!);  \r\n      /*\r\n        // -> \"setBuffersAndAttributes\" replace\r\n        // (marked obsolete, not published) twgl.setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\r\n        // setAttributes written out..\r\n        // leaving this out.. will not clear the background, but draw faulty geometry!\r\n        if (init) \r\n          for (var name in d.bufferInfo!.attribs) {\r\n            var setter = d.programInfo.attribSetters[name]; \r\n            if (setter) \r\n            { // a_position\r\n              //console.log(\"set  \"+name +\"=\"+d.bufferInfo!.attribs[name]); \r\n              setter!(d.bufferInfo!.attribs[name]); // even if called once, inserting this will clear the background!\r\n            }\r\n          }\r\n        init=false;\r\n\r\n        // ok, needed\r\n        if (d.bufferInfo?.indices) {\r\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, d.bufferInfo?.indices);\r\n        }\r\n        */\r\n\r\n        // <- \"setBuffersAndAttributes\"\r\n        //break; // doesn't matter! background is cleared on the second draw\r\n        twgl.drawBufferInfo(gl,d.bufferInfo!,gl.TRIANGLES,d.bufferInfo?.numElements,0,undefined); \r\n        //break\r\n      };\r\n\r\n    }\r\n\r\n\r\n sjson = `{\r\n  \"draw\": false,\r\n  \"name\": \"point between feet\",\r\n  \"scaling\": [1,1,1],\r\n  \"translation\":[0,0,0],\r\n  \"children\": [\r\n    {\r\n       \"draw\": true,\r\n       \"name\": \"waist\",\r\n       \"scaling\": [1,1,1],\r\n       \"translation\": [0, 0, 0],\r\n       \"children\": [\r\n         {\r\n           \"draw\": true,\r\n           \"name\": \"torso\",\r\n           \"scaling\": [1,1,1],\r\n           \"translation\": [0, 2, 0],\r\n           \"children\": [\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"neck\",\r\n               \"scaling\": [1,1,1],\r\n               \"translation\": [0, 1, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"head\",\r\n                   \"scaling\": [1,1,1],\r\n                   \"translation\": [0, 1, 0],\r\n                   \"children\": []\r\n                 }\r\n               ]\r\n             },\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"left-arm\",\r\n               \"scaling\": [1,1,1],\r\n               \"translation\": [-1, 0, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"left-forearm\",\r\n                   \"scaling\": [1,1,1],\r\n                   \"translation\": [-1, 0, 0],\r\n                   \"children\": [\r\n                     {\r\n                       \"draw\": true,\r\n                       \"name\": \"left-hand\",\r\n                       \"scaling\": [1,1,1],\r\n                       \"translation\": [-1, 0, 0],\r\n                       \"children\":[]\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             },\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"right-arm\",\r\n               \"scaling\": [1,1,1],\r\n               \"translation\": [1, 0, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"right-forearm\",\r\n                   \"scaling\": [1,1,1],\r\n                   \"translation\": [1, 0, 0],\r\n                   \"children\": [\r\n                     {\r\n                       \"draw\": true,\r\n                       \"name\": \"right-hand\",\r\n                       \"scaling\": [1,1,1],\r\n                       \"translation\": [1, 0, 0],\r\n                       \"children\":[]\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             }\r\n           ]\r\n         },\r\n         {\r\n           \"draw\": true,\r\n           \"name\": \"left-leg\",\r\n           \"translation\": [-1, -1, 0],\r\n           \"children\": [\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"left-calf\",\r\n               \"scaling\": [1,1,1],\r\n               \"translation\": [0, -1, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"left-foot\",\r\n                   \"scaling\": [1,1,1],\r\n                   \"translation\": [0, -1, 0],\r\n                   \"children\": []\r\n                 }\r\n               ]\r\n             }\r\n           ]\r\n         },\r\n         {\r\n           \"draw\": true,\r\n           \"name\": \"right-leg\",\r\n           \"scaling\": [1,1,1],\r\n           \"translation\": [1, -1, 0],\r\n           \"children\": [\r\n             {\r\n               \"draw\": true,\r\n               \"name\": \"right-calf\",\r\n               \"scaling\": [1,1,1],\r\n               \"translation\": [0, -1, 0],\r\n               \"children\": [\r\n                 {\r\n                   \"draw\": true,\r\n                   \"name\": \"right-foot\",\r\n                   \"scaling\": [1,1,1],\r\n                   \"translation\": [0, -1, 0],\r\n                   \"children\": []\r\n                 }\r\n               ]\r\n             }\r\n           ]\r\n         }\r\n       ]\r\n    }\r\n  ]\r\n}`;\r\n\r\n\r\n\r\n}\r\n","\r\nimport * as twgl from \"./../node_modules/twgl.js\";    // Greg's work\r\nimport { m4 } from \"./../node_modules/twgl.js\";\r\n\r\nexport class DrawInstanced \r\n// https://webgl2fundamentals.org/webgl/lessons/webgl-instanced-drawing.html\r\n{\r\n  gl: WebGL2RenderingContext | undefined;\r\n  fieldOfViewRadians: number  | undefined;\r\n  \r\n   vertexShaderSource = `#version 300 es\r\nin vec4 a_position;\r\nin vec4 color;\r\nin mat4 matrix;\r\nuniform mat4 projection;\r\nuniform mat4 view;\r\n\r\nout vec4 v_color;\r\n\r\nvoid main() {\r\n  // Multiply the position by the matrix.\r\n  gl_Position = projection * view * matrix * a_position;\r\n\r\n  // Pass the vertex color to the fragment shader.\r\n  v_color = color;\r\n}\r\n`;\r\n\r\n fragmentShaderSource = `#version 300 es\r\nprecision highp float;\r\n\r\n// Passed in from the vertex shader.\r\nin vec4 v_color;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  outColor = v_color;\r\n}\r\n`;\r\n\r\nprogram: WebGLProgram | undefined;\r\nprojectionLoc: WebGLUniformLocation | undefined;\r\nviewLoc: WebGLUniformLocation | undefined;\r\nvao: WebGLVertexArrayObject | undefined;\r\n\r\nnumVertices:number = 12;\r\nnumInstances: number =5;\r\nmatrices: Float32Array[] = [];\r\nmatrixBuffer: WebGLBuffer | undefined;\r\nmatrixData: Float32Array| undefined;\r\n\r\nresizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n  \r\nmain(gl: WebGL2RenderingContext) {\r\n \r\n  twgl.setAttributePrefix(\"a_\");\r\n \r\n  this.gl = gl;\r\n  const programInfo = twgl.createProgramInfo(gl, [this.vertexShaderSource, this.fragmentShaderSource]);\r\n  this.program =programInfo.program;\r\n\r\n  const positionLoc = gl.getAttribLocation(this.program, 'a_position');\r\n  const colorLoc = gl.getAttribLocation(this.program, 'color');\r\n  const matrixLoc = gl.getAttribLocation(this.program, 'matrix');\r\n  this.projectionLoc = gl.getUniformLocation(this.program, 'projection')!;\r\n  this.viewLoc = gl.getUniformLocation(this.program, 'view')!;\r\n\r\n  // Create a vertex array object (attribute state)\r\n  this.vao = gl.createVertexArray()!;\r\n\r\n  // and make it the one we're currently working with\r\n  gl.bindVertexArray(this.vao);\r\n\r\n  const positionBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n  /*    -0.1,  0.4,\r\n      -0.1, -0.4,\r\n       0.1, -0.4,\r\n       0.1, -0.4,\r\n      -0.1,  0.4,\r\n       0.1,  0.4,\r\n       0.4, -0.1,\r\n      -0.4, -0.1,\r\n      -0.4,  0.1,\r\n      -0.4,  0.1,\r\n       0.4, -0.1,\r\n       0.4,  0.1, */ // corrected Greggs list to have the triangles of each spoke turn in the same direction.\r\n                     // this will allow  gl.enable(gl.DEPTH_TEST) and gl.enable(gl.CULL_FACE) in the\r\n                     // preparation when this is ported to a scene class.\r\n\r\n       -0.1,  0.4,\r\n       -0.1, -0.4,\r\n        0.1, -0.4,\r\n       -0.1,  0.4,\r\n       0.1, -0.4,\r\n       0.1,  0.4,\r\n       -0.4, -0.1,\r\n       0.4, -0.1,\r\n       -0.4,  0.1,\r\n       -0.4,  0.1,\r\n        0.4, -0.1,\r\n        0.4,  0.1,\r\n \r\n    ]), gl.STATIC_DRAW);\r\n  this.numVertices = 12;\r\n\r\n  // setup the position attribute\r\n  gl.enableVertexAttribArray(positionLoc);\r\n  gl.vertexAttribPointer(\r\n      positionLoc,  // location\r\n      2,            // size (num values to pull from buffer per iteration)\r\n      gl.FLOAT,     // type of data in buffer\r\n      false,        // normalize\r\n      0,            // stride (0 = compute from size and type above)\r\n      0,            // offset in buffer\r\n  );\r\n\r\n  // setup matrixes, one per instance\r\n  this.numInstances = 5;\r\n  // make a typed array with one view per matrix\r\n  this.matrixData = new Float32Array(this.numInstances * 16)!;\r\n   for (let i = 0; i < this.numInstances; ++i) {\r\n    const byteOffsetToMatrix = i * 16 * 4;\r\n    const numFloatsForView = 16;\r\n    this.matrices.push(new Float32Array(\r\n        this.matrixData.buffer,\r\n        byteOffsetToMatrix,\r\n        numFloatsForView));\r\n  }\r\n\r\n  this.matrixBuffer = gl.createBuffer()!;\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.matrixBuffer);\r\n  // just allocate the buffer\r\n  gl.bufferData(gl.ARRAY_BUFFER, this.matrixData.byteLength, gl.DYNAMIC_DRAW);\r\n\r\n  // set all 4 attributes for matrix\r\n  const bytesPerMatrix = 4 * 16;\r\n  for (let i = 0; i < 4; ++i) {\r\n    const loc = matrixLoc + i;\r\n    gl.enableVertexAttribArray(loc);\r\n    // note the stride and offset\r\n    const offset = i * 16;  // 4 floats per row, 4 bytes per float\r\n    gl.vertexAttribPointer(\r\n        loc,              // location\r\n        4,                // size (num values to pull from buffer per iteration)\r\n        gl.FLOAT,         // type of data in buffer\r\n        false,            // normalize\r\n        bytesPerMatrix,   // stride, num bytes to advance to get to next set of values\r\n        offset,           // offset in buffer\r\n    );\r\n    // this line says this attribute only changes for each 1 instance\r\n    gl.vertexAttribDivisor(loc, 1);\r\n  }\r\n\r\n  // setup colors, one per instance\r\n  const colorBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER,\r\n      new Float32Array([\r\n          1, 0, 0, 1,  // red\r\n          0, 1, 0, 1,  // green\r\n          0, 0, 1, 1,  // blue\r\n          1, 0, 1, 1,  // magenta\r\n          0, 1, 1, 1,  // cyan\r\n        ]),\r\n      gl.STATIC_DRAW);\r\n\r\n  // set attribute for color\r\n  gl.enableVertexAttribArray(colorLoc);\r\n  gl.vertexAttribPointer(colorLoc, 4, gl.FLOAT, false, 0, 0);\r\n  // this line says this attribute only changes for each 1 instance\r\n  gl.vertexAttribDivisor(colorLoc, 1);\r\n\r\n  requestAnimationFrame(()=>this.drawScene(0.0));\r\n  }\r\n\r\n  drawScene(time: number) {\r\n\r\n    var gl = this.gl!;\r\n    time *= 0.001; // seconds\r\n\r\n    twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n\r\n    // Tell WebGL how to convert from clip space to pixels\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n    gl.useProgram(this.program!);\r\n\r\n    // set the view and projection matrices since\r\n    // they are shared by all instances\r\n    const aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n    gl.uniformMatrix4fv(this.projectionLoc!, false, m4.ortho(-aspect, aspect, -1, 1, -1, 1));\r\n    gl.uniformMatrix4fv(this.viewLoc!, false, m4.axisRotation([0,0,1],time * .1));\r\n\r\n    // setup all attributes\r\n    gl.bindVertexArray(this.vao!);\r\n\r\n    // update all the matrices\r\n    this.matrices.forEach((mat, ndx) => {\r\n      m4.translation([-0.5 + ndx * 0.25, 0, 0], mat);\r\n      m4.axisRotate(mat, [0,0,1],time * (0.1 + 0.1 * ndx), mat);\r\n    });\r\n\r\n    // upload the new matrix data\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.matrixBuffer!);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.matrixData!);\r\n\r\n    gl.drawArraysInstanced(\r\n      gl.TRIANGLES,\r\n      0,             // offset\r\n      this.numVertices,   // num vertices per instance\r\n      this.numInstances,  // num instances\r\n    );\r\n    //requestAnimationFrame(render);\r\n    requestAnimationFrame((time)=>this.drawScene(time));\r\n  }\r\n \r\n}\r\n\r\n\r\n","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\n\r\nexport class Canvas3dTexture\r\n{\r\n\r\n vertexShaderSource = `#version 300 es\r\n\r\n// an attribute is an input (in) to a vertex shader.\r\n// It will receive data from a buffer\r\nin vec4 a_position;\r\nin vec2 a_texcoord;\r\n\r\n// A matrix to transform the positions by\r\nuniform mat4 u_matrix;\r\n\r\n// a varying to pass the texture coordinates to the fragment shader\r\nout vec2 v_texcoord;\r\n\r\n// all shaders have a main function\r\nvoid main() {\r\n  // Multiply the position by the matrix.\r\n  gl_Position = u_matrix * a_position;\r\n\r\n  // Pass the texcoord to the fragment shader.\r\n  v_texcoord = a_texcoord;\r\n}\r\n`;\r\n\r\n fragmentShaderSource = `#version 300 es\r\n\r\nprecision highp float;\r\n\r\n// Passed in from the vertex shader.\r\nin vec2 v_texcoord;\r\n\r\n// The texture.\r\nuniform sampler2D u_texture;\r\nuniform vec4 u_colorMult;\r\n\r\n// we need to declare an output for the fragment shader\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n   outColor = vec4(texture(u_texture, v_texcoord).rrr, 1) * u_colorMult;\r\n}\r\n`;\r\n\r\n main(gl:WebGL2RenderingContext) {\r\n  // Get A WebGL context\r\n  /** @type {HTMLCanvasElement} */\r\n  var canvas = gl.canvas; // document.querySelector(\"#canvas\");\r\n  //var gl = canvas.getContext(\"webgl2\");\r\n  if (!gl) {\r\n    return;\r\n  }\r\n\r\n  // Use our boilerplate utils to compile the shaders and link into a program\r\n  var program = twgl.createProgramFromSources(gl,\r\n      [this.vertexShaderSource, this.fragmentShaderSource]);\r\n\r\n  // look up where the vertex data needs to go.\r\n  var positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\r\n  var texcoordAttributeLocation = gl.getAttribLocation(program, \"a_texcoord\");\r\n\r\n  // look up uniform locations\r\n  var matrixLocation = gl.getUniformLocation(program, \"u_matrix\");\r\n  var textureLocation = gl.getUniformLocation(program, \"u_texture\");\r\n  var colorMultLocation = gl.getUniformLocation(program, \"u_colorMult\");\r\n\r\n  // Create a buffer\r\n  var positionBuffer = gl.createBuffer();\r\n\r\n  // Create a vertex array object (attribute state)\r\n  var vao = gl.createVertexArray();\r\n\r\n  // and make it the one we're currently working with\r\n  gl.bindVertexArray(vao);\r\n\r\n  // Turn on the attribute\r\n  gl.enableVertexAttribArray(positionAttributeLocation);\r\n\r\n  // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n  // Set Geometry.\r\n  this.setGeometry(gl);\r\n\r\n  // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n  var size = 3;          // 3 components per iteration\r\n  var type = gl.FLOAT;   // the data is 32bit floats\r\n  var normalize = false; // don't normalize the data\r\n  var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n  var offset = 0;        // start at the beginning of the buffer\r\n  gl.vertexAttribPointer(\r\n      positionAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n  // create the texcoord buffer, make it the current ARRAY_BUFFER\r\n  // and copy in the texcoord values\r\n  var texcoordBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\r\n  this.setTexcoords(gl);\r\n\r\n  // Turn on the attribute\r\n  gl.enableVertexAttribArray(texcoordAttributeLocation);\r\n\r\n  // Tell the attribute how to get data out of texcoordBuffer (ARRAY_BUFFER)\r\n  var size = 2;          // 2 components per iteration\r\n  var type = gl.FLOAT;   // the data is 32bit floating point values\r\n  var normalize = true;  // convert from 0-255 to 0.0-1.0\r\n  var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next color\r\n  var offset = 0;        // start at the beginning of the buffer\r\n  gl.vertexAttribPointer(\r\n      texcoordAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n  // Create a texture.\r\n  var texture = gl.createTexture();\r\n\r\n  // use texture unit 0\r\n  gl.activeTexture(gl.TEXTURE0 + 0);\r\n\r\n  // bind to the TEXTURE_2D bind point of texture unit 0\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  // fill texture with 3x2 pixels\r\n  {\r\n    const level = 0;\r\n    const internalFormat = gl.R8;\r\n    const width = 3;\r\n    const height = 2;\r\n    const border = 0;\r\n    const format = gl.RED;\r\n    const type = gl.UNSIGNED_BYTE;\r\n    const data = new Uint8Array([\r\n      128,  64, 128,\r\n        0, 192,   0,\r\n    ]);\r\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border,\r\n                  format, type, data);\r\n  }\r\n\r\n  // set the filtering so we don't need mips\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n  // Create a texture to render to\r\n  const targetTextureWidth = 256;\r\n  const targetTextureHeight = 256;\r\n  const targetTexture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, targetTexture);\r\n\r\n  {\r\n    // define size and format of level 0\r\n    const level = 0;\r\n    const internalFormat = gl.RGBA;\r\n    const border = 0;\r\n    const format = gl.RGBA;\r\n    const type = gl.UNSIGNED_BYTE;\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n                  targetTextureWidth, targetTextureHeight, border,\r\n                  format, type, data);\r\n\r\n    // set the filtering so we don't need mips\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n\r\n  // Create and bind the framebuffer\r\n  const fb = gl.createFramebuffer();\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\r\n  // attach the texture as the first color attachment\r\n  const attachmentPoint = gl.COLOR_ATTACHMENT0;\r\n  const level = 0;\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, targetTexture, level);\r\n\r\n  // create a depth texture\r\n  const depthTexture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, depthTexture);\r\n\r\n  // make a depth buffer and the same size as the targetTexture\r\n  {\r\n    // define size and format of level 0\r\n    const level = 0;\r\n    const internalFormat = gl.DEPTH_COMPONENT24;\r\n    const border = 0;\r\n    const format = gl.DEPTH_COMPONENT;\r\n    const type = gl.UNSIGNED_INT;\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n                  targetTextureWidth, targetTextureHeight, border,\r\n                  format, type, data);\r\n\r\n    // set the filtering so we don't need mips\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n    // attach the depth texture to the framebuffer\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, level);\r\n  }\r\n\r\n  var fieldOfViewRadians = (60* Math.PI / 180);\r\n  var modelXRotationRadians = (0);\r\n  var modelYRotationRadians = (0);\r\n\r\n  // Get the starting time.\r\n  var then = 0;\r\n\r\n  requestAnimationFrame(drawScene);\r\n\r\n  function drawCube(aspect:number) {\r\n    // Tell it to use our program (pair of shaders)\r\n    gl.useProgram(program);\r\n\r\n    // Bind the attribute/buffer set we want.\r\n    gl.bindVertexArray(vao);\r\n\r\n    // Compute the projection matrix\r\n    var projectionMatrix =\r\n        m4.perspective(fieldOfViewRadians, aspect, 1, 2000);\r\n\r\n    var cameraPosition = [0, 0, 2];\r\n    var up = [0, 1, 0];\r\n    var target = [0, 0, 0];\r\n\r\n    // Compute the camera's matrix using look at.\r\n    var cameraMatrix = m4.lookAt(cameraPosition, target, up);\r\n\r\n    // Make a view matrix from the camera matrix.\r\n    var viewMatrix = m4.inverse(cameraMatrix);\r\n\r\n    var viewProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix);\r\n\r\n    for (let x = -1; x <= 1; ++x) {\r\n      var matrix = m4.translate(viewProjectionMatrix, [x * .9, 0, 0]);\r\n      matrix = m4.axisRotate(matrix,[1,0,0], modelXRotationRadians * x);\r\n      matrix = m4.axisRotate(matrix,[0,1,0], modelYRotationRadians * x);\r\n\r\n      // Set the matrix.\r\n      gl.uniformMatrix4fv(matrixLocation, false, matrix);\r\n\r\n      // Tell the shader to use texture unit 0 for u_texture\r\n      gl.uniform1i(textureLocation, 0);\r\n\r\n      const c = x * .5 + .5;\r\n      gl.uniform4fv(colorMultLocation, [c * .5 + .5, 1, 1 - c, 1]);\r\n\r\n      // Draw the geometry.\r\n      var primitiveType = gl.TRIANGLES;\r\n      var offset = 0;\r\n      var count = 6 * 6;\r\n      gl.drawArrays(primitiveType, offset, count);\r\n    }\r\n  }\r\n\r\n  // Draw the scene.\r\n  function drawScene(time:number) {\r\n    // convert to seconds\r\n    time *= 0.001;\r\n    // Subtract the previous time from the current time\r\n    var deltaTime = time - then;\r\n    // Remember the current time for the next frame.\r\n    then = time;\r\n\r\n    // Animate the rotation\r\n    modelYRotationRadians += -0.7 * deltaTime;\r\n    modelXRotationRadians += -0.4 * deltaTime;\r\n\r\n    twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    {\r\n      // render to our targetTexture by binding the framebuffer\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\r\n      // render cube with our 3x2 texture\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n      // Tell WebGL how to convert from clip space to pixels\r\n      gl.viewport(0, 0, targetTextureWidth, targetTextureHeight);\r\n\r\n      // Clear the canvas AND the depth buffer.\r\n      gl.clearColor(.5, .7, 1, 1);   // clear to blue\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      const aspect = targetTextureWidth / targetTextureHeight;\r\n      drawCube(aspect);\r\n    }\r\n\r\n    {\r\n      // render to the canvas\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n      // render the cube with the texture we just rendered to\r\n      gl.bindTexture(gl.TEXTURE_2D, targetTexture);\r\n\r\n      // Tell WebGL how to convert from clip space to pixels\r\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n      // Clear the canvas AND the depth buffer.\r\n      gl.clearColor(1, 1, 1, 1);   // clear to white\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n\r\n      const aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n      drawCube(aspect);\r\n    }\r\n\r\n    requestAnimationFrame(drawScene);\r\n  }\r\n}\r\n\r\n// Fill the buffer with the values that define a cube.\r\n setGeometry(gl: WebGL2RenderingContext) {\r\n  var positions = new Float32Array(\r\n    [\r\n    -0.5, -0.5,  -0.5,\r\n    -0.5,  0.5,  -0.5,\r\n     0.5, -0.5,  -0.5,\r\n    -0.5,  0.5,  -0.5,\r\n     0.5,  0.5,  -0.5,\r\n     0.5, -0.5,  -0.5,\r\n\r\n    -0.5, -0.5,   0.5,\r\n     0.5, -0.5,   0.5,\r\n    -0.5,  0.5,   0.5,\r\n    -0.5,  0.5,   0.5,\r\n     0.5, -0.5,   0.5,\r\n     0.5,  0.5,   0.5,\r\n\r\n    -0.5,   0.5, -0.5,\r\n    -0.5,   0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n    -0.5,   0.5,  0.5,\r\n     0.5,   0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n\r\n    -0.5,  -0.5, -0.5,\r\n     0.5,  -0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,  -0.5,  0.5,\r\n     0.5,  -0.5, -0.5,\r\n     0.5,  -0.5,  0.5,\r\n\r\n    -0.5,  -0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,   0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,   0.5,  0.5,\r\n    -0.5,   0.5, -0.5,\r\n\r\n     0.5,  -0.5, -0.5,\r\n     0.5,   0.5, -0.5,\r\n     0.5,  -0.5,  0.5,\r\n     0.5,  -0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n     0.5,   0.5,  0.5,\r\n\r\n    ]);\r\n  gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n}\r\n\r\n// Fill the buffer with texture coordinates the cube.\r\n setTexcoords(gl: WebGL2RenderingContext) {\r\n  gl.bufferData(\r\n      gl.ARRAY_BUFFER,\r\n      new Float32Array(\r\n        [\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n          1, 0,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n          1, 0,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n          1, 0,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n\r\n      ]),\r\n      gl.STATIC_DRAW);\r\n}\r\n}\r\n","import * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as scene from \"./scene\"\r\nimport * as datgui from \"dat.gui\";\r\nimport * as camhandler from \"./../baseapp/camhandler\"   // camera projection\r\n\r\nimport { TAnimation1Parameters }  from \"./scene\"\r\n\r\nexport class Canvas3dTextureScene\r\nimplements scene.SceneInterface\r\n{\r\n  twglprograminfo: twgl.ProgramInfo[]|null=null;  // shaders are provided in interface string fields, in this scene twglprograminfo[] remains null\r\n  scenesize=60;\r\n  sceneenv=2;\r\n  positionLocation: number | undefined; // WebGLUniformLocation | undefined;\r\n  cameraPosition: [number,number,number] | undefined\r\n  animationParameters: TAnimation1Parameters | undefined;\r\n  public resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n  public extendGUI(gui: datgui.GUI) \r\n  {\r\n    gui.add(this.animationParameters!, 'fov', 5.0,85.0,1.0 );\r\n \r\n  }\r\n\r\n     targetTextureWidth = 512;\r\n     targetTextureHeight = 512;\r\n  \r\n  gl: WebGL2RenderingContext | undefined;\r\n  program: WebGLProgram | undefined;\r\n  texture: WebGLTexture |undefined;\r\n  targetTexture: WebGLTexture |undefined;\r\n  fb: WebGLFramebuffer | undefined;\r\n\r\n  vertexShaderSource = `#version 300 es\r\n\r\n    // an attribute is an input (in) to a vertex shader.\r\n    // It will receive data from a buffer\r\n    in vec4 a_position;\r\n    in vec2 a_texcoord;\r\n\r\n    // A matrix to transform the positions by\r\n    uniform mat4 u_matrix;\r\n\r\n    // a varying to pass the texture coordinates to the fragment shader\r\n    out vec2 v_texcoord;\r\n\r\n    // all shaders have a main function\r\n    void main() {\r\n      // Multiply the position by the matrix.\r\n      gl_Position = u_matrix * a_position;\r\n\r\n      // Pass the texcoord to the fragment shader.\r\n      v_texcoord = a_texcoord;\r\n    }\r\n    `;\r\n\r\n fragmentShaderSource = `#version 300 es\r\n\r\n    precision highp float;\r\n\r\n    // Passed in from the vertex shader.\r\n    in vec2 v_texcoord;\r\n\r\n    // The texture.\r\n    uniform sampler2D u_texture;\r\n    uniform vec4 u_colorMult;\r\n\r\n    // we need to declare an output for the fragment shader\r\n    out vec4 outColor;\r\n\r\n    void main() {\r\n      outColor = vec4(texture(u_texture, v_texcoord).rrr, 1) * u_colorMult;\r\n    }\r\n    `;\r\n\r\n\r\nmatrixLocation: WebGLUniformLocation|undefined;\r\ntextureLocation: WebGLUniformLocation|undefined;\r\ncolorMultLocation:  WebGLUniformLocation|undefined;\r\nvao:WebGLVertexArrayObject |undefined;\r\n\r\nfieldOfViewRadians:number = (60* Math.PI / 180);\r\n\r\npublic constructor(gl: WebGL2RenderingContext)\r\n{\r\n  this.twglprograminfo=new Array(2);   \r\n  console.log(\"=> scene constructor 3dtexture\")\r\n  this.twglprograminfo[1] = twgl.createProgramInfo(gl, [this.vertexShaderSource, this.fragmentShaderSource]);\r\n  console.log(\"<= scene constructor 3dtexture\")\r\n}\r\n\r\n\r\npositionBuffer: WebGLBuffer|undefined;\r\npositionAttributeLocation: number|undefined;\r\n\r\npublic restoreContext(gl: WebGL2RenderingContext, posBuffer: WebGLBuffer, posAttributeLocation: number, size: number)\r\n{\r\n  // ==> 2023-03-01 restore this part to solve the clear error\r\n    // 1. Bind the buffer\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\n    // 2. Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n    //var size = 2;          // 2 components per iteration\r\n    var type = gl.FLOAT;   // the data is 32bit floats\r\n    var normalize = false; // don't normalize the data\r\n    var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n    var offset = 0;        // start at the beginning of the buffer\r\n    gl.vertexAttribPointer(posAttributeLocation, size, type, normalize, stride, offset);\r\n    // 3. Enable this\r\n    gl.enableVertexAttribArray(posAttributeLocation);\r\n    // <==\r\n}\r\n\r\ninitScene(gl: WebGL2RenderingContext, cap: scene.TAnimation1Parameters, dictpar:Map<string,string>, p: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined) \r\n{  // Get A WebGL context\r\n  /** @type {HTMLCanvasElement} */\r\n  var canvas = gl.canvas; // document.querySelector(\"#canvas\");\r\n  //var gl = canvas.getContext(\"webgl2\");\r\n  if (!gl) {\r\n    console.log(\"ERROR: gl found null in canvas3dtexturescene.initScene()\")\r\n    return;\r\n  }\r\n  console.log(\"=> canvas3dtexturescene.initScene()\");\r\n  // Use our boilerplate utils to compile the shaders and link into a program\r\n  this.program = p.program;\r\n  // twgl.createProgramFromSources(gl,\r\n  //    [this.vertexShaderSource, this.fragmentShaderSource]);\r\n\r\n  // look up where the vertex data needs to go.\r\n  this.positionAttributeLocation = gl.getAttribLocation(this.program, \"a_position\");\r\n  var texcoordAttributeLocation = gl.getAttribLocation(this.program, \"a_texcoord\");\r\n\r\n  // look up uniform locations\r\n  this.matrixLocation = gl.getUniformLocation(this.program, \"u_matrix\")!;\r\n  this.textureLocation = gl.getUniformLocation(this.program, \"u_texture\")!;\r\n  this.colorMultLocation = gl.getUniformLocation(this.program, \"u_colorMult\")!;\r\n\r\n  // Create a buffer\r\n  this.positionBuffer = gl.createBuffer()!;\r\n\r\n  // Create a vertex array object (attribute state)\r\n   this.vao = gl.createVertexArray()!;\r\n\r\n  // and make it the one we're currently working with\r\n  gl.bindVertexArray(this.vao);\r\n\r\n  this.restoreContext(gl, this.positionBuffer,this.positionAttributeLocation,3);\r\n  /*\r\n  // Turn on the attribute\r\n  gl.enableVertexAttribArray(this.positionAttributeLocation);\r\n  // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\r\n  // Set Geometry.\r\n  // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n  var size = 3;          // 3 components per iteration\r\n  var type = gl.FLOAT;   // the data is 32bit floats\r\n  var normalize = false; // don't normalize the data\r\n  var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n  var offset = 0;        // start at the beginning of the buffer\r\n  gl.vertexAttribPointer( this.positionAttributeLocation, size, type, normalize, stride, offset);\r\n*/\r\n\r\nvar positions = this.setGeometry(gl);\r\ngl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n  \r\n  // create the texcoord buffer, make it the current ARRAY_BUFFER\r\n  // and copy in the texcoord values\r\n  var texcoordBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\r\n  var texbuffer= this.setTexcoords(gl);\r\n  gl.bufferData( gl.ARRAY_BUFFER, texbuffer, gl.STATIC_DRAW);\r\n\r\n  // Turn on the attribute\r\n  gl.enableVertexAttribArray(texcoordAttributeLocation);\r\n\r\n  // Tell the attribute how to get data out of texcoordBuffer (ARRAY_BUFFER)\r\n  var size = 2;          // 2 components per iteration\r\n  var type = gl.FLOAT;   // the data is 32bit floating point values\r\n  var normalize = true;  // convert from 0-255 to 0.0-1.0\r\n  var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next color\r\n  var offset = 0;        // start at the beginning of the buffer\r\n  gl.vertexAttribPointer(\r\n      texcoordAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n  // Create a texture.\r\n  this.texture = gl.createTexture()!;\r\n\r\n  // use texture unit 0\r\n  gl.activeTexture(gl.TEXTURE0 + 0);\r\n\r\n  // bind to the TEXTURE_2D bind point of texture unit 0\r\n  gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\r\n  // fill texture with 3x2 pixels\r\n  {\r\n    const level = 0;\r\n    const internalFormat = gl.R8;\r\n    const width = 3;\r\n    const height = 2;\r\n    const border = 0;\r\n    const format = gl.RED;\r\n    const type = gl.UNSIGNED_BYTE;\r\n    const data = new Uint8Array([\r\n      128,  64, 128,\r\n        0, 192,   0,\r\n    ]);\r\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border,\r\n                  format, type, data);\r\n  }\r\n\r\n  // set the filtering so we don't need mips\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n  // Create a texture to render to\r\n  //const targetTextureWidth = 256;\r\n  //const targetTextureHeight = 256;\r\n  this.targetTexture = gl.createTexture()!;\r\n  gl.bindTexture(gl.TEXTURE_2D, this.targetTexture);\r\n\r\n  {\r\n    // define size and format of level 0\r\n    const level = 0;\r\n    const internalFormat = gl.RGBA;\r\n    const border = 0;\r\n    const format = gl.RGBA;\r\n    const type = gl.UNSIGNED_BYTE;\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n                  this.targetTextureWidth, this.targetTextureHeight, border,\r\n                  format, type, data);\r\n\r\n    // set the filtering so we don't need mips\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n\r\n  // Create and bind the framebuffer\r\n  this.fb = gl.createFramebuffer()!;\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb);\r\n\r\n  // attach the texture as the first color attachment\r\n  const attachmentPoint = gl.COLOR_ATTACHMENT0;\r\n  const level = 0;\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, this.targetTexture, level);\r\n\r\n  // create a depth texture\r\n  const depthTexture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, depthTexture);\r\n\r\n  // make a depth buffer and the same size as the targetTexture\r\n  {\r\n    // define size and format of level 0\r\n    const level = 0;\r\n    const internalFormat = gl.DEPTH_COMPONENT24;\r\n    const border = 0;\r\n    const format = gl.DEPTH_COMPONENT;\r\n    const type = gl.UNSIGNED_INT;\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n                  this.targetTextureWidth, this.targetTextureHeight, border,\r\n                  format, type, data);\r\n\r\n    // set the filtering so we don't need mips\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n    // attach the depth texture to the framebuffer\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, level);\r\n  }\r\n\r\n//  var modelXRotationRadians = (0);\r\n//  var modelYRotationRadians = (0);\r\n\r\n  // Get the starting time.\r\n  // var then = 0;\r\n\r\n  this.gl = gl;\r\n  this.ctime = 0.0;\r\n\r\n  console.log(\"<= canvas3dtexturescene.initScene()\");\r\n\r\n  sceneReadyCallback(-1);\r\n//  requestAnimationFrame((time)=>this.drawScene(time));\r\n//  requestAnimationFrame(drawScene);\r\n\r\n }\r\n\r\n  drawCube( aspect:number,cam: camhandler.Camera|null) {\r\n    // Tell it to use our program (pair of shaders)\r\n\r\n   var gl = this.gl!;\r\n   var program= this.program!;\r\n\r\n    gl.useProgram(program);\r\n\r\n    // Bind the attribute/buffer set we want.\r\n    gl.bindVertexArray(this.vao!);\r\n\r\n    this.restoreContext(gl, this.positionBuffer!,this.positionAttributeLocation!,3);\r\n  \r\n    // Compute the projection matrix\r\n    var projectionMatrix =\r\n        m4.perspective(this.fieldOfViewRadians, aspect, 1, 2000);\r\n\r\n    var viewProjectionMatrix = m4.identity();\r\n    if (cam==null)\r\n    {\r\n      var cameraPosition = [0, 0, 2];\r\n      var up = [0, 1, 0];\r\n      var target = [0, 0, 0];\r\n\r\n      // Compute the camera's matrix using look at.\r\n      var cameraMatrix = m4.lookAt(cameraPosition, target, up);\r\n\r\n      // Make a view matrix from the camera matrix.\r\n      var viewMatrix = m4.inverse(cameraMatrix);\r\n      \r\n      viewProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix);\r\n    } else\r\n    {\r\n      //---Camera - Compute the matrix\r\n      var aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n      var zNear = 1;\r\n      var zFar = 2000;\r\n      var projectionMatrix = m4.perspective(this.fieldOfViewRadians, aspect, zNear, zFar);\r\n\r\n      // Compute the camera's matrix\r\n      var camera = cam.Position();\r\n      var cameraMatrix = cam.lookAt; // Lx delegate task elsewhere m4.lookAt(camera, target, up);\r\n\r\n      // Make a view matrix from the camera matrix.\r\n      var viewMatrix = m4.inverse(cameraMatrix);\r\n\r\n      // create a viewProjection matrix. This will both apply perspective\r\n      // AND move the world so that the camera is effectively the origin\r\n      viewProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix);\r\n    }\r\n\r\n   var x=1;\r\n   // for (let x = -1; x <= 1; ++x) \r\n   {\r\n      var matrix = m4.translate(viewProjectionMatrix,[0,0,0]); // [x * .9, 0, 0]);\r\n      matrix = m4.axisRotate(matrix,[1,0,0], this.modelXRotationRadians * x);\r\n      matrix = m4.axisRotate(matrix,[0,1,0], this.modelYRotationRadians * x);\r\n\r\n\r\n      // Set the matrix.\r\n      gl.uniformMatrix4fv(this.matrixLocation!, false, matrix);\r\n\r\n      // Tell the shader to use texture unit 0 for u_texture\r\n      gl.uniform1i(this.textureLocation!, 0);\r\n\r\n      const c = x * .1 + .5;\r\n      gl.uniform4fv(this.colorMultLocation!, [c * .5 + .5, 1, 1 - c, 1]);\r\n\r\n      // Draw the geometry.\r\n      var primitiveType = gl.TRIANGLES;\r\n      var offset = 0;\r\n      var count = 6 * 6;\r\n      gl.drawArrays(primitiveType, offset, count);\r\n    }\r\n  }\r\n\r\n  ctime: number = 0;\r\n  modelXRotationRadians: number=0;\r\n  modelYRotationRadians: number=0;\r\n  // Draw the scene.\r\n  public drawScene(gl: WebGL2RenderingContext,cam: camhandler.Camera, time: number) \r\n {\r\n \r\n    // convert to seconds\r\n    time *= 0.001;\r\n    // Subtract the previous time from the current time\r\n    var deltaTime = time - this.ctime;\r\n    // Remember the current time for the next frame.\r\n    this.ctime = time;\r\n\r\n    // Animate the rotation\r\n    this.modelYRotationRadians += -0.7 * deltaTime;\r\n    this.modelXRotationRadians += -0.4 * deltaTime;\r\n\r\n  //  twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n\r\n    {\r\n      // render to our targetTexture by binding the framebuffer\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb!);\r\n\r\n      // render cube with our 3x2 texture\r\n      gl.bindTexture(gl.TEXTURE_2D, this.texture!);\r\n\r\n      // Tell WebGL how to convert from clip space to pixels\r\n      gl.viewport(0, 0, this.targetTextureWidth, this.targetTextureHeight);\r\n\r\n      // Clear the canvas AND the depth buffer.\r\n      gl.clearColor(.5, .7, 1, 1);   // clear to blue\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      const aspect = this.targetTextureWidth / this.targetTextureHeight;\r\n      this.drawCube(aspect, null);\r\n    }\r\n\r\n    {\r\n      // render to the canvas\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n      // render the cube with the texture we just rendered to\r\n      gl.bindTexture(gl.TEXTURE_2D, this.targetTexture!);\r\n\r\n      // Tell WebGL how to convert from clip space to pixels\r\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n      // Clear the canvas AND the depth buffer.\r\n  //    gl.clearColor(1, 1, 1, 1);   // clear to white\r\n  //    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n\r\n      const aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n      this.drawCube(aspect, cam);\r\n    }\r\n\r\n    //requestAnimationFrame((time)=>this.drawScene(time));\r\n  }\r\n\r\n\r\n\r\n// Fill the buffer with the values that define a cube.\r\n setGeometry(gl: WebGL2RenderingContext):Float32Array {\r\n  var positions = new Float32Array(\r\n    [\r\n    -0.5, -0.5,  -0.5,\r\n    -0.5,  0.5,  -0.5,\r\n     0.5, -0.5,  -0.5,\r\n    -0.5,  0.5,  -0.5,\r\n     0.5,  0.5,  -0.5,\r\n     0.5, -0.5,  -0.5,\r\n\r\n    -0.5, -0.5,   0.5,\r\n     0.5, -0.5,   0.5,\r\n    -0.5,  0.5,   0.5,\r\n    -0.5,  0.5,   0.5,\r\n     0.5, -0.5,   0.5,\r\n     0.5,  0.5,   0.5,\r\n\r\n    -0.5,   0.5, -0.5,\r\n    -0.5,   0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n    -0.5,   0.5,  0.5,\r\n     0.5,   0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n\r\n    -0.5,  -0.5, -0.5,\r\n     0.5,  -0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,  -0.5,  0.5,\r\n     0.5,  -0.5, -0.5,\r\n     0.5,  -0.5,  0.5,\r\n\r\n    -0.5,  -0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,   0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,   0.5,  0.5,\r\n    -0.5,   0.5, -0.5,\r\n\r\n     0.5,  -0.5, -0.5,\r\n     0.5,   0.5, -0.5,\r\n     0.5,  -0.5,  0.5,\r\n     0.5,  -0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n     0.5,   0.5,  0.5,\r\n\r\n    ]);\r\n // \r\n  return positions;\r\n}\r\n\r\n// Fill the buffer with texture coordinates the cube.\r\n setTexcoords(gl: WebGL2RenderingContext): Float32Array {\r\n  //\r\n  //   \r\n  return    new Float32Array(\r\n        [\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n          1, 0,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n          1, 0,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n          1, 0,\r\n\r\n          0, 0,\r\n          0, 1,\r\n          1, 0,\r\n          1, 0,\r\n          0, 1,\r\n          1, 1,\r\n\r\n      ]);\r\n      //),\r\n      //gl.STATIC_DRAW);\r\n}\r\n}\r\n","\r\nimport * as twgl from \"twgl.js\";    // Greg's work\r\nimport { m4 } from \"twgl.js\";\r\n\r\nimport * as scene from \"./scene\"\r\nimport * as datgui from \"dat.gui\";\r\nimport * as camhandler from \"./../baseapp/camhandler\"   // camera projection\r\n\r\nimport { TAnimation1Parameters }  from \"./scene\"\r\n\r\n\r\nexport class DrawInstancedScene implements scene.SceneInterface\r\n// https://webgl2fundamentals.org/webgl/lessons/webgl-instanced-drawing.html\r\n{\r\n    twglprograminfo: twgl.ProgramInfo[]|null=null;  // shaders are provided in interface string fields, in this scene twglprograminfo[] remains null\r\n    scenesize=115;\r\n    sceneenv=2;\r\n    positionLocation: number | undefined; // WebGLUniformLocation | undefined;\r\n    cameraPosition: [number,number,number] | undefined\r\n    animationParameters: TAnimation1Parameters | undefined;\r\n    public resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n    public extendGUI(gui: datgui.GUI) {}\r\n  \r\n  gl: WebGL2RenderingContext | undefined;\r\n  fieldOfViewRadians: number  | undefined;\r\n  \r\n   vertexShaderSource = `#version 300 es\r\nin vec4 a_position;\r\nin vec4 color;\r\nin mat4 matrix;\r\nuniform mat4 projection;\r\nuniform mat4 view;\r\n\r\nout vec4 v_color;\r\n\r\nvoid main() {\r\n  // Multiply the position by the matrix.\r\n  gl_Position = projection * view * matrix * a_position;\r\n\r\n  // Pass the vertex color to the fragment shader.\r\n  v_color = color;\r\n}\r\n`;\r\n\r\n fragmentShaderSource = `#version 300 es\r\nprecision highp float;\r\n\r\n// Passed in from the vertex shader.\r\nin vec4 v_color;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  outColor = v_color;\r\n}\r\n`;\r\n\r\nprogram: WebGLProgram | undefined;\r\nprojectionLoc: WebGLUniformLocation | undefined;\r\nviewLoc: WebGLUniformLocation | undefined;\r\nvao: WebGLVertexArrayObject | undefined;\r\n\r\nnumVertices:number = 12;\r\nnumInstances: number = 6;\r\nmatrices: Float32Array[] = [];\r\nmatrixBuffer: WebGLBuffer | undefined;\r\nmatrixData: Float32Array| undefined;\r\n\r\npublic constructor(gl: WebGL2RenderingContext)\r\n{\r\n  this.twglprograminfo=new Array(2);   \r\n  console.log(\"=> scene constructor instanced\")\r\n  this.twglprograminfo[1] = twgl.createProgramInfo(gl, [this.vertexShaderSource, this.fragmentShaderSource]);\r\n  console.log(\"<= scene constructor instanced\")\r\n}\r\n\r\n  initScene(gl: WebGL2RenderingContext, cap: scene.TAnimation1Parameters, dictpar:Map<string,string>, p: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined) \r\n  {\r\n    twgl.setAttributePrefix(\"a_\");\r\n  \r\n    this.gl = gl;\r\n    this.program = p.program;\r\n    //const programInfo = twgl.createProgramInfo(gl, [this.vertexShaderSource, this.fragmentShaderSource]);\r\n    //this.program = programInfo.program;\r\n\r\n    gl.useProgram(this.program);\r\n\r\n    const positionLoc = gl.getAttribLocation(this.program, 'a_position');\r\n    const colorLoc = gl.getAttribLocation(this.program, 'color');\r\n    const matrixLoc = gl.getAttribLocation(this.program, 'matrix');\r\n    this.projectionLoc = gl.getUniformLocation(this.program, 'projection')!;\r\n    this.viewLoc = gl.getUniformLocation(this.program, 'view')!;\r\n\r\n    // Create a vertex array object (attribute state)\r\n    this.vao = gl.createVertexArray()!;\r\n\r\n    // and make it the one we're currently working with\r\n    gl.bindVertexArray(this.vao);\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n      \r\n                      -0.1,  0.4,\r\n                      -0.1, -0.4,\r\n                        0.1, -0.4,\r\n                      -0.1,  0.4,\r\n                      0.1, -0.4,\r\n                      0.1,  0.4, \r\n                      -0.4, -0.1,\r\n                      0.4, -0.1,\r\n                      -0.4,  0.1,\r\n                      -0.4,  0.1,\r\n                        0.4, -0.1,\r\n                        0.4,  0.1, \r\n                \r\n      ]), gl.STATIC_DRAW);\r\n    this.numVertices = 12;\r\n\r\n    // setup the position attribute\r\n    gl.enableVertexAttribArray(positionLoc);\r\n    gl.vertexAttribPointer(\r\n        positionLoc,  // location\r\n        2,            // size (num values to pull from buffer per iteration)\r\n        gl.FLOAT,     // type of data in buffer\r\n        false,        // normalize\r\n        0,            // stride (0 = compute from size and type above)\r\n        0,            // offset in buffer\r\n    );\r\n\r\n    // setup matrixes, one per instance\r\n    this.numInstances = 6;\r\n    // make a typed array with one view per matrix\r\n    this.matrixData = new Float32Array(this.numInstances * 16)!;\r\n    for (let i = 0; i < this.numInstances; ++i) {\r\n      const byteOffsetToMatrix = i * 16 * 4;\r\n      const numFloatsForView = 16;\r\n      this.matrices.push(new Float32Array(\r\n          this.matrixData.buffer,\r\n          byteOffsetToMatrix,\r\n          numFloatsForView));\r\n    }\r\n\r\n    this.matrixBuffer = gl.createBuffer()!;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.matrixBuffer);\r\n    // just allocate the buffer\r\n    gl.bufferData(gl.ARRAY_BUFFER, this.matrixData.byteLength, gl.DYNAMIC_DRAW);\r\n\r\n    // set all 4 attributes for matrix\r\n    const bytesPerMatrix = 4 * 16;\r\n    for (let i = 0; i < 4; ++i) {\r\n      const loc = matrixLoc + i;\r\n      gl.enableVertexAttribArray(loc);\r\n      // note the stride and offset\r\n      const offset = i * 16;  // 4 floats per row, 4 bytes per float\r\n      gl.vertexAttribPointer(\r\n          loc,              // location\r\n          4,                // size (num values to pull from buffer per iteration)\r\n          gl.FLOAT,         // type of data in buffer\r\n          false,            // normalize\r\n          bytesPerMatrix,   // stride, num bytes to advance to get to next set of values\r\n          offset,           // offset in buffer\r\n      );\r\n      // this line says this attribute only changes for each 1 instance\r\n      gl.vertexAttribDivisor(loc, 1);\r\n    }\r\n\r\n    // setup colors, one per instance\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER,\r\n        new Float32Array([\r\n            1, 0, 0, 0.5,  // red\r\n            0, 1, 0, 1,  // green\r\n            0, 0, 1, 1,  // blue\r\n            1, 0, 1, 1,  // magenta\r\n            0, 1, 1, 1,  // cyan\r\n            0, 1, 0, 0.5,  // cyan\r\n          ]),\r\n        gl.STATIC_DRAW);\r\n\r\n    // set attribute for color\r\n    gl.enableVertexAttribArray(colorLoc);\r\n    gl.vertexAttribPointer(colorLoc, 4, gl.FLOAT, false, 0, 0);\r\n    // this line says this attribute only changes for each 1 instance\r\n    gl.vertexAttribDivisor(colorLoc, 1);\r\n\r\n    sceneReadyCallback(0);\r\n\r\n  }\r\n\r\n  public drawScene(gl: WebGL2RenderingContext,cam: camhandler.Camera, time: number) \r\n  {\r\n\r\n    var gl = this.gl!;\r\n    time *= 0.001; // seconds\r\n\r\n  //  twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\n\r\n    // Tell WebGL how to convert from clip space to pixels\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  //  gl.useProgram(this.program!);\r\n\r\n    // set the view and projection matrices since\r\n    // they are shared by all instances\r\n    const aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n    gl.uniformMatrix4fv(this.projectionLoc!, false, m4.ortho(-aspect, aspect, -1, 1, -1, 1));\r\n    gl.uniformMatrix4fv(this.viewLoc!, false, m4.axisRotation([0,0,1],time * .1));\r\n\r\n    // setup all attributes\r\n    gl.bindVertexArray(this.vao!);\r\n\r\n    // update all the matrices\r\n    this.matrices.forEach((mat, ndx) => {\r\n      m4.translation([-0.5 + ndx * 0.25, 0, 0], mat);\r\n      m4.axisRotate(mat, [0,0,1],time * (0.1 + 0.1 * ndx), mat);\r\n    });\r\n\r\n    // upload the new matrix data\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.matrixBuffer!);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.matrixData!);\r\n//console.log(\"draw \"+this.numInstances);\r\n    gl.drawArraysInstanced(\r\n      gl.TRIANGLES,\r\n      0,             // offset\r\n      this.numVertices,   // num vertices per instance\r\n      this.numInstances,  // num instances\r\n    );\r\n  }\r\n \r\n}\r\n\r\n\r\n","import * as twgl from \"twgl.js\"   // Greg's work\r\n\r\nimport * as datgui from \"dat.gui\"\r\n\r\nimport * as camhandler from \"./../baseapp/camhandler\" // camera projection     \r\nimport * as scene from \"./scene\"\r\n\r\nexport class SkyBoxScene implements scene.SceneInterface\r\n{\r\n    // SceneInterface only, skybox is shown in animation container (now animation1.ts)\r\n    scenesize: number = 40;\r\n    sceneenv: number = 1;\r\n    animationParameters: scene.TAnimation1Parameters | undefined;\r\n    vertexShaderSource = ``;\r\n    fragmentShaderSource = ``; \r\n    twglprograminfo: twgl.ProgramInfo[]|null=null;\r\n    cameraPosition: [number,number,number] | undefined\r\n    positionLocation: number | undefined;\r\n    resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n    \r\n    speedpreset: number|undefined;\r\n\r\n    constructor(gl: WebGL2RenderingContext, dictPars: Map<string,string> | undefined)\r\n    { \r\n        this.speedpreset = 0.05;\r\n        if (dictPars?.has(\"speed\"))\r\n        {\r\n            this.speedpreset = +dictPars?.get(\"speed\")!;\r\n            console.log(\"specified: speedpreset=\"+ this.speedpreset) ;\r\n        }\r\n    }\r\n\r\n    initScene(gl: WebGL2RenderingContext, cap:scene.TAnimation1Parameters, dictpar:Map<string,string>, progenv: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined)\r\n    { \r\n        this.animationParameters=(this.animationParameters==undefined)?cap:this.animationParameters;\r\n        if (this.speedpreset) this.animationParameters.b.speed = this.speedpreset!;\r\n        sceneReadyCallback(0); \r\n    }\r\n\r\n    extendGUI(gui: datgui.GUI)\r\n    { \r\n        gui.add(this.animationParameters!, 'fov', 5.0,85.0,1.0 );\r\n \r\n    }\r\n  \r\n    drawScene(gl: WebGL2RenderingContext, cam: camhandler.Camera, time: number) \r\n    { }\r\n}\r\n","import * as twgl from \"twgl.js\"   // Greg's work\r\n\r\nimport * as datgui from \"dat.gui\"\r\n\r\nimport * as camhandler from \"./../baseapp/camhandler\" // camera projection     \r\nimport * as scene from \"./scene\"\r\n\r\nexport class SkyBoxCubeScene implements scene.SceneInterface\r\n{\r\n    vaoCube: WebGLVertexArrayObject | undefined;\r\n    reflectingCubeBufferInfo: twgl.BufferInfo | undefined;\r\n\r\n   \r\n    // SceneInterface only, skybox is shown in animation container (now animation1.ts)\r\n    scenesize: number = 40;\r\n    sceneenv: number = 1;\r\n    animationParameters: scene.TAnimation1Parameters | undefined;\r\n    vertexShaderSource = ``;\r\n    fragmentShaderSource = ``; \r\n    twglprograminfo: twgl.ProgramInfo[]|null=null;\r\n    //cameraPosition: [number,number,number] | undefined\r\n    positionLocation: number | undefined;\r\n    resizeCanvas(gl: WebGL2RenderingContext) { twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement); }\r\n    \r\n    fieldOfViewRadians: number;\r\n    \r\n    worldMatrix: twgl.m4.Mat4 | undefined;\r\n    viewMatrix: twgl.m4.Mat4 | undefined;\r\n    projectionMatrix: twgl.m4.Mat4 | undefined;\r\n    viewDirectionMatrix: twgl.m4.Mat4 | undefined;\r\n    texture: WebGLTexture | undefined;\r\n\r\n    public constructor(gl: WebGL2RenderingContext)\r\n    {\r\n      this.vertexShaderSource = this.vsMirrorCube;\r\n      this.fragmentShaderSource = this.fsMirrorCube;\r\n    \r\n      this.twglprograminfo=new Array(2);   \r\n      this.twglprograminfo![1] = twgl.createProgramInfo(gl, [this.vsMirrorCube, this.fsMirrorCube]);\r\n\r\n      this.fieldOfViewRadians = 60* Math.PI / 180;\r\n    }\r\n\r\n    protected createReflectingCubeGeo(gl: WebGL2RenderingContext)\r\n    {\r\n      this.reflectingCubeBufferInfo = twgl.primitives.createCubeBufferInfo(gl, 1.2);\r\n      this.vaoCube = twgl.createVAOFromBufferInfo(gl,this.twglprograminfo![1], this.reflectingCubeBufferInfo)!;\r\n    }\r\n\r\n    parameters: scene.TAnimation1Parameters | undefined; \r\n    initScene(gl: WebGL2RenderingContext, cap:scene.TAnimation1Parameters, dictpar:Map<string,string>, progenv: twgl.ProgramInfo, sceneReadyCallback: (a:any)=>void | undefined)\r\n    { \r\n        this.parameters = cap;\r\n        this.parameters.b.move= false;\r\n        this.createReflectingCubeGeo(gl);  \r\n       // console.log(\"dictpar[r0]=\"+dictpar.get('radius0'));          \r\n        sceneReadyCallback(0); \r\n    }\r\n\r\n    extendGUI(gui: datgui.GUI)\r\n    { \r\n      gui.add(this.animationParameters!, 'fov', 5.0,85.0,1.0 );\r\n  \r\n    }\r\n\r\n     // camera\r\n     public cameraTarget: number[] | undefined;\r\n     public cameraPosition: [number,number,number] | undefined;\r\n  \r\n     \r\n    restorePositionAttributeContext(gl: WebGL2RenderingContext, posBuffer: WebGLBuffer, posAttributeLocation: number, size: number)\r\n    {\r\n      // ==> 2023-03-01 restore this part to solve the clear error\r\n        // 1. Bind the buffer\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);\r\n        // 2. Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        //var size = 2;          // 2 components per iteration\r\n        var type = gl.FLOAT;   // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        var offset = 0;        // start at the beginning of the buffer\r\n        gl.vertexAttribPointer(posAttributeLocation, size, type, normalize, stride, offset);\r\n        // 3. Enable this\r\n        gl.enableVertexAttribArray(posAttributeLocation);\r\n        // <==\r\n    }\r\n\r\n    drawScene(gl: WebGL2RenderingContext, cam: camhandler.Camera, time: number) \r\n    { \r\n        this.cameraTarget = [0,0,0];\r\n        this.cameraPosition =  [0.1*cam.Position()![0],0.1*cam.Position()![1],0.1*cam.Position()![2]];\r\n        \r\n    // Build a view matrix for the mirror cube.\r\n        var aspect = (gl.canvas as HTMLCanvasElement).clientWidth / (gl.canvas as HTMLCanvasElement).clientHeight;\r\n        this.projectionMatrix = twgl.m4.perspective(this.fieldOfViewRadians, aspect, 1, 2000);\r\n        // Build a view matrix.\r\n        var up = [0, 1, 0];\r\n        var cameraMatrix = twgl.m4.lookAt(this.cameraPosition, this.cameraTarget, up);\r\n        this.viewMatrix = twgl.m4.inverse(cameraMatrix);\r\n\r\n        var movecube = this.parameters?.movetail;\r\n        var angVelocityCube = 0.005;\r\n        \r\n        // Rotate the cube around the x axis\r\n        if (movecube)\r\n        this.worldMatrix = twgl.m4.axisRotation( [0,1,0] as twgl.v3.Vec3 ,this.parameters!.b.speed! * (time+0.1) * angVelocityCube);\r\n        else \r\n        this.worldMatrix = twgl.m4.translation([0,0,0]); // twgl.m4.identity();\r\n\r\n\r\n        // draw the mirror cube\r\n        if (this.viewMatrix==undefined)this.viewMatrix=twgl.m4.identity();\r\n        if (this.projectionMatrix==undefined)this.projectionMatrix=twgl.m4.identity();\r\n\r\n      //  gl.useProgram(this.twglprograminfo![1].program);      \r\n        gl.depthFunc(gl.LESS);  // use the default depth test\r\n\r\n        gl.bindVertexArray(this.vaoCube!);  \r\n     //   this.restorePositionAttributeContext(gl, this.reflectingCubeBufferInfo!.attribs posBuffer: WebGLBuffer, posAttributeLocation: number, size: number)\r\n     \r\n   //  var bb=this.reflectingCubeBufferInfo!.indices;\r\n   //  if (bb!=null) gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bb);\r\n     //var bb=this.reflectingCubeBufferInfo!.attribs![\"\"]!;\r\n\r\n        //foreach(()=>)\r\n\r\n        twgl.setUniforms(this.twglprograminfo![1]!, {\r\n            u_world: this.worldMatrix,\r\n            u_view: this.viewMatrix,\r\n            u_projection: this.projectionMatrix,\r\n            u_texture: this.texture,\r\n            u_worldCameraPosition: this.cameraPosition,\r\n        });\r\n        twgl.drawBufferInfo(gl, this.reflectingCubeBufferInfo!);\r\n        gl.flush();\r\n    }\r\n\r\n        //--- Shaders for the mirrorCoube -------------------------------------------------------------------------\r\n\r\n        vsMirrorCube = `#version 300 es\r\n    \r\n        in vec4 a_position;\r\n        in vec3 a_normal;\r\n        \r\n        uniform mat4 u_projection;\r\n        uniform mat4 u_view;\r\n        uniform mat4 u_world;\r\n        \r\n        out vec3 v_worldPosition;\r\n        out vec3 v_worldNormal;\r\n        \r\n        void main() {\r\n          // Multiply the position by the matrix.\r\n          gl_Position = u_projection * u_view * u_world * a_position;\r\n        \r\n          // send the view position to the fragment shader\r\n          v_worldPosition = (u_world * a_position).xyz;\r\n        \r\n          // orient the normals and pass to the fragment shader\r\n          v_worldNormal = mat3(u_world) * a_normal;\r\n        }\r\n        `;\r\n        \r\n        fsMirrorCube = `#version 300 es\r\n        precision highp float;\r\n        \r\n        // Passed in from the vertex shader.\r\n        in vec3 v_worldPosition;\r\n        in vec3 v_worldNormal;\r\n        \r\n        // The texture.\r\n        uniform samplerCube u_texture;\r\n        \r\n        // The position of the camera\r\n        uniform vec3 u_worldCameraPosition;\r\n        \r\n        // we need to declare an output for the fragment shader\r\n        out vec4 outColor;\r\n        \r\n        void main() {\r\n          vec3 worldNormal = normalize(v_worldNormal);\r\n          vec3 eyeToSurfaceDir = normalize(v_worldPosition - u_worldCameraPosition);\r\n          vec3 direction = reflect(eyeToSurfaceDir,worldNormal);\r\n        \r\n          outColor = texture(u_texture, direction);\r\n        }\r\n        `;\r\n    \r\n}\r\n","//==================================================================================================================================\r\n\r\nimport * as mtls from \"./baseapp/mouselistener\";   // connect events for mouse and mouse wheel\r\n\r\nimport * as skeleton from \"./skeleton\"             // task: bone model (single)\r\nimport * as fish from \"./fishanimation\"            // task: bone model (flock)\r\nimport * as manytextures from \"./manytextures\"     // task: camera projection\r\nimport * as manytexturescene from \"./scene/manytexturescene\"     // task: camera projection\r\nimport * as drawimagespace from \"./drawimagespace\" // task: image space texture\r\nimport * as animation1 from \"./animation1\" // task: image space texture\r\nimport * as skyboxcube from \"./skyboxcube\"         // task: show reflecting box\r\nimport * as objmtlimport from \"./objmtlimport.js\"; // task: obj/mtl file imports\r\nimport * as rotatingcubescene from \"./scene/mixedtexturescene\";\r\nimport * as lightscene from \"./scene/lightscene\";\r\nimport * as objectlist from \"./objectlist\";\r\nimport * as objectlistscene from \"./scene/objectlistscene\";\r\nimport * as drawinstanced from \"./drawinstanced\";\r\nimport * as canvas3dtexture from \"./canvas3dtexture\";\r\nimport * as canvas3dtexturescene from \"./scene/canvas3dtexturescene\";\r\nimport * as drawinstancedscene from \"./scene/drawinstancedscene\";\r\nimport * as skyboxscene from \"./scene/skyboxscene\";\r\nimport * as scene from \"./scene/scene\";\r\nimport * as skyboxcubescene from \"./scene/skyboxcubescene\";\r\n\r\nconst ShowOBJMTL     = 1;\r\nconst ShowTextures   = 2;\r\nconst ShowFish       = 3; \r\nconst ShowSkyBox     = 4; \r\nconst ShowAnimation1 = 5; \r\n\r\nvar selectedShow    = ShowAnimation1;\r\n\r\nvar cdiv = 'c';  // name of canvas accessed by gl\r\n\r\n//=== DISPATCH TASKS =================================================================================================================\r\n\r\n\r\nfunction preparedefaultparameters(dictPars: Map<string,string>)\r\n{\r\n  switch (selectedShow)\r\n  {\r\n        case ShowFish:\r\n          {\r\n            console.log(\"ShowFish\");\r\n            dictPars.set(\"fish\",\"\");\r\n            dictPars.set(\"radius0\",\"90\");\r\n            dictPars.set(\"mesh\",\"strip\");\r\n            dictPars.set(\"hx\",\"1.2\");\r\n            dictPars.set(\"hy\",\"0.1\");\r\n            dictPars.set(\"stride\",\"180\");\r\n            dictPars.set(\"numrows\",\"39\");\r\n            break;\r\n          }\r\n\r\n          case ShowSkyBox:\r\n            {\r\n              console.log(\"Skybox\");\r\n              dictPars.set(\"skybox\",\"\");\r\n              dictPars.set(\"radius0\",\"60\");\r\n              dictPars.set(\"mesh\",\"strip\");\r\n              dictPars.set(\"hx\",\"1.2\");\r\n              dictPars.set(\"hy\",\"0.1\");\r\n              dictPars.set(\"stride\",\"180\");\r\n              dictPars.set(\"numrows\",\"39\");\r\n              break;\r\n            }\r\n\r\n        case ShowTextures:\r\n          {\r\n            console.log(\"ShowTextures\");\r\n            dictPars.set(\"textures\",\"\");\r\n            break; \r\n          }\r\n\r\n        case ShowAnimation1:\r\n        case ShowOBJMTL:\r\n          {\r\n            dictPars.set(\"radius0\",\"45\");\r\n            dictPars.set(\"hx\",\"-0.68\");\r\n            dictPars.set(\"hy\",\"0.47\");\r\n            dictPars.set(\"hxl\",\"-0.61\");\r\n            dictPars.set(\"difflight\",\"0.5\");\r\n            dictPars.set(\"speclight\",\"0.5\"); \r\n            break;\r\n          }\r\n        default: return;\r\n  }\r\n}\r\n\r\nvar baseapppars = {move: true, speed: 0.01, color0:\"#A0A0A0\"};\r\nvar defaultParameters: scene.TAnimation1Parameters = { b: baseapppars, movetail: true, texture: 'geotriangle2',typelight:'point light',  sling:117,  shininess:11.0, fov: 60 };\r\n \r\nfunction initScene(gl: WebGL2RenderingContext, app: mtls.MouseListener, dictPars: Map<string,string> | undefined, scene: scene.SceneInterface )\r\n{\r\n  var mta1 = new animation1.Animation1(gl, app, scene, dictPars!, cdiv);\r\n  mta1.main(gl, dictPars!);\r\n  mta1.initGUI(defaultParameters);\r\n}\r\n\r\nfunction show(gl: WebGL2RenderingContext, app: mtls.MouseListener, dictPars: Map<string,string> | undefined  )\r\n{\r\n  // Default parameters for all Animation1 scenes\r\n \r\n  //--- Scene animations using Animation1 ----------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  if (dictPars?.get(\"animation1\")!=undefined) initScene(gl, app, dictPars, new rotatingcubescene.MixedTextureScene(gl));\r\n  else if (dictPars?.get(\"animation3\")!=undefined) initScene(gl, app, dictPars, new lightscene.LightScene(gl)); \r\n  else if (dictPars?.get(\"animation0\")!=undefined)\r\n  {\r\n    var mta1 = new animation1.Animation1(gl, app, new skyboxscene.SkyBoxScene(gl,dictPars), dictPars, cdiv);\r\n    mta1.main(gl, dictPars);\r\n    mta1.initGUI(defaultParameters);\r\n  } \r\n  else if (dictPars?.get(\"animation4\")!=undefined)\r\n  {\r\n    var mta1 = new animation1.Animation1(gl, app, new skyboxcubescene.SkyBoxCubeScene(gl), dictPars, cdiv);\r\n    //var sbs = mta1.scene as skyboxcubescene.SkyBoxCubeScene;\r\n    mta1.main(gl, dictPars);\r\n    (mta1.scene as skyboxcubescene.SkyBoxCubeScene).texture=mta1.texture!;\r\n    mta1.initGUI(defaultParameters);\r\n  } \r\n  else if (dictPars?.get(\"animation5\")!=undefined)\r\n  {\r\n    var mta1 = new animation1.Animation1(gl, app, new manytexturescene.ManyTexturesScene(gl), dictPars, cdiv);\r\n    mta1.main(gl, dictPars);\r\n    mta1.initGUI(defaultParameters);\r\n  }  \r\n  else\r\n  if (dictPars?.get(\"animation6\")!=undefined)\r\n  {\r\n    var mta1 = new animation1.Animation1(gl, app, new objectlistscene.ObjectListScene(gl), dictPars, cdiv);\r\n    mta1.main(gl, dictPars);\r\n    mta1.initGUI(defaultParameters);\r\n  } \r\n  else if (dictPars?.get(\"animation7\")!=undefined)\r\n  {\r\n    var mta1 = new animation1.Animation1(gl, app, new drawinstancedscene.DrawInstancedScene(gl), dictPars, cdiv);\r\n    mta1.main(gl, dictPars);\r\n    mta1.initGUI(defaultParameters);\r\n  }  \r\n  else if (dictPars?.get(\"animation8\")!=undefined)\r\n  {\r\n    var mta1 = new animation1.Animation1(gl, app, new canvas3dtexturescene.Canvas3dTextureScene(gl), dictPars, cdiv);\r\n    mta1.main(gl, dictPars);\r\n    mta1.initGUI(defaultParameters);\r\n  }  \r\n  //--- Animations with a specific parameter set based on twglbaseapp ------------------------------------------------------------------------------------------------------------------\r\n  else \r\n  if (dictPars?.get(\"drawimagespace\")!=undefined)\r\n  {\r\n    var ims = new drawimagespace.drawimagespace(gl,app,dictPars,cdiv); \r\n    console.log(\"imscreated.\");\r\n    ims.main(gl,dictPars);\r\n    console.log(\"ins.main done.\");\r\n    ims.initGUI({ move: false, teal: true, speed: 0.4, texture: 'geotriangle2',color0: \"#D0A010\"  }); \r\n  } \r\n  else  if (dictPars?.get(\"skeleton\")!=undefined)\r\n  {\r\n    var sk = new skeleton.Skeleton(gl, app, dictPars!, cdiv);\r\n    var baseapppars = {move: true, speed: 0.4, color0:\"#A0A0A0\"};\r\n    sk.initGUI({move:false,movetail:true, speed:0.06,texture:\"zelenskyy\",color0:\"#afb9af\" });\r\n    sk.main(gl, dictPars);\r\n  } \r\n  else if (dictPars?.get(\"fish\")!=undefined)\r\n  {  \r\n    var fa = new fish.FishAnimation(gl, app, dictPars!, cdiv);\r\n    var baseapppars = {move: true, speed: 0.4, color0:\"#A0A0A0\"};\r\n    fa.initGUI({ b: baseapppars, movetail: true, texture: 'geotriangle2',  sling:117 });\r\n    fa.main(gl, dictPars);\r\n  } \r\n  else if (dictPars?.get(\"skyboxcube\")!=undefined)\r\n  {  \r\n    var sbc  = new skyboxcube.skyboxcube(gl,app,dictPars, cdiv); \r\n    sbc.main(gl, dictPars);\r\n    sbc.initGUI({movecube:true, moveenv:true, fieldOfViewDegrees:32, radiusCam:5.0, angVelocityCam:0.005, angVelocityCube:0.003 });\r\n  } \r\n \r\n   //--- Animations with a specific parameter set ----------------------------------------------------------------------------------------------------------------------------------\r\n   else\r\n   if(dictPars?.get(\"canvas3dtexture\")!=undefined)\r\n   {\r\n     var mtat = new canvas3dtexture.Canvas3dTexture();\r\n     mtat.main(gl);\r\n   }\r\n   else if (dictPars?.get(\"objectlist\")!=undefined)\r\n   {\r\n     var mtao = new objectlist.ObjectList();\r\n     mtao.main(gl);\r\n   } \r\n   else if (dictPars?.get(\"drawinstanced\")!=undefined)\r\n   {\r\n     var mtai = new drawinstanced.DrawInstanced();\r\n     mtai.main(gl);\r\n   } \r\n   else if (dictPars?.get(\"textures\")!=undefined)\r\n   {\r\n     var mt = new manytextures.ManyTextures(gl, app, dictPars);\r\n     mt.main(gl, dictPars);\r\n     mt.initGUI({ move: true,speed: 0.4,texture: 'geotriangle2', color0: \"#A0A0A0\",});\r\n   } \r\n  \r\n  else  // any other, take first argument as OBJ/MTL to show\r\n  {\r\n    var oi = new objmtlimport.ObjMtlImport(gl, app, dictPars!);\r\n    oi.main(gl, dictPars!);\r\n    oi.initGUI({ move: false,  speed: 0,  texture: '', color0: \"#9cbbcd\" });\r\n  }      \r\n}\r\n\r\n//=== ENTRY MAIN ===============================================================================================================================\r\n\r\nfunction main() \r\n{   \r\n // var canvas: HTMLCanvasElement = document.querySelector(\"#c\")!;\r\n  var canvas: HTMLCanvasElement = document.querySelector(\"#c\")!;\r\n  var gl: WebGL2RenderingContext|null = canvas.getContext(\"webgl2\", {premultipliedAlpha: false });//, preserveDrawingBuffer: true}); // { preserveDrawingBuffer: true }); //,{ premultipliedAlpha: false, powerPreference: 'high-performance' } );\r\n  if (canvas && gl)\r\n  {\r\n    var app: mtls.MouseListener | undefined; \r\n    var dictPars: Map<string,string> |undefined;\r\n    var s = window.location.href;\r\n    if (s.includes(\"?\"))\r\n    {\r\n      // == fetch URL arguments\r\n      dictPars = new Map<string,string>();\r\n      var p = s.indexOf(\"?\");\r\n      var spar = s.substring(p+1),ppar=\"\", cpar=\"\";\r\n      while (spar.indexOf(\"&\")>0)\r\n          {\r\n            ppar = spar.substring(0,spar.indexOf(\"&\"));\r\n            var pp=ppar.indexOf(\"=\");\r\n            if (pp>=0)\r\n            {\r\n              cpar = ppar.substring(0,pp);\r\n              ppar = ppar.substring(1+pp);\r\n              dictPars.set(cpar,ppar);\r\n            }\r\n            else dictPars.set(ppar,\"\");\r\n            spar = spar.substring(spar.indexOf(\"&\")+1);\r\n          }\r\n      p = spar.indexOf(\"=\");\r\n      if (p>=0) \r\n        { \r\n          cpar=spar.substring(0,p);       \r\n          ppar=spar.substring(1+p); \r\n          dictPars.set(cpar,ppar);\r\n        } else dictPars.set(spar,\"\");  \r\n    }    \r\n    if (dictPars==undefined) // in case URL arguments, prepare the show parameters\r\n    {  \r\n      console.log(\"No URL arguments, prepare defaults for \"+ selectedShow);\r\n      preparedefaultparameters(dictPars= new Map<string,string>());\r\n    }\r\n    // report parameters set\r\n    dictPars.forEach((value: string, key: string) => { console.log(\"UrlPars key=\"+key+\" value=\"+value); });\r\n\r\n    // context found, create app connecting canvas with default mouse listeners\r\n    app = new mtls.MouseListener(canvas);\r\n    app.OnMouseWheel = (eventstring: string ) =>  { (document.getElementById('app') as HTMLDivElement).innerHTML = \"mousewheel: [\"+eventstring+\"]\"; };\r\n    app.OnMouseMove =  (eventstring: string ) =>  { (document.getElementById('comment') as HTMLDivElement).innerHTML = \"mousemove: [\"+eventstring+\"]\"; };\r\n    app.OnMouseDown =  (eventstring: string ) =>  { (document.getElementById('app') as HTMLDivElement).innerHTML = \"mousedown: [\"+eventstring+\"]\"; };\r\n    app.OnMouseUp =  (eventstring: string )   =>  { (document.getElementById('app') as HTMLDivElement).innerHTML = \"mouseup: [\"+eventstring+\"] \"; }\r\n\r\n    show(gl, app, dictPars);  // LAUNCH\r\n  }\r\n}\r\n\r\nmain();"]}